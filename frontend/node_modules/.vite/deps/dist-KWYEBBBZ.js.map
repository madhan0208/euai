{
  "version": 3,
  "sources": ["../../performance-now/src/performance-now.coffee", "../../raf/index.js", "../../rgbcolor/index.js", "../../svg-pathdata/node_modules/tslib/tslib.es6.js", "../../svg-pathdata/src/SVGPathDataEncoder.ts", "../../svg-pathdata/src/mathUtils.ts", "../../svg-pathdata/src/SVGPathDataTransformer.ts", "../../svg-pathdata/src/TransformableSVG.ts", "../../svg-pathdata/src/SVGPathDataParser.ts", "../../svg-pathdata/src/SVGPathData.ts", "../../stackblur-canvas/dist/stackblur-es.js", "../../canvg/src/presets/offscreen.ts", "../../canvg/src/presets/node.ts", "../../canvg/src/util/string.ts", "../../canvg/src/util/styles.ts", "../../canvg/src/util/math.ts", "../../canvg/src/Property.ts", "../../canvg/src/ViewPort.ts", "../../canvg/src/Point.ts", "../../canvg/src/Mouse.ts", "../../canvg/src/Screen.ts", "../../canvg/src/Parser.ts", "../../canvg/src/Transform/Translate.ts", "../../canvg/src/Transform/Rotate.ts", "../../canvg/src/Transform/Scale.ts", "../../canvg/src/Transform/Matrix.ts", "../../canvg/src/Transform/Skew.ts", "../../canvg/src/Transform/SkewX.ts", "../../canvg/src/Transform/SkewY.ts", "../../canvg/src/Transform/Transform.ts", "../../canvg/src/Document/Element.ts", "../../canvg/src/Document/UnknownElement.ts", "../../canvg/src/Font.ts", "../../canvg/src/BoundingBox.ts", "../../canvg/src/Document/RenderedElement.ts", "../../canvg/src/Document/TextElement.ts", "../../canvg/src/Document/TSpanElement.ts", "../../canvg/src/Document/TextNode.ts", "../../canvg/src/PathParser.ts", "../../canvg/src/Document/PathElement.ts", "../../canvg/src/Document/SVGElement.ts", "../../canvg/src/Document/RectElement.ts", "../../canvg/src/Document/CircleElement.ts", "../../canvg/src/Document/EllipseElement.ts", "../../canvg/src/Document/LineElement.ts", "../../canvg/src/Document/PolylineElement.ts", "../../canvg/src/Document/PolygonElement.ts", "../../canvg/src/Document/PatternElement.ts", "../../canvg/src/Document/MarkerElement.ts", "../../canvg/src/Document/DefsElement.ts", "../../canvg/src/Document/GElement.ts", "../../canvg/src/Document/GradientElement.ts", "../../canvg/src/Document/LinearGradientElement.ts", "../../canvg/src/Document/RadialGradientElement.ts", "../../canvg/src/Document/StopElement.ts", "../../canvg/src/Document/AnimateElement.ts", "../../canvg/src/Document/AnimateColorElement.ts", "../../canvg/src/Document/AnimateTransformElement.ts", "../../canvg/src/Document/FontFaceElement.ts", "../../canvg/src/Document/GlyphElement.ts", "../../canvg/src/Document/MissingGlyphElement.ts", "../../canvg/src/Document/FontElement.ts", "../../canvg/src/Document/TRefElement.ts", "../../canvg/src/Document/AElement.ts", "../../canvg/src/Document/TextPathElement.ts", "../../canvg/src/Document/ImageElement.ts", "../../canvg/src/Document/SymbolElement.ts", "../../canvg/src/SVGFontLoader.ts", "../../canvg/src/Document/StyleElement.ts", "../../canvg/src/Document/UseElement.ts", "../../canvg/src/Document/FeColorMatrixElement.ts", "../../canvg/src/Document/MaskElement.ts", "../../canvg/src/Document/ClipPathElement.ts", "../../canvg/src/Document/FilterElement.ts", "../../canvg/src/Document/FeDropShadowElement.ts", "../../canvg/src/Document/FeMorphologyElement.ts", "../../canvg/src/Document/FeCompositeElement.ts", "../../canvg/src/Document/FeGaussianBlurElement.ts", "../../canvg/src/Document/TitleElement.ts", "../../canvg/src/Document/DescElement.ts", "../../canvg/src/Document/elements.ts", "../../canvg/src/Document/Document.ts", "../../canvg/src/Canvg.ts"],
  "sourcesContent": ["if performance? and performance.now\n  module.exports = -> performance.now()\nelse if process? and process.hrtime\n  module.exports = -> (getNanoSeconds() - nodeLoadTime) / 1e6\n  hrtime = process.hrtime\n  getNanoSeconds = ->\n    hr = hrtime()\n    hr[0] * 1e9 + hr[1]\n  moduleLoadTime = getNanoSeconds()\n  upTime = process.uptime() * 1e9\n  nodeLoadTime = moduleLoadTime - upTime\nelse if Date.now\n  module.exports = -> Date.now() - loadTime\n  loadTime = Date.now()\nelse\n  module.exports = -> new Date().getTime() - loadTime\n  loadTime = new Date().getTime()\n", "var now = require('performance-now')\n  , root = typeof window === 'undefined' ? global : window\n  , vendors = ['moz', 'webkit']\n  , suffix = 'AnimationFrame'\n  , raf = root['request' + suffix]\n  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]\n\nfor(var i = 0; !raf && i < vendors.length; i++) {\n  raf = root[vendors[i] + 'Request' + suffix]\n  caf = root[vendors[i] + 'Cancel' + suffix]\n      || root[vendors[i] + 'CancelRequest' + suffix]\n}\n\n// Some versions of FF have rAF but not cAF\nif(!raf || !caf) {\n  var last = 0\n    , id = 0\n    , queue = []\n    , frameDuration = 1000 / 60\n\n  raf = function(callback) {\n    if(queue.length === 0) {\n      var _now = now()\n        , next = Math.max(0, frameDuration - (_now - last))\n      last = next + _now\n      setTimeout(function() {\n        var cp = queue.slice(0)\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0\n        for(var i = 0; i < cp.length; i++) {\n          if(!cp[i].cancelled) {\n            try{\n              cp[i].callback(last)\n            } catch(e) {\n              setTimeout(function() { throw e }, 0)\n            }\n          }\n        }\n      }, Math.round(next))\n    }\n    queue.push({\n      handle: ++id,\n      callback: callback,\n      cancelled: false\n    })\n    return id\n  }\n\n  caf = function(handle) {\n    for(var i = 0; i < queue.length; i++) {\n      if(queue[i].handle === handle) {\n        queue[i].cancelled = true\n      }\n    }\n  }\n}\n\nmodule.exports = function(fn) {\n  // Wrap in a new function to prevent\n  // `cancel` potentially being assigned\n  // to the native rAF function\n  return raf.call(root, fn)\n}\nmodule.exports.cancel = function() {\n  caf.apply(root, arguments)\n}\nmodule.exports.polyfill = function(object) {\n  if (!object) {\n    object = root;\n  }\n  object.requestAnimationFrame = raf\n  object.cancelAnimationFrame = caf\n}\n", "/*\n\tBased on rgbcolor.js by Stoyan Stefanov <sstoo@gmail.com>\n\thttp://www.phpied.com/rgb-color-parser-in-javascript/\n*/\n\nmodule.exports = function(color_string) {\n    this.ok = false;\n    this.alpha = 1.0;\n\n    // strip any leading #\n    if (color_string.charAt(0) == '#') { // remove # if any\n        color_string = color_string.substr(1,6);\n    }\n\n    color_string = color_string.replace(/ /g,'');\n    color_string = color_string.toLowerCase();\n\n    // before getting into regexps, try simple matches\n    // and overwrite the input\n    var simple_colors = {\n        aliceblue: 'f0f8ff',\n        antiquewhite: 'faebd7',\n        aqua: '00ffff',\n        aquamarine: '7fffd4',\n        azure: 'f0ffff',\n        beige: 'f5f5dc',\n        bisque: 'ffe4c4',\n        black: '000000',\n        blanchedalmond: 'ffebcd',\n        blue: '0000ff',\n        blueviolet: '8a2be2',\n        brown: 'a52a2a',\n        burlywood: 'deb887',\n        cadetblue: '5f9ea0',\n        chartreuse: '7fff00',\n        chocolate: 'd2691e',\n        coral: 'ff7f50',\n        cornflowerblue: '6495ed',\n        cornsilk: 'fff8dc',\n        crimson: 'dc143c',\n        cyan: '00ffff',\n        darkblue: '00008b',\n        darkcyan: '008b8b',\n        darkgoldenrod: 'b8860b',\n        darkgray: 'a9a9a9',\n        darkgreen: '006400',\n        darkkhaki: 'bdb76b',\n        darkmagenta: '8b008b',\n        darkolivegreen: '556b2f',\n        darkorange: 'ff8c00',\n        darkorchid: '9932cc',\n        darkred: '8b0000',\n        darksalmon: 'e9967a',\n        darkseagreen: '8fbc8f',\n        darkslateblue: '483d8b',\n        darkslategray: '2f4f4f',\n        darkturquoise: '00ced1',\n        darkviolet: '9400d3',\n        deeppink: 'ff1493',\n        deepskyblue: '00bfff',\n        dimgray: '696969',\n        dodgerblue: '1e90ff',\n        feldspar: 'd19275',\n        firebrick: 'b22222',\n        floralwhite: 'fffaf0',\n        forestgreen: '228b22',\n        fuchsia: 'ff00ff',\n        gainsboro: 'dcdcdc',\n        ghostwhite: 'f8f8ff',\n        gold: 'ffd700',\n        goldenrod: 'daa520',\n        gray: '808080',\n        green: '008000',\n        greenyellow: 'adff2f',\n        honeydew: 'f0fff0',\n        hotpink: 'ff69b4',\n        indianred : 'cd5c5c',\n        indigo : '4b0082',\n        ivory: 'fffff0',\n        khaki: 'f0e68c',\n        lavender: 'e6e6fa',\n        lavenderblush: 'fff0f5',\n        lawngreen: '7cfc00',\n        lemonchiffon: 'fffacd',\n        lightblue: 'add8e6',\n        lightcoral: 'f08080',\n        lightcyan: 'e0ffff',\n        lightgoldenrodyellow: 'fafad2',\n        lightgrey: 'd3d3d3',\n        lightgreen: '90ee90',\n        lightpink: 'ffb6c1',\n        lightsalmon: 'ffa07a',\n        lightseagreen: '20b2aa',\n        lightskyblue: '87cefa',\n        lightslateblue: '8470ff',\n        lightslategray: '778899',\n        lightsteelblue: 'b0c4de',\n        lightyellow: 'ffffe0',\n        lime: '00ff00',\n        limegreen: '32cd32',\n        linen: 'faf0e6',\n        magenta: 'ff00ff',\n        maroon: '800000',\n        mediumaquamarine: '66cdaa',\n        mediumblue: '0000cd',\n        mediumorchid: 'ba55d3',\n        mediumpurple: '9370d8',\n        mediumseagreen: '3cb371',\n        mediumslateblue: '7b68ee',\n        mediumspringgreen: '00fa9a',\n        mediumturquoise: '48d1cc',\n        mediumvioletred: 'c71585',\n        midnightblue: '191970',\n        mintcream: 'f5fffa',\n        mistyrose: 'ffe4e1',\n        moccasin: 'ffe4b5',\n        navajowhite: 'ffdead',\n        navy: '000080',\n        oldlace: 'fdf5e6',\n        olive: '808000',\n        olivedrab: '6b8e23',\n        orange: 'ffa500',\n        orangered: 'ff4500',\n        orchid: 'da70d6',\n        palegoldenrod: 'eee8aa',\n        palegreen: '98fb98',\n        paleturquoise: 'afeeee',\n        palevioletred: 'd87093',\n        papayawhip: 'ffefd5',\n        peachpuff: 'ffdab9',\n        peru: 'cd853f',\n        pink: 'ffc0cb',\n        plum: 'dda0dd',\n        powderblue: 'b0e0e6',\n        purple: '800080',\n        rebeccapurple: '663399',\n        red: 'ff0000',\n        rosybrown: 'bc8f8f',\n        royalblue: '4169e1',\n        saddlebrown: '8b4513',\n        salmon: 'fa8072',\n        sandybrown: 'f4a460',\n        seagreen: '2e8b57',\n        seashell: 'fff5ee',\n        sienna: 'a0522d',\n        silver: 'c0c0c0',\n        skyblue: '87ceeb',\n        slateblue: '6a5acd',\n        slategray: '708090',\n        snow: 'fffafa',\n        springgreen: '00ff7f',\n        steelblue: '4682b4',\n        tan: 'd2b48c',\n        teal: '008080',\n        thistle: 'd8bfd8',\n        tomato: 'ff6347',\n        turquoise: '40e0d0',\n        violet: 'ee82ee',\n        violetred: 'd02090',\n        wheat: 'f5deb3',\n        white: 'ffffff',\n        whitesmoke: 'f5f5f5',\n        yellow: 'ffff00',\n        yellowgreen: '9acd32'\n    };\n    color_string = simple_colors[color_string] || color_string;\n    // emd of simple type-in colors\n\n    // array of color definition objects\n    var color_defs = [\n        {\n            re: /^rgba\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3}),\\s*((?:\\d?\\.)?\\d)\\)$/,\n            example: ['rgba(123, 234, 45, 0.8)', 'rgba(255,234,245,1.0)'],\n            process: function (bits){\n                return [\n                    parseInt(bits[1]),\n                    parseInt(bits[2]),\n                    parseInt(bits[3]),\n                    parseFloat(bits[4])\n                ];\n            }\n        },\n        {\n            re: /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/,\n            example: ['rgb(123, 234, 45)', 'rgb(255,234,245)'],\n            process: function (bits){\n                return [\n                    parseInt(bits[1]),\n                    parseInt(bits[2]),\n                    parseInt(bits[3])\n                ];\n            }\n        },\n        {\n            re: /^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n            example: ['#00ff00', '336699'],\n            process: function (bits){\n                return [\n                    parseInt(bits[1], 16),\n                    parseInt(bits[2], 16),\n                    parseInt(bits[3], 16)\n                ];\n            }\n        },\n        {\n            re: /^([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n            example: ['#fb0', 'f0f'],\n            process: function (bits){\n                return [\n                    parseInt(bits[1] + bits[1], 16),\n                    parseInt(bits[2] + bits[2], 16),\n                    parseInt(bits[3] + bits[3], 16)\n                ];\n            }\n        }\n    ];\n\n    // search through the definitions to find a match\n    for (var i = 0; i < color_defs.length; i++) {\n        var re = color_defs[i].re;\n        var processor = color_defs[i].process;\n        var bits = re.exec(color_string);\n        if (bits) {\n            var channels = processor(bits);\n            this.r = channels[0];\n            this.g = channels[1];\n            this.b = channels[2];\n            if (channels.length > 3) {\n                this.alpha = channels[3];\n            }\n            this.ok = true;\n        }\n\n    }\n\n    // validate/cleanup values\n    this.r = (this.r < 0 || isNaN(this.r)) ? 0 : ((this.r > 255) ? 255 : this.r);\n    this.g = (this.g < 0 || isNaN(this.g)) ? 0 : ((this.g > 255) ? 255 : this.g);\n    this.b = (this.b < 0 || isNaN(this.b)) ? 0 : ((this.b > 255) ? 255 : this.b);\n    this.alpha = (this.alpha < 0) ? 0 : ((this.alpha > 1.0 || isNaN(this.alpha)) ? 1.0 : this.alpha);\n\n    // some getters\n    this.toRGB = function () {\n        return 'rgb(' + this.r + ', ' + this.g + ', ' + this.b + ')';\n    }\n    this.toRGBA = function () {\n        return 'rgba(' + this.r + ', ' + this.g + ', ' + this.b + ', ' + this.alpha + ')';\n    }\n    this.toHex = function () {\n        var r = this.r.toString(16);\n        var g = this.g.toString(16);\n        var b = this.b.toString(16);\n        if (r.length == 1) r = '0' + r;\n        if (g.length == 1) g = '0' + g;\n        if (b.length == 1) b = '0' + b;\n        return '#' + r + g + b;\n    }\n\n    // help\n    this.getHelpXML = function () {\n\n        var examples = new Array();\n        // add regexps\n        for (var i = 0; i < color_defs.length; i++) {\n            var example = color_defs[i].example;\n            for (var j = 0; j < example.length; j++) {\n                examples[examples.length] = example[j];\n            }\n        }\n        // add type-in colors\n        for (var sc in simple_colors) {\n            examples[examples.length] = sc;\n        }\n\n        var xml = document.createElement('ul');\n        xml.setAttribute('id', 'rgbcolor-examples');\n        for (var i = 0; i < examples.length; i++) {\n            try {\n                var list_item = document.createElement('li');\n                var list_color = new RGBColor(examples[i]);\n                var example_div = document.createElement('div');\n                example_div.style.cssText =\n                        'margin: 3px; '\n                        + 'border: 1px solid black; '\n                        + 'background:' + list_color.toHex() + '; '\n                        + 'color:' + list_color.toHex()\n                ;\n                example_div.appendChild(document.createTextNode('test'));\n                var list_item_value = document.createTextNode(\n                    ' ' + examples[i] + ' -> ' + list_color.toRGB() + ' -> ' + list_color.toHex()\n                );\n                list_item.appendChild(example_div);\n                list_item.appendChild(list_item_value);\n                xml.appendChild(list_item);\n\n            } catch(e){}\n        }\n        return xml;\n\n    }\n\n}\n", "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n", "import { SVGPathData } from \"./SVGPathData\";\nimport { SVGCommand } from \"./types\";\n\n// Encode SVG PathData\n// http://www.w3.org/TR/SVG/paths.html#PathDataBNF\n\n// Private consts : Char groups\nconst WSP = \" \";\n\nexport function encodeSVGPath(commands: SVGCommand | SVGCommand[]) {\n  let str = \"\";\n\n  if (!Array.isArray(commands)) {\n    commands = [commands];\n  }\n  for (let i = 0; i < commands.length; i++) {\n    const command = commands[i];\n    if (command.type === SVGPathData.CLOSE_PATH) {\n      str += \"z\";\n    } else if (command.type === SVGPathData.HORIZ_LINE_TO) {\n      str += (command.relative ? \"h\" : \"H\") +\n        command.x;\n    } else if (command.type === SVGPathData.VERT_LINE_TO) {\n      str += (command.relative ? \"v\" : \"V\") +\n        command.y;\n    } else if (command.type === SVGPathData.MOVE_TO) {\n      str += (command.relative ? \"m\" : \"M\") +\n        command.x + WSP + command.y;\n    } else if (command.type === SVGPathData.LINE_TO) {\n      str += (command.relative ? \"l\" : \"L\") +\n        command.x + WSP + command.y;\n    } else if (command.type === SVGPathData.CURVE_TO) {\n      str += (command.relative ? \"c\" : \"C\") +\n        command.x1 + WSP + command.y1 +\n        WSP + command.x2 + WSP + command.y2 +\n        WSP + command.x + WSP + command.y;\n    } else if (command.type === SVGPathData.SMOOTH_CURVE_TO) {\n      str += (command.relative ? \"s\" : \"S\") +\n        command.x2 + WSP + command.y2 +\n        WSP + command.x + WSP + command.y;\n    } else if (command.type === SVGPathData.QUAD_TO) {\n      str += (command.relative ? \"q\" : \"Q\") +\n        command.x1 + WSP + command.y1 +\n        WSP + command.x + WSP + command.y;\n    } else if (command.type === SVGPathData.SMOOTH_QUAD_TO) {\n      str += (command.relative ? \"t\" : \"T\") +\n        command.x + WSP + command.y;\n    } else if (command.type === SVGPathData.ARC) {\n      str += (command.relative ? \"a\" : \"A\") +\n        command.rX + WSP + command.rY +\n        WSP + command.xRot +\n        WSP + (+command.lArcFlag) + WSP + (+command.sweepFlag) +\n        WSP + command.x + WSP + command.y;\n    } else {\n      // Unknown command\n      throw new Error(\n        `Unexpected command type \"${ (command as any).type}\" at index ${i}.`);\n    }\n  }\n\n  return str;\n}\n", "import { SVGPathData } from \"./SVGPathData\";\nimport { CommandA, CommandC } from \"./types\";\n\nexport function rotate([x, y]: [number, number], rad: number) {\n  return [\n    x * Math.cos(rad) - y * Math.sin(rad),\n    x * Math.sin(rad) + y * Math.cos(rad),\n  ];\n}\n\nconst DEBUG_CHECK_NUMBERS = true;\nexport function assertNumbers(...numbers: number[]) {\n  if (DEBUG_CHECK_NUMBERS) {\n    for (let i = 0; i < numbers.length; i++) {\n      if (\"number\" !== typeof numbers[i]) {\n        throw new Error(\n          `assertNumbers arguments[${i}] is not a number. ${typeof numbers[i]} == typeof ${numbers[i]}`);\n      }\n    }\n  }\n  return true;\n}\n\nconst PI = Math.PI;\n\n/**\n * https://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes\n * Fixes rX and rY.\n * Ensures lArcFlag and sweepFlag are 0 or 1\n * Adds center coordinates: command.cX, command.cY (relative or absolute, depending on command.relative)\n * Adds start and end arc parameters (in degrees): command.phi1, command.phi2; phi1 < phi2 iff. c.sweepFlag == true\n */\nexport function annotateArcCommand(c: CommandA, x1: number, y1: number) {\n  c.lArcFlag = (0 === c.lArcFlag) ? 0 : 1;\n  c.sweepFlag = (0 === c.sweepFlag) ? 0 : 1;\n  // tslint:disable-next-line\n  let {rX, rY, x, y} = c;\n\n  rX = Math.abs(c.rX);\n  rY = Math.abs(c.rY);\n  const [x1_, y1_] = rotate([(x1 - x) / 2, (y1 - y) / 2], -c.xRot / 180 * PI);\n  const testValue = Math.pow(x1_, 2) / Math.pow(rX, 2) + Math.pow(y1_, 2) / Math.pow(rY, 2);\n\n  if (1 < testValue) {\n    rX *= Math.sqrt(testValue);\n    rY *= Math.sqrt(testValue);\n  }\n  c.rX = rX;\n  c.rY = rY;\n  const c_ScaleTemp = (Math.pow(rX, 2) * Math.pow(y1_, 2) + Math.pow(rY, 2) * Math.pow(x1_, 2));\n  const c_Scale = (c.lArcFlag !== c.sweepFlag ? 1 : -1) *\n    Math.sqrt(Math.max(0, (Math.pow(rX, 2) * Math.pow(rY, 2) - c_ScaleTemp) / c_ScaleTemp));\n  const cx_ = rX * y1_ / rY * c_Scale;\n  const cy_ = -rY * x1_ / rX * c_Scale;\n  const cRot = rotate([cx_, cy_], c.xRot / 180 * PI);\n\n  c.cX = cRot[0] + (x1 + x) / 2;\n  c.cY = cRot[1] + (y1 + y) / 2;\n  c.phi1 = Math.atan2((y1_ - cy_) / rY, (x1_ - cx_) / rX);\n  c.phi2 = Math.atan2((-y1_ - cy_) / rY, (-x1_ - cx_) / rX);\n  if (0 === c.sweepFlag && c.phi2 > c.phi1) {\n    c.phi2 -= 2 * PI;\n  }\n  if (1 === c.sweepFlag && c.phi2 < c.phi1) {\n    c.phi2 += 2 * PI;\n  }\n  c.phi1 *= 180 / PI;\n  c.phi2 *= 180 / PI;\n}\n\n/**\n * Solves a quadratic system of equations of the form\n *      a * x + b * y = c\n *      x² + y² = 1\n * This can be understood as the intersection of the unit circle with a line.\n *      => y = (c - a x) / b\n *      => x² + (c - a x)² / b² = 1\n *      => x² b² + c² - 2 c a x + a² x² = b²\n *      => (a² + b²) x² - 2 a c x + (c² - b²) = 0\n */\nexport function intersectionUnitCircleLine(a: number, b: number, c: number): [number, number][] {\n  assertNumbers(a, b, c);\n  // cf. pqFormula\n  const termSqr = a * a + b * b - c * c;\n\n  if (0 > termSqr) {\n    return [];\n  } else if (0 === termSqr) {\n    return [\n      [\n        (a * c) / (a * a + b * b),\n        (b * c) / (a * a + b * b)]];\n  }\n  const term = Math.sqrt(termSqr);\n\n  return [\n    [\n      (a * c + b * term) / (a * a + b * b),\n      (b * c - a * term) / (a * a + b * b)],\n    [\n      (a * c - b * term) / (a * a + b * b),\n      (b * c + a * term) / (a * a + b * b)]];\n\n}\n\nexport const DEG = Math.PI / 180;\n\nexport function lerp(a: number, b: number, t: number) {\n  return (1 - t) * a + t * b;\n}\n\nexport function arcAt(c: number, x1: number, x2: number, phiDeg: number) {\n  return c + Math.cos(phiDeg / 180 * PI) * x1 + Math.sin(phiDeg / 180 * PI) * x2;\n}\n\nexport function bezierRoot(x0: number, x1: number, x2: number, x3: number) {\n  const EPS = 1e-6;\n  const x01 = x1 - x0;\n  const x12 = x2 - x1;\n  const x23 = x3 - x2;\n  const a = 3 * x01 + 3 * x23 - 6 * x12;\n  const b = (x12 - x01) * 6;\n  const c = 3 * x01;\n  // solve a * t² + b * t + c = 0\n\n  if (Math.abs(a) < EPS) {\n    // equivalent to b * t + c =>\n    return [-c / b];\n  }\n  return pqFormula(b / a, c / a, EPS);\n\n}\n\nexport function bezierAt(x0: number, x1: number, x2: number, x3: number, t: number) {\n  // console.log(x0, y0, x1, y1, x2, y2, x3, y3, t)\n  const s = 1 - t;\n  const c0 = s * s * s;\n  const c1 = 3 * s * s * t;\n  const c2 = 3 * s * t * t;\n  const c3 = t * t * t;\n\n  return x0 * c0 + x1 * c1 + x2 * c2 + x3 * c3;\n}\n\nfunction pqFormula(p: number, q: number, PRECISION = 1e-6) {\n  // 4 times the discriminant:in\n  const discriminantX4 = p * p / 4 - q;\n\n  if (discriminantX4 < -PRECISION) {\n    return [];\n  } else if (discriminantX4 <= PRECISION) {\n    return [-p / 2];\n  }\n  const root = Math.sqrt(discriminantX4);\n\n  return [-(p / 2) - root, -(p / 2) + root];\n\n}\n\nexport function a2c(arc: CommandA, x0: number, y0: number): CommandC[] {\n  if (!arc.cX) {\n    annotateArcCommand(arc, x0, y0);\n  }\n\n  const phiMin = Math.min(arc.phi1!, arc.phi2!), phiMax = Math.max(arc.phi1!, arc.phi2!), deltaPhi = phiMax - phiMin;\n  const partCount = Math.ceil(deltaPhi / 90 );\n\n  const result: CommandC[] = new Array(partCount);\n  let prevX = x0, prevY = y0;\n  for (let i = 0; i < partCount; i++) {\n    const phiStart = lerp(arc.phi1!, arc.phi2!, i / partCount);\n    const phiEnd = lerp(arc.phi1!, arc.phi2!, (i + 1) / partCount);\n    const deltaPhi = phiEnd - phiStart;\n    const f = 4 / 3 * Math.tan(deltaPhi * DEG / 4);\n    // x1/y1, x2/y2 and x/y coordinates on the unit circle for phiStart/phiEnd\n    const [x1, y1] = [\n      Math.cos(phiStart * DEG) - f * Math.sin(phiStart * DEG),\n      Math.sin(phiStart * DEG) + f * Math.cos(phiStart * DEG)];\n    const [x, y] = [Math.cos(phiEnd * DEG), Math.sin(phiEnd * DEG)];\n    const [x2, y2] = [x + f * Math.sin(phiEnd * DEG), y - f * Math.cos(phiEnd * DEG)];\n    result[i] = {relative: arc.relative, type: SVGPathData.CURVE_TO } as any;\n    const transform = (x: number, y: number) => {\n      const [xTemp, yTemp] = rotate([x * arc.rX, y * arc.rY], arc.xRot);\n      return [arc.cX! + xTemp, arc.cY! + yTemp];\n    };\n    [result[i].x1, result[i].y1] = transform(x1, y1);\n    [result[i].x2, result[i].y2] = transform(x2, y2);\n    [result[i].x, result[i].y] = transform(x, y);\n    if (arc.relative) {\n      result[i].x1 -= prevX;\n      result[i].y1 -= prevY;\n      result[i].x2 -= prevX;\n      result[i].y2 -= prevY;\n      result[i].x -= prevX;\n      result[i].y -= prevY;\n    }\n    [prevX, prevY] = [result[i].x, result[i].y];\n  }\n  return result;\n}\n", "// Transform SVG PathData\n// http://www.w3.org/TR/SVG/paths.html#PathDataBNF\n\nimport { a2c, annotateArcCommand, arcAt, assertNumbers, bezierAt, bezierRoot,\n  intersectionUnitCircleLine } from \"./mathUtils\";\nimport { SVGPathData } from \"./SVGPathData\";\nimport { SVGCommand, TransformFunction } from \"./types\";\n\nexport namespace SVGPathDataTransformer {\n  // Predefined transforming functions\n  // Rounds commands values\n  export function ROUND(roundVal = 1e13) {\n    assertNumbers(roundVal);\n    function rf(val: number) { return Math.round(val * roundVal) / roundVal; }\n    return function round(command: any) {\n      if (\"undefined\" !== typeof command.x1) {\n        command.x1 = rf(command.x1);\n      }\n      if (\"undefined\" !== typeof command.y1) {\n        command.y1 = rf(command.y1);\n      }\n\n      if (\"undefined\" !== typeof command.x2) {\n        command.x2 = rf(command.x2);\n      }\n      if (\"undefined\" !== typeof command.y2) {\n        command.y2 = rf(command.y2);\n      }\n\n      if (\"undefined\" !== typeof command.x) {\n        command.x = rf(command.x);\n      }\n      if (\"undefined\" !== typeof command.y) {\n        command.y = rf(command.y);\n      }\n\n      if (\"undefined\" !== typeof command.rX) {\n        command.rX = rf(command.rX);\n      }\n      if (\"undefined\" !== typeof command.rY) {\n        command.rY = rf(command.rY);\n      }\n\n      return command;\n    };\n  }\n  // Relative to absolute commands\n  export function TO_ABS() {\n    return INFO((command, prevX, prevY) => {\n      if (command.relative) {\n        // x1/y1 values\n        if (\"undefined\" !== typeof command.x1) {\n          command.x1 += prevX;\n        }\n        if (\"undefined\" !== typeof command.y1) {\n          command.y1 += prevY;\n        }\n        // x2/y2 values\n        if (\"undefined\" !== typeof command.x2) {\n          command.x2 += prevX;\n        }\n        if (\"undefined\" !== typeof command.y2) {\n          command.y2 += prevY;\n        }\n        // Finally x/y values\n        if (\"undefined\" !== typeof command.x) {\n          command.x += prevX;\n        }\n        if (\"undefined\" !== typeof command.y) {\n          command.y += prevY;\n        }\n        command.relative = false;\n      }\n      return command;\n    });\n  }\n  // Absolute to relative commands\n  export function TO_REL() {\n    return INFO((command, prevX, prevY) => {\n      if (!command.relative) {\n        // x1/y1 values\n        if (\"undefined\" !== typeof command.x1) {\n          command.x1 -= prevX;\n        }\n        if (\"undefined\" !== typeof command.y1) {\n          command.y1 -= prevY;\n        }\n        // x2/y2 values\n        if (\"undefined\" !== typeof command.x2) {\n          command.x2 -= prevX;\n        }\n        if (\"undefined\" !== typeof command.y2) {\n          command.y2 -= prevY;\n        }\n        // Finally x/y values\n        if (\"undefined\" !== typeof command.x) {\n          command.x -= prevX;\n        }\n        if (\"undefined\" !== typeof command.y) {\n          command.y -= prevY;\n        }\n        command.relative = true;\n      }\n      return command;\n    });\n  }\n  // Convert H, V, Z and A with rX = 0 to L\n  export function NORMALIZE_HVZ(normalizeZ = true, normalizeH = true, normalizeV = true) {\n    return INFO((command, prevX, prevY, pathStartX, pathStartY) => {\n      if (isNaN(pathStartX) && !(command.type & SVGPathData.MOVE_TO)) {\n        throw new Error(\"path must start with moveto\");\n      }\n      if (normalizeH && command.type & SVGPathData.HORIZ_LINE_TO) {\n        command.type = SVGPathData.LINE_TO;\n        command.y = command.relative ? 0 : prevY;\n      }\n      if (normalizeV && command.type & SVGPathData.VERT_LINE_TO) {\n        command.type = SVGPathData.LINE_TO;\n        command.x = command.relative ? 0 : prevX;\n      }\n      if (normalizeZ && command.type & SVGPathData.CLOSE_PATH) {\n        command.type = SVGPathData.LINE_TO;\n        command.x = command.relative ? pathStartX - prevX : pathStartX;\n        command.y = command.relative ? pathStartY - prevY : pathStartY;\n      }\n      if (command.type & SVGPathData.ARC && (0 === command.rX || 0 === command.rY)) {\n        command.type = SVGPathData.LINE_TO;\n        delete command.rX;\n        delete command.rY;\n        delete command.xRot;\n        delete command.lArcFlag;\n        delete command.sweepFlag;\n      }\n      return command;\n    });\n  }\n  /*\n   * Transforms smooth curves and quads to normal curves and quads (SsTt to CcQq)\n   */\n  export function NORMALIZE_ST() {\n    let prevCurveC2X = NaN;\n    let prevCurveC2Y = NaN;\n    let prevQuadCX = NaN;\n    let prevQuadCY = NaN;\n\n    return INFO((command, prevX, prevY) => {\n      if (command.type & SVGPathData.SMOOTH_CURVE_TO) {\n        command.type = SVGPathData.CURVE_TO;\n        prevCurveC2X = isNaN(prevCurveC2X) ? prevX : prevCurveC2X;\n        prevCurveC2Y = isNaN(prevCurveC2Y) ? prevY : prevCurveC2Y;\n        command.x1 = command.relative ? prevX - prevCurveC2X : 2 * prevX - prevCurveC2X;\n        command.y1 = command.relative ? prevY - prevCurveC2Y : 2 * prevY - prevCurveC2Y;\n      }\n      if (command.type & SVGPathData.CURVE_TO) {\n        prevCurveC2X = command.relative ? prevX + command.x2 : command.x2;\n        prevCurveC2Y = command.relative ? prevY + command.y2 : command.y2;\n      } else {\n        prevCurveC2X = NaN;\n        prevCurveC2Y = NaN;\n      }\n      if (command.type & SVGPathData.SMOOTH_QUAD_TO) {\n        command.type = SVGPathData.QUAD_TO;\n        prevQuadCX = isNaN(prevQuadCX) ? prevX : prevQuadCX;\n        prevQuadCY = isNaN(prevQuadCY) ? prevY : prevQuadCY;\n        command.x1 = command.relative ? prevX - prevQuadCX : 2 * prevX - prevQuadCX;\n        command.y1 = command.relative ? prevY - prevQuadCY : 2 * prevY - prevQuadCY;\n      }\n      if (command.type & SVGPathData.QUAD_TO) {\n        prevQuadCX = command.relative ? prevX + command.x1 : command.x1;\n        prevQuadCY = command.relative ? prevY + command.y1 : command.y1;\n      } else {\n        prevQuadCX = NaN;\n        prevQuadCY = NaN;\n      }\n\n      return command;\n    });\n  }\n  /*\n   * A quadratic bézier curve can be represented by a cubic bézier curve which has\n   * the same end points as the quadratic and both control points in place of the\n   * quadratic\"s one.\n   *\n   * This transformer replaces QqTt commands with Cc commands respectively.\n   * This is useful for reading path data into a system which only has a\n   * representation for cubic curves.\n   */\n  export function QT_TO_C() {\n    let prevQuadX1 = NaN;\n    let prevQuadY1 = NaN;\n\n    return INFO((command, prevX, prevY) => {\n      if (command.type & SVGPathData.SMOOTH_QUAD_TO) {\n        command.type = SVGPathData.QUAD_TO;\n        prevQuadX1 = isNaN(prevQuadX1) ? prevX : prevQuadX1;\n        prevQuadY1 = isNaN(prevQuadY1) ? prevY : prevQuadY1;\n        command.x1 = command.relative ? prevX - prevQuadX1 : 2 * prevX - prevQuadX1;\n        command.y1 = command.relative ? prevY - prevQuadY1 : 2 * prevY - prevQuadY1;\n      }\n      if (command.type & SVGPathData.QUAD_TO) {\n        prevQuadX1 = command.relative ? prevX + command.x1 : command.x1;\n        prevQuadY1 = command.relative ? prevY + command.y1 : command.y1;\n        const x1 = command.x1;\n        const y1 = command.y1;\n\n        command.type = SVGPathData.CURVE_TO;\n        command.x1 = ((command.relative ? 0 : prevX) + x1 * 2) / 3;\n        command.y1 = ((command.relative ? 0 : prevY) + y1 * 2) / 3;\n        command.x2 = (command.x + x1 * 2) / 3;\n        command.y2 = (command.y + y1 * 2) / 3;\n      } else {\n        prevQuadX1 = NaN;\n        prevQuadY1 = NaN;\n      }\n\n      return command;\n    });\n  }\n  export function INFO(\n    f: (command: any, prevXAbs: number, prevYAbs: number,\n        pathStartXAbs: number, pathStartYAbs: number) => any | any[]) {\n    let prevXAbs = 0;\n    let prevYAbs = 0;\n    let pathStartXAbs = NaN;\n    let pathStartYAbs = NaN;\n\n    return function transform(command: any) {\n      if (isNaN(pathStartXAbs) && !(command.type & SVGPathData.MOVE_TO)) {\n        throw new Error(\"path must start with moveto\");\n      }\n\n      const result = f(command, prevXAbs, prevYAbs, pathStartXAbs, pathStartYAbs);\n\n      if (command.type & SVGPathData.CLOSE_PATH) {\n        prevXAbs = pathStartXAbs;\n        prevYAbs = pathStartYAbs;\n      }\n\n      if (\"undefined\" !== typeof command.x) {\n        prevXAbs = (command.relative ? prevXAbs + command.x : command.x);\n      }\n      if (\"undefined\" !== typeof command.y) {\n        prevYAbs = (command.relative ? prevYAbs + command.y : command.y);\n      }\n\n      if (command.type & SVGPathData.MOVE_TO) {\n        pathStartXAbs = prevXAbs;\n        pathStartYAbs = prevYAbs;\n      }\n\n      return result;\n    };\n  }\n  /*\n   * remove 0-length segments\n   */\n  export function SANITIZE(EPS = 0) {\n    assertNumbers(EPS);\n    let prevCurveC2X = NaN;\n    let prevCurveC2Y = NaN;\n    let prevQuadCX = NaN;\n    let prevQuadCY = NaN;\n\n    return INFO((command, prevX, prevY, pathStartX, pathStartY) => {\n      const abs = Math.abs;\n      let skip = false;\n      let x1Rel = 0;\n      let y1Rel = 0;\n\n      if (command.type & SVGPathData.SMOOTH_CURVE_TO) {\n        x1Rel = isNaN(prevCurveC2X) ? 0 : prevX - prevCurveC2X;\n        y1Rel = isNaN(prevCurveC2Y) ? 0 : prevY - prevCurveC2Y;\n      }\n      if (command.type & (SVGPathData.CURVE_TO | SVGPathData.SMOOTH_CURVE_TO)) {\n        prevCurveC2X = command.relative ? prevX + command.x2 : command.x2;\n        prevCurveC2Y = command.relative ? prevY + command.y2 : command.y2;\n      } else {\n        prevCurveC2X = NaN;\n        prevCurveC2Y = NaN;\n      }\n      if (command.type & SVGPathData.SMOOTH_QUAD_TO) {\n        prevQuadCX = isNaN(prevQuadCX) ? prevX : 2 * prevX - prevQuadCX;\n        prevQuadCY = isNaN(prevQuadCY) ? prevY : 2 * prevY - prevQuadCY;\n      } else if (command.type & SVGPathData.QUAD_TO) {\n        prevQuadCX = command.relative ? prevX + command.x1 : command.x1;\n        prevQuadCY = command.relative ? prevY + command.y1 : command.y2;\n      } else {\n        prevQuadCX = NaN;\n        prevQuadCY = NaN;\n      }\n\n      if (command.type & SVGPathData.LINE_COMMANDS ||\n        command.type & SVGPathData.ARC && (0 === command.rX || 0 === command.rY || !command.lArcFlag) ||\n        command.type & SVGPathData.CURVE_TO || command.type & SVGPathData.SMOOTH_CURVE_TO ||\n        command.type & SVGPathData.QUAD_TO || command.type & SVGPathData.SMOOTH_QUAD_TO) {\n        const xRel = \"undefined\" === typeof command.x ? 0 :\n          (command.relative ? command.x : command.x - prevX);\n        const yRel = \"undefined\" === typeof command.y ? 0 :\n          (command.relative ? command.y : command.y - prevY);\n\n        x1Rel = !isNaN(prevQuadCX) ? prevQuadCX - prevX :\n          \"undefined\" === typeof command.x1 ? x1Rel :\n            command.relative ? command.x :\n              command.x1 - prevX;\n        y1Rel = !isNaN(prevQuadCY) ? prevQuadCY - prevY :\n          \"undefined\" === typeof command.y1 ? y1Rel :\n            command.relative ? command.y :\n              command.y1 - prevY;\n\n        const x2Rel = \"undefined\" === typeof command.x2 ? 0 :\n          (command.relative ? command.x : command.x2 - prevX);\n        const y2Rel = \"undefined\" === typeof command.y2 ? 0 :\n          (command.relative ? command.y : command.y2 - prevY);\n\n        if (abs(xRel) <= EPS && abs(yRel) <= EPS &&\n          abs(x1Rel) <= EPS && abs(y1Rel) <= EPS &&\n          abs(x2Rel) <= EPS && abs(y2Rel) <= EPS) {\n          skip = true;\n        }\n      }\n\n      if (command.type & SVGPathData.CLOSE_PATH) {\n        if (abs(prevX - pathStartX) <= EPS && abs(prevY - pathStartY) <= EPS) {\n          skip = true;\n        }\n      }\n\n      return skip ? [] : command;\n    });\n  }\n  // SVG Transforms : http://www.w3.org/TR/SVGTiny12/coords.html#TransformList\n  // Matrix : http://apike.ca/prog_svg_transform.html\n  // a c e\n  // b d f\n  export function MATRIX(a: number, b: number, c: number, d: number, e: number, f: number) {\n    assertNumbers(a, b, c, d, e, f);\n\n    return INFO((command, prevX, prevY, pathStartX) => {\n      const origX1 = command.x1;\n      const origX2 = command.x2;\n      // if isNaN(pathStartX), then this is the first command, which is ALWAYS an\n      // absolute MOVE_TO, regardless what the relative flag says\n      const comRel = command.relative && !isNaN(pathStartX);\n      const x = \"undefined\" !== typeof command.x ? command.x : (comRel ? 0 : prevX);\n      const y = \"undefined\" !== typeof command.y ? command.y : (comRel ? 0 : prevY);\n\n      if (command.type & SVGPathData.HORIZ_LINE_TO && 0 !== b) {\n        command.type = SVGPathData.LINE_TO;\n        command.y = command.relative ? 0 : prevY;\n      }\n      if (command.type & SVGPathData.VERT_LINE_TO && 0 !== c) {\n        command.type = SVGPathData.LINE_TO;\n        command.x = command.relative ? 0 : prevX;\n      }\n\n      if (\"undefined\" !== typeof command.x) {\n        command.x = (command.x * a) + (y * c) + (comRel ? 0 : e);\n      }\n      if (\"undefined\" !== typeof command.y) {\n        command.y = (x * b) + command.y * d + (comRel ? 0 : f);\n      }\n      if (\"undefined\" !== typeof command.x1) {\n        command.x1 = command.x1 * a + command.y1 * c + (comRel ? 0 : e);\n      }\n      if (\"undefined\" !== typeof command.y1) {\n        command.y1 = origX1 * b + command.y1 * d + (comRel ? 0 : f);\n      }\n      if (\"undefined\" !== typeof command.x2) {\n        command.x2 = command.x2 * a + command.y2 * c + (comRel ? 0 : e);\n      }\n      if (\"undefined\" !== typeof command.y2) {\n        command.y2 = origX2 * b + command.y2 * d + (comRel ? 0 : f);\n      }\n      function sqr(x: number) { return x * x; }\n      const det = a * d - b * c;\n\n      if (\"undefined\" !== typeof command.xRot) {\n        // Skip if this is a pure translation\n        if (1 !== a || 0 !== b || 0 !== c || 1 !== d) {\n          // Special case for singular matrix\n          if (0 === det) {\n            // In the singular case, the arc is compressed to a line. The actual geometric image of the original\n            // curve under this transform possibly extends beyond the starting and/or ending points of the segment, but\n            // for simplicity we ignore this detail and just replace this command with a single line segment.\n            delete command.rX;\n            delete command.rY;\n            delete command.xRot;\n            delete command.lArcFlag;\n            delete command.sweepFlag;\n            command.type = SVGPathData.LINE_TO;\n          } else {\n            // Convert to radians\n            const xRot = command.xRot * Math.PI / 180;\n\n            // Convert rotated ellipse to general conic form\n            // x0^2/rX^2 + y0^2/rY^2 - 1 = 0\n            // x0 = x*cos(xRot) + y*sin(xRot)\n            // y0 = -x*sin(xRot) + y*cos(xRot)\n            // --> A*x^2 + B*x*y + C*y^2 - 1 = 0, where\n            const sinRot = Math.sin(xRot);\n            const cosRot = Math.cos(xRot);\n            const xCurve = 1 / sqr(command.rX);\n            const yCurve = 1 / sqr(command.rY);\n            const A = sqr(cosRot) * xCurve + sqr(sinRot) * yCurve;\n            const B = 2 * sinRot * cosRot * (xCurve - yCurve);\n            const C = sqr(sinRot) * xCurve + sqr(cosRot) * yCurve;\n\n            // Apply matrix to A*x^2 + B*x*y + C*y^2 - 1 = 0\n            // x1 = a*x + c*y\n            // y1 = b*x + d*y\n            //      (we can ignore e and f, since pure translations don\"t affect the shape of the ellipse)\n            // --> A1*x1^2 + B1*x1*y1 + C1*y1^2 - det^2 = 0, where\n            const A1 = A * d * d - B * b * d + C * b * b;\n            const B1 = B * (a * d + b * c) - 2 * (A * c * d + C * a * b);\n            const C1 = A * c * c - B * a * c + C * a * a;\n\n            // Unapply newXRot to get back to axis-aligned ellipse equation\n            // x1 = x2*cos(newXRot) - y2*sin(newXRot)\n            // y1 = x2*sin(newXRot) + y2*cos(newXRot)\n            // A1*x1^2 + B1*x1*y1 + C1*y1^2 - det^2 =\n            //   x2^2*(A1*cos(newXRot)^2 + B1*sin(newXRot)*cos(newXRot) + C1*sin(newXRot)^2)\n            //   + x2*y2*(2*(C1 - A1)*sin(newXRot)*cos(newXRot) + B1*(cos(newXRot)^2 - sin(newXRot)^2))\n            //   + y2^2*(A1*sin(newXRot)^2 - B1*sin(newXRot)*cos(newXRot) + C1*cos(newXRot)^2)\n            //   (which must have the same zeroes as)\n            // x2^2/newRX^2 + y2^2/newRY^2 - 1\n            //   (so we have)\n            // 2*(C1 - A1)*sin(newXRot)*cos(newXRot) + B1*(cos(newXRot)^2 - sin(newXRot)^2) = 0\n            // (A1 - C1)*sin(2*newXRot) = B1*cos(2*newXRot)\n            // 2*newXRot = atan2(B1, A1 - C1)\n            const newXRot = ((Math.atan2(B1, A1 - C1) + Math.PI) % Math.PI) / 2;\n            // For any integer n, (atan2(B1, A1 - C1) + n*pi)/2 is a solution to the above; incrementing n just swaps\n            // the x and y radii computed below (since that\"s what rotating an ellipse by pi/2 does).  Choosing the\n            // rotation between 0 and pi/2 eliminates the ambiguity and leads to more predictable output.\n\n            // Finally, we get newRX and newRY from the same-zeroes relationship that gave us newXRot\n            const newSinRot = Math.sin(newXRot);\n            const newCosRot = Math.cos(newXRot);\n\n            command.rX = Math.abs(det) /\n              Math.sqrt(A1 * sqr(newCosRot) + B1 * newSinRot * newCosRot + C1 * sqr(newSinRot));\n            command.rY = Math.abs(det) /\n              Math.sqrt(A1 * sqr(newSinRot) - B1 * newSinRot * newCosRot + C1 * sqr(newCosRot));\n            command.xRot = newXRot * 180 / Math.PI;\n          }\n        }\n      }\n      // sweepFlag needs to be inverted when mirroring shapes\n      // see http://www.itk.ilstu.edu/faculty/javila/SVG/SVG_drawing1/elliptical_curve.htm\n      // m 65,10 a 50,25 0 1 0 50,25\n      // M 65,60 A 50,25 0 1 1 115,35\n      if (\"undefined\" !== typeof command.sweepFlag && 0 > det) {\n        command.sweepFlag = +!command.sweepFlag;\n      }\n      return command;\n    });\n  }\n  export function ROTATE(a: number, x = 0, y = 0) {\n    assertNumbers(a, x, y);\n    const sin = Math.sin(a);\n    const cos = Math.cos(a);\n\n    return MATRIX(cos, sin, -sin, cos, x - x * cos + y * sin, y - x * sin - y * cos);\n  }\n  export function TRANSLATE(dX: number, dY = 0) {\n    assertNumbers(dX, dY);\n    return MATRIX(1, 0, 0, 1, dX, dY);\n  }\n  export function SCALE(dX: number, dY = dX) {\n    assertNumbers(dX, dY);\n    return MATRIX(dX, 0, 0, dY, 0, 0);\n  }\n  export function SKEW_X(a: number) {\n    assertNumbers(a);\n    return MATRIX(1, 0, Math.atan(a), 1, 0, 0);\n  }\n  export function SKEW_Y(a: number) {\n    assertNumbers(a);\n    return MATRIX(1, Math.atan(a), 0, 1, 0, 0);\n  }\n  export function X_AXIS_SYMMETRY(xOffset = 0) {\n    assertNumbers(xOffset);\n    return MATRIX(-1, 0, 0, 1, xOffset, 0);\n  }\n  export function Y_AXIS_SYMMETRY(yOffset = 0) {\n    assertNumbers(yOffset);\n    return MATRIX(1, 0, 0, -1, 0, yOffset);\n  }\n  // Convert arc commands to curve commands\n  export function A_TO_C() {\n    return INFO((command, prevX, prevY) => {\n      if (SVGPathData.ARC === command.type) {\n        return a2c(command, command.relative ? 0 : prevX, command.relative ? 0 : prevY);\n      }\n      return command;\n    });\n  }\n  // @see annotateArcCommand\n  export function ANNOTATE_ARCS() {\n    return INFO((c, x1, y1) => {\n      if (c.relative) {\n        x1 = 0;\n        y1 = 0;\n      }\n      if (SVGPathData.ARC === c.type) {\n        annotateArcCommand(c, x1, y1);\n      }\n      return c;\n    });\n  }\n  export function CLONE() {\n    return (c: SVGCommand) => {\n      const result = {} as SVGCommand;\n      // tslint:disable-next-line\n      for (const key in c) {\n        result[key as keyof SVGCommand] = c[key as keyof SVGCommand];\n      }\n      return result;\n    };\n  }\n  // @see annotateArcCommand\n  export function CALCULATE_BOUNDS() {\n    const clone = CLONE();\n    const toAbs = TO_ABS();\n    const qtToC = QT_TO_C();\n    const normST = NORMALIZE_ST();\n    const f: TransformFunction & {minX: number, maxX: number, minY: number, maxY: number} =\n        INFO((command, prevXAbs, prevYAbs) => {\n      const c = normST(qtToC(toAbs(clone(command))));\n      function fixX(absX: number) {\n        if (absX > f.maxX) { f.maxX = absX; }\n        if (absX < f.minX) { f.minX = absX; }\n      }\n      function fixY(absY: number) {\n        if (absY > f.maxY) { f.maxY = absY; }\n        if (absY < f.minY) { f.minY = absY; }\n      }\n      if (c.type & SVGPathData.DRAWING_COMMANDS) {\n        fixX(prevXAbs);\n        fixY(prevYAbs);\n      }\n      if (c.type & SVGPathData.HORIZ_LINE_TO) {\n        fixX(c.x);\n      }\n      if (c.type & SVGPathData.VERT_LINE_TO) {\n        fixY(c.y);\n      }\n      if (c.type & SVGPathData.LINE_TO) {\n        fixX(c.x);\n        fixY(c.y);\n      }\n      if (c.type & SVGPathData.CURVE_TO) {\n        // add start and end points\n        fixX(c.x);\n        fixY(c.y);\n        const xDerivRoots = bezierRoot(prevXAbs, c.x1, c.x2, c.x);\n\n        for (const derivRoot of xDerivRoots) {\n          if (0 < derivRoot && 1 > derivRoot) {\n            fixX(bezierAt(prevXAbs, c.x1, c.x2, c.x, derivRoot));\n          }\n        }\n        const yDerivRoots = bezierRoot(prevYAbs, c.y1, c.y2, c.y);\n\n        for (const derivRoot of yDerivRoots) {\n          if (0 < derivRoot && 1 > derivRoot) {\n            fixY(bezierAt(prevYAbs, c.y1, c.y2, c.y, derivRoot));\n          }\n        }\n      }\n      if (c.type & SVGPathData.ARC) {\n        // add start and end points\n        fixX(c.x);\n        fixY(c.y);\n        annotateArcCommand(c, prevXAbs, prevYAbs);\n        // p = cos(phi) * xv + sin(phi) * yv\n        // dp = -sin(phi) * xv + cos(phi) * yv = 0\n        const xRotRad = c.xRot / 180 * Math.PI;\n        // points on ellipse for phi = 0° and phi = 90°\n        const x0 = Math.cos(xRotRad) * c.rX;\n        const y0 = Math.sin(xRotRad) * c.rX;\n        const x90 = -Math.sin(xRotRad) * c.rY;\n        const y90 = Math.cos(xRotRad) * c.rY;\n\n        // annotateArcCommand returns phi1 and phi2 such that -180° < phi1 < 180° and phi2 is smaller or greater\n        // depending on the sweep flag. Calculate phiMin, phiMax such that -180° < phiMin < 180° and phiMin < phiMax\n        const [phiMin, phiMax] = c.phi1 < c.phi2 ?\n          [c.phi1, c.phi2] :\n          (-180 > c.phi2 ? [c.phi2 + 360, c.phi1 + 360] : [c.phi2, c.phi1]);\n        const normalizeXiEta = ([xi, eta]: [number, number]) => {\n          const phiRad = Math.atan2(eta, xi);\n          const phi = phiRad * 180 / Math.PI;\n\n          return phi < phiMin ? phi + 360 : phi;\n        };\n        // xi = cos(phi), eta = sin(phi)\n\n        const xDerivRoots = intersectionUnitCircleLine(x90, -x0, 0).map(normalizeXiEta);\n        for (const derivRoot of xDerivRoots) {\n          if (derivRoot > phiMin && derivRoot < phiMax) {\n            fixX(arcAt(c.cX, x0, x90, derivRoot));\n          }\n        }\n\n        const yDerivRoots = intersectionUnitCircleLine(y90, -y0, 0).map(normalizeXiEta);\n        for (const derivRoot of yDerivRoots) {\n          if (derivRoot > phiMin && derivRoot < phiMax) {\n            fixY(arcAt(c.cY, y0, y90, derivRoot));\n          }\n        }\n      }\n      return command;\n    }) as any;\n\n    f.minX = Infinity;\n    f.maxX = -Infinity;\n    f.minY = Infinity;\n    f.maxY = -Infinity;\n    return f;\n  }\n}\n", "import { SVGPathDataTransformer } from \"./SVGPathDataTransformer\";\nimport { TransformFunction } from \"./types\";\n\nexport abstract class TransformableSVG {\n  round(x?: number) {\n    return this.transform(SVGPathDataTransformer.ROUND(x));\n  }\n\n  toAbs() {\n    return this.transform(SVGPathDataTransformer.TO_ABS());\n  }\n\n  toRel() {\n    return this.transform(SVGPathDataTransformer.TO_REL());\n  }\n\n  normalizeHVZ(a?: boolean, b?: boolean, c?: boolean) {\n    return this.transform(SVGPathDataTransformer.NORMALIZE_HVZ(a, b, c));\n  }\n\n  normalizeST() {\n    return this.transform(SVGPathDataTransformer.NORMALIZE_ST());\n  }\n\n  qtToC() {\n    return this.transform(SVGPathDataTransformer.QT_TO_C());\n  }\n\n  aToC() {\n    return this.transform(SVGPathDataTransformer.A_TO_C());\n  }\n\n  sanitize(eps?: number) {\n    return this.transform(SVGPathDataTransformer.SANITIZE(eps));\n  }\n\n  translate(x: number, y?: number) {\n    return this.transform(SVGPathDataTransformer.TRANSLATE(x, y));\n  }\n\n  scale(x: number, y?: number) {\n    return this.transform(SVGPathDataTransformer.SCALE(x, y));\n  }\n\n  rotate(a: number, x?: number, y?: number) {\n    return this.transform(SVGPathDataTransformer.ROTATE(a, x, y));\n  }\n\n  matrix(a: number, b: number, c: number, d: number, e: number, f: number) {\n    return this.transform(SVGPathDataTransformer.MATRIX(a, b, c, d, e, f));\n  }\n\n  skewX(a: number) {\n    return this.transform(SVGPathDataTransformer.SKEW_X(a));\n  }\n\n  skewY(a: number) {\n    return this.transform(SVGPathDataTransformer.SKEW_Y(a));\n  }\n\n  xSymmetry(xOffset?: number) {\n    return this.transform(SVGPathDataTransformer.X_AXIS_SYMMETRY(xOffset));\n  }\n\n  ySymmetry(yOffset?: number) {\n    return this.transform(SVGPathDataTransformer.Y_AXIS_SYMMETRY(yOffset));\n  }\n\n  annotateArcs() {\n    return this.transform(SVGPathDataTransformer.ANNOTATE_ARCS());\n  }\n\n  abstract transform(transformFunction: TransformFunction): this;\n}\n", "// Parse SVG PathData\n// http://www.w3.org/TR/SVG/paths.html#PathDataBNF\nimport { COMMAND_ARG_COUNTS, SVGPathData } from \"./SVGPathData\";\nimport { TransformableSVG } from \"./TransformableSVG\";\nimport { SVGCommand, TransformFunction } from \"./types\";\n// Private consts : Char groups\nconst isWhiteSpace = (c: string) =>\n  \" \" === c || \"\\t\" === c || \"\\r\" === c || \"\\n\" === c;\nconst isDigit = (c: string) =>\n  \"0\".charCodeAt(0) <= c.charCodeAt(0) && c.charCodeAt(0) <= \"9\".charCodeAt(0);\nconst COMMANDS = \"mMzZlLhHvVcCsSqQtTaA\";\n\nexport class SVGPathDataParser extends TransformableSVG {\n  private curNumber: string = \"\";\n  private curCommandType: SVGCommand[\"type\"] | -1 = -1;\n  private curCommandRelative = false;\n  private canParseCommandOrComma = true;\n  private curNumberHasExp = false;\n  private curNumberHasExpDigits = false;\n  private curNumberHasDecimal = false;\n  private curArgs: number[] = [];\n\n  constructor() {\n    super();\n  }\n\n  finish(commands: SVGCommand[] = []) {\n    this.parse(\" \", commands);\n    // Adding residual command\n    if (0 !== this.curArgs.length || !this.canParseCommandOrComma) {\n      throw new SyntaxError(\"Unterminated command at the path end.\");\n    }\n    return commands;\n  }\n\n  parse(str: string, commands: SVGCommand[] = []) {\n    const finishCommand = (command: SVGCommand) => {\n      commands.push(command);\n      this.curArgs.length = 0;\n      this.canParseCommandOrComma = true;\n    };\n\n    for (let i = 0; i < str.length; i++) {\n      const c = str[i];\n      // White spaces parsing\n      const isAArcFlag = this.curCommandType === SVGPathData.ARC &&\n        (this.curArgs.length === 3 || this.curArgs.length === 4) &&\n        this.curNumber.length === 1 &&\n        (this.curNumber === \"0\" || this.curNumber === \"1\");\n      const isEndingDigit = isDigit(c) && (\n        (this.curNumber === \"0\" && c === \"0\") ||\n        isAArcFlag\n      );\n\n      if (\n        isDigit(c) &&\n        !isEndingDigit\n      ) {\n        this.curNumber += c;\n        this.curNumberHasExpDigits = this.curNumberHasExp;\n        continue;\n      }\n      if (\"e\" === c || \"E\" === c) {\n        this.curNumber += c;\n        this.curNumberHasExp = true;\n        continue;\n      }\n      if (\n        (\"-\" === c || \"+\" === c) &&\n        this.curNumberHasExp &&\n        !this.curNumberHasExpDigits\n      ) {\n        this.curNumber += c;\n        continue;\n      }\n      // if we already have a \".\", it means we are starting a new number\n      if (\".\" === c && !this.curNumberHasExp && !this.curNumberHasDecimal && !isAArcFlag) {\n        this.curNumber += c;\n        this.curNumberHasDecimal = true;\n        continue;\n      }\n\n      // New number\n      if (this.curNumber && -1 !== this.curCommandType) {\n        const val = Number(this.curNumber);\n        if (isNaN(val)) {\n          throw new SyntaxError(`Invalid number ending at ${i}`);\n        }\n        if (this.curCommandType === SVGPathData.ARC) {\n          if (0 === this.curArgs.length || 1 === this.curArgs.length) {\n            if (0 > val) {\n              throw new SyntaxError(\n                `Expected positive number, got \"${val}\" at index \"${i}\"`,\n              );\n            }\n          } else if (3 === this.curArgs.length || 4 === this.curArgs.length) {\n            if (\"0\" !== this.curNumber && \"1\" !== this.curNumber) {\n              throw new SyntaxError(\n                `Expected a flag, got \"${this.curNumber}\" at index \"${i}\"`,\n              );\n            }\n          }\n        }\n        this.curArgs.push(val);\n        if (this.curArgs.length === COMMAND_ARG_COUNTS[this.curCommandType]) {\n          if (SVGPathData.HORIZ_LINE_TO === this.curCommandType) {\n            finishCommand({\n              type: SVGPathData.HORIZ_LINE_TO,\n              relative: this.curCommandRelative,\n              x: val,\n            });\n          } else if (SVGPathData.VERT_LINE_TO === this.curCommandType) {\n            finishCommand({\n              type: SVGPathData.VERT_LINE_TO,\n              relative: this.curCommandRelative,\n              y: val,\n            });\n            // Move to / line to / smooth quadratic curve to commands (x, y)\n          } else if (\n            this.curCommandType === SVGPathData.MOVE_TO ||\n            this.curCommandType === SVGPathData.LINE_TO ||\n            this.curCommandType === SVGPathData.SMOOTH_QUAD_TO\n          ) {\n            finishCommand({\n              type: this.curCommandType,\n              relative: this.curCommandRelative,\n              x: this.curArgs[0],\n              y: this.curArgs[1],\n            } as SVGCommand);\n            // Switch to line to state\n            if (SVGPathData.MOVE_TO === this.curCommandType) {\n              this.curCommandType = SVGPathData.LINE_TO;\n            }\n          } else if (this.curCommandType === SVGPathData.CURVE_TO) {\n            finishCommand({\n              type: SVGPathData.CURVE_TO,\n              relative: this.curCommandRelative,\n              x1: this.curArgs[0],\n              y1: this.curArgs[1],\n              x2: this.curArgs[2],\n              y2: this.curArgs[3],\n              x: this.curArgs[4],\n              y: this.curArgs[5],\n            });\n          } else if (this.curCommandType === SVGPathData.SMOOTH_CURVE_TO) {\n            finishCommand({\n              type: SVGPathData.SMOOTH_CURVE_TO,\n              relative: this.curCommandRelative,\n              x2: this.curArgs[0],\n              y2: this.curArgs[1],\n              x: this.curArgs[2],\n              y: this.curArgs[3],\n            });\n          } else if (this.curCommandType === SVGPathData.QUAD_TO) {\n            finishCommand({\n              type: SVGPathData.QUAD_TO,\n              relative: this.curCommandRelative,\n              x1: this.curArgs[0],\n              y1: this.curArgs[1],\n              x: this.curArgs[2],\n              y: this.curArgs[3],\n            });\n          } else if (this.curCommandType === SVGPathData.ARC) {\n            finishCommand({\n              type: SVGPathData.ARC,\n              relative: this.curCommandRelative,\n              rX: this.curArgs[0],\n              rY: this.curArgs[1],\n              xRot: this.curArgs[2],\n              lArcFlag: this.curArgs[3] as 0 | 1,\n              sweepFlag: this.curArgs[4] as 0 | 1,\n              x: this.curArgs[5],\n              y: this.curArgs[6],\n            });\n          }\n        }\n        this.curNumber = \"\";\n        this.curNumberHasExpDigits = false;\n        this.curNumberHasExp = false;\n        this.curNumberHasDecimal = false;\n        this.canParseCommandOrComma = true;\n      }\n      // Continue if a white space or a comma was detected\n      if (isWhiteSpace(c)) {\n        continue;\n      }\n      if (\",\" === c && this.canParseCommandOrComma) {\n        // L 0,0, H is not valid:\n        this.canParseCommandOrComma = false;\n        continue;\n      }\n      // if a sign is detected, then parse the new number\n      if (\"+\" === c || \"-\" === c || \".\" === c) {\n        this.curNumber = c;\n        this.curNumberHasDecimal = \".\" === c;\n        continue;\n      }\n      // if a 0 is detected, then parse the new number\n      if (isEndingDigit) {\n        this.curNumber = c;\n        this.curNumberHasDecimal = false;\n        continue;\n      }\n\n      // Adding residual command\n      if (0 !== this.curArgs.length) {\n        throw new SyntaxError(`Unterminated command at index ${i}.`);\n      }\n      if (!this.canParseCommandOrComma) {\n        throw new SyntaxError(\n          `Unexpected character \"${c}\" at index ${i}. Command cannot follow comma`,\n        );\n      }\n      this.canParseCommandOrComma = false;\n      // Detecting the next command\n      if (\"z\" === c || \"Z\" === c) {\n        commands.push({\n          type: SVGPathData.CLOSE_PATH,\n        });\n        this.canParseCommandOrComma = true;\n        this.curCommandType = -1;\n        continue;\n        // Horizontal move to command\n      } else if (\"h\" === c || \"H\" === c) {\n        this.curCommandType = SVGPathData.HORIZ_LINE_TO;\n        this.curCommandRelative = \"h\" === c;\n        // Vertical move to command\n      } else if (\"v\" === c || \"V\" === c) {\n        this.curCommandType = SVGPathData.VERT_LINE_TO;\n        this.curCommandRelative = \"v\" === c;\n        // Move to command\n      } else if (\"m\" === c || \"M\" === c) {\n        this.curCommandType = SVGPathData.MOVE_TO;\n        this.curCommandRelative = \"m\" === c;\n        // Line to command\n      } else if (\"l\" === c || \"L\" === c) {\n        this.curCommandType = SVGPathData.LINE_TO;\n        this.curCommandRelative = \"l\" === c;\n        // Curve to command\n      } else if (\"c\" === c || \"C\" === c) {\n        this.curCommandType = SVGPathData.CURVE_TO;\n        this.curCommandRelative = \"c\" === c;\n        // Smooth curve to command\n      } else if (\"s\" === c || \"S\" === c) {\n        this.curCommandType = SVGPathData.SMOOTH_CURVE_TO;\n        this.curCommandRelative = \"s\" === c;\n        // Quadratic bezier curve to command\n      } else if (\"q\" === c || \"Q\" === c) {\n        this.curCommandType = SVGPathData.QUAD_TO;\n        this.curCommandRelative = \"q\" === c;\n        // Smooth quadratic bezier curve to command\n      } else if (\"t\" === c || \"T\" === c) {\n        this.curCommandType = SVGPathData.SMOOTH_QUAD_TO;\n        this.curCommandRelative = \"t\" === c;\n        // Elliptic arc command\n      } else if (\"a\" === c || \"A\" === c) {\n        this.curCommandType = SVGPathData.ARC;\n        this.curCommandRelative = \"a\" === c;\n      } else {\n        throw new SyntaxError(`Unexpected character \"${c}\" at index ${i}.`);\n      }\n    }\n    return commands;\n  }\n  /**\n   * Return a wrapper around this parser which applies the transformation on parsed commands.\n   */\n  transform(transform: TransformFunction) {\n    const result = Object.create(this, {\n      parse: {\n        value(chunk: string, commands: SVGCommand[] = []) {\n          const parsedCommands = Object.getPrototypeOf(this).parse.call(\n            this,\n            chunk,\n          );\n          for (const c of parsedCommands) {\n            const cT = transform(c);\n            if (Array.isArray(cT)) {\n              commands.push(...cT);\n            } else {\n              commands.push(cT);\n            }\n          }\n          return commands;\n        },\n      },\n    });\n    return result as this;\n  }\n}\n", "import { encodeSVGPath } from \"./SVGPathDataEncoder\";\nimport { SVGPathDataParser } from \"./SVGPathDataParser\";\nimport { SVGPathDataTransformer } from \"./SVGPathDataTransformer\";\nimport { TransformableSVG } from \"./TransformableSVG\";\nimport { SVGCommand } from \"./types\";\n\nexport class SVGPathData extends TransformableSVG {\n  commands: SVGCommand[];\n  constructor(content: string | SVGCommand[]) {\n    super();\n    if (\"string\" === typeof content) {\n      this.commands = SVGPathData.parse(content);\n    } else {\n      this.commands = content;\n    }\n  }\n\n  encode() {\n    return SVGPathData.encode(this.commands);\n  }\n\n  getBounds() {\n    const boundsTransform = SVGPathDataTransformer.CALCULATE_BOUNDS();\n\n    this.transform(boundsTransform);\n    return boundsTransform;\n  }\n\n  transform(\n    transformFunction: (input: SVGCommand) => SVGCommand | SVGCommand[],\n  ) {\n    const newCommands = [];\n\n    for (const command of this.commands) {\n      const transformedCommand = transformFunction(command);\n\n      if (Array.isArray(transformedCommand)) {\n        newCommands.push(...transformedCommand);\n      } else {\n        newCommands.push(transformedCommand);\n      }\n    }\n    this.commands = newCommands;\n    return this;\n  }\n\n  static encode(commands: SVGCommand[]) {\n    return encodeSVGPath(commands);\n      }\n\n  static parse(path: string) {\n    const parser = new SVGPathDataParser();\n    const commands: SVGCommand[] = [];\n    parser.parse(path, commands);\n    parser.finish(commands);\n    return commands;\n  }\n\n  static readonly CLOSE_PATH: 1 = 1;\n  static readonly MOVE_TO: 2 = 2;\n  static readonly HORIZ_LINE_TO: 4 = 4;\n  static readonly VERT_LINE_TO: 8 = 8;\n  static readonly LINE_TO: 16 = 16;\n  static readonly CURVE_TO: 32 = 32;\n  static readonly SMOOTH_CURVE_TO: 64 = 64;\n  static readonly QUAD_TO: 128 = 128;\n  static readonly SMOOTH_QUAD_TO: 256 = 256;\n  static readonly ARC: 512 = 512;\n  static readonly LINE_COMMANDS = SVGPathData.LINE_TO | SVGPathData.HORIZ_LINE_TO | SVGPathData.VERT_LINE_TO;\n  static readonly DRAWING_COMMANDS = SVGPathData.HORIZ_LINE_TO | SVGPathData.VERT_LINE_TO | SVGPathData.LINE_TO |\n  SVGPathData.CURVE_TO | SVGPathData.SMOOTH_CURVE_TO | SVGPathData.QUAD_TO |\n  SVGPathData.SMOOTH_QUAD_TO | SVGPathData.ARC;\n}\n\nexport const COMMAND_ARG_COUNTS = {\n    [SVGPathData.MOVE_TO]: 2,\n    [SVGPathData.LINE_TO]: 2,\n    [SVGPathData.HORIZ_LINE_TO]: 1,\n    [SVGPathData.VERT_LINE_TO]: 1,\n    [SVGPathData.CLOSE_PATH]: 0,\n    [SVGPathData.QUAD_TO]: 4,\n    [SVGPathData.SMOOTH_QUAD_TO]: 2,\n    [SVGPathData.CURVE_TO]: 6,\n    [SVGPathData.SMOOTH_CURVE_TO]: 4,\n    [SVGPathData.ARC]: 7,\n};\n\nexport {encodeSVGPath} from \"./SVGPathDataEncoder\";\nexport {SVGPathDataParser} from \"./SVGPathDataParser\";\nexport {SVGPathDataTransformer} from \"./SVGPathDataTransformer\";\n", "function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\n/* eslint-disable no-bitwise -- used for calculations */\n\n/* eslint-disable unicorn/prefer-query-selector -- aiming at\n  backward-compatibility */\n\n/**\n* StackBlur - a fast almost Gaussian Blur For Canvas\n*\n* In case you find this class useful - especially in commercial projects -\n* I am not totally unhappy for a small donation to my PayPal account\n* mario@quasimondo.de\n*\n* Or support me on flattr:\n* {@link https://flattr.com/thing/72791/StackBlur-a-fast-almost-Gaussian-Blur-Effect-for-CanvasJavascript}.\n*\n* @module StackBlur\n* @author Mario Klingemann\n* Contact: mario@quasimondo.com\n* Website: {@link http://www.quasimondo.com/StackBlurForCanvas/StackBlurDemo.html}\n* Twitter: @quasimondo\n*\n* @copyright (c) 2010 Mario Klingemann\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\nvar mulTable = [512, 512, 456, 512, 328, 456, 335, 512, 405, 328, 271, 456, 388, 335, 292, 512, 454, 405, 364, 328, 298, 271, 496, 456, 420, 388, 360, 335, 312, 292, 273, 512, 482, 454, 428, 405, 383, 364, 345, 328, 312, 298, 284, 271, 259, 496, 475, 456, 437, 420, 404, 388, 374, 360, 347, 335, 323, 312, 302, 292, 282, 273, 265, 512, 497, 482, 468, 454, 441, 428, 417, 405, 394, 383, 373, 364, 354, 345, 337, 328, 320, 312, 305, 298, 291, 284, 278, 271, 265, 259, 507, 496, 485, 475, 465, 456, 446, 437, 428, 420, 412, 404, 396, 388, 381, 374, 367, 360, 354, 347, 341, 335, 329, 323, 318, 312, 307, 302, 297, 292, 287, 282, 278, 273, 269, 265, 261, 512, 505, 497, 489, 482, 475, 468, 461, 454, 447, 441, 435, 428, 422, 417, 411, 405, 399, 394, 389, 383, 378, 373, 368, 364, 359, 354, 350, 345, 341, 337, 332, 328, 324, 320, 316, 312, 309, 305, 301, 298, 294, 291, 287, 284, 281, 278, 274, 271, 268, 265, 262, 259, 257, 507, 501, 496, 491, 485, 480, 475, 470, 465, 460, 456, 451, 446, 442, 437, 433, 428, 424, 420, 416, 412, 408, 404, 400, 396, 392, 388, 385, 381, 377, 374, 370, 367, 363, 360, 357, 354, 350, 347, 344, 341, 338, 335, 332, 329, 326, 323, 320, 318, 315, 312, 310, 307, 304, 302, 299, 297, 294, 292, 289, 287, 285, 282, 280, 278, 275, 273, 271, 269, 267, 265, 263, 261, 259];\nvar shgTable = [9, 11, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24];\n/**\n * @param {string|HTMLImageElement} img\n * @param {string|HTMLCanvasElement} canvas\n * @param {Float} radius\n * @param {boolean} blurAlphaChannel\n * @param {boolean} useOffset\n * @param {boolean} skipStyles\n * @returns {undefined}\n */\n\nfunction processImage(img, canvas, radius, blurAlphaChannel, useOffset, skipStyles) {\n  if (typeof img === 'string') {\n    img = document.getElementById(img);\n  }\n\n  if (!img || Object.prototype.toString.call(img).slice(8, -1) === 'HTMLImageElement' && !('naturalWidth' in img)) {\n    return;\n  }\n\n  var dimensionType = useOffset ? 'offset' : 'natural';\n  var w = img[dimensionType + 'Width'];\n  var h = img[dimensionType + 'Height']; // add ImageBitmap support,can blur texture source\n\n  if (Object.prototype.toString.call(img).slice(8, -1) === 'ImageBitmap') {\n    w = img.width;\n    h = img.height;\n  }\n\n  if (typeof canvas === 'string') {\n    canvas = document.getElementById(canvas);\n  }\n\n  if (!canvas || !('getContext' in canvas)) {\n    return;\n  }\n\n  if (!skipStyles) {\n    canvas.style.width = w + 'px';\n    canvas.style.height = h + 'px';\n  }\n\n  canvas.width = w;\n  canvas.height = h;\n  var context = canvas.getContext('2d');\n  context.clearRect(0, 0, w, h);\n  context.drawImage(img, 0, 0, img.naturalWidth, img.naturalHeight, 0, 0, w, h);\n\n  if (isNaN(radius) || radius < 1) {\n    return;\n  }\n\n  if (blurAlphaChannel) {\n    processCanvasRGBA(canvas, 0, 0, w, h, radius);\n  } else {\n    processCanvasRGB(canvas, 0, 0, w, h, radius);\n  }\n}\n/**\n * @param {string|HTMLCanvasElement} canvas\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @throws {Error|TypeError}\n * @returns {ImageData} See {@link https://html.spec.whatwg.org/multipage/canvas.html#imagedata}\n */\n\n\nfunction getImageDataFromCanvas(canvas, topX, topY, width, height) {\n  if (typeof canvas === 'string') {\n    canvas = document.getElementById(canvas);\n  }\n\n  if (!canvas || _typeof(canvas) !== 'object' || !('getContext' in canvas)) {\n    throw new TypeError('Expecting canvas with `getContext` method ' + 'in processCanvasRGB(A) calls!');\n  }\n\n  var context = canvas.getContext('2d');\n\n  try {\n    return context.getImageData(topX, topY, width, height);\n  } catch (e) {\n    throw new Error('unable to access image data: ' + e);\n  }\n}\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {undefined}\n */\n\n\nfunction processCanvasRGBA(canvas, topX, topY, width, height, radius) {\n  if (isNaN(radius) || radius < 1) {\n    return;\n  }\n\n  radius |= 0;\n  var imageData = getImageDataFromCanvas(canvas, topX, topY, width, height);\n  imageData = processImageDataRGBA(imageData, topX, topY, width, height, radius);\n  canvas.getContext('2d').putImageData(imageData, topX, topY);\n}\n/**\n * @param {ImageData} imageData\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {ImageData}\n */\n\n\nfunction processImageDataRGBA(imageData, topX, topY, width, height, radius) {\n  var pixels = imageData.data;\n  var div = 2 * radius + 1; // const w4 = width << 2;\n\n  var widthMinus1 = width - 1;\n  var heightMinus1 = height - 1;\n  var radiusPlus1 = radius + 1;\n  var sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2;\n  var stackStart = new BlurStack();\n  var stack = stackStart;\n  var stackEnd;\n\n  for (var i = 1; i < div; i++) {\n    stack = stack.next = new BlurStack();\n\n    if (i === radiusPlus1) {\n      stackEnd = stack;\n    }\n  }\n\n  stack.next = stackStart;\n  var stackIn = null,\n      stackOut = null,\n      yw = 0,\n      yi = 0;\n  var mulSum = mulTable[radius];\n  var shgSum = shgTable[radius];\n\n  for (var y = 0; y < height; y++) {\n    stack = stackStart;\n    var pr = pixels[yi],\n        pg = pixels[yi + 1],\n        pb = pixels[yi + 2],\n        pa = pixels[yi + 3];\n\n    for (var _i = 0; _i < radiusPlus1; _i++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack.a = pa;\n      stack = stack.next;\n    }\n\n    var rInSum = 0,\n        gInSum = 0,\n        bInSum = 0,\n        aInSum = 0,\n        rOutSum = radiusPlus1 * pr,\n        gOutSum = radiusPlus1 * pg,\n        bOutSum = radiusPlus1 * pb,\n        aOutSum = radiusPlus1 * pa,\n        rSum = sumFactor * pr,\n        gSum = sumFactor * pg,\n        bSum = sumFactor * pb,\n        aSum = sumFactor * pa;\n\n    for (var _i2 = 1; _i2 < radiusPlus1; _i2++) {\n      var p = yi + ((widthMinus1 < _i2 ? widthMinus1 : _i2) << 2);\n      var r = pixels[p],\n          g = pixels[p + 1],\n          b = pixels[p + 2],\n          a = pixels[p + 3];\n      var rbs = radiusPlus1 - _i2;\n      rSum += (stack.r = r) * rbs;\n      gSum += (stack.g = g) * rbs;\n      bSum += (stack.b = b) * rbs;\n      aSum += (stack.a = a) * rbs;\n      rInSum += r;\n      gInSum += g;\n      bInSum += b;\n      aInSum += a;\n      stack = stack.next;\n    }\n\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (var x = 0; x < width; x++) {\n      var paInitial = aSum * mulSum >>> shgSum;\n      pixels[yi + 3] = paInitial;\n\n      if (paInitial !== 0) {\n        var _a2 = 255 / paInitial;\n\n        pixels[yi] = (rSum * mulSum >>> shgSum) * _a2;\n        pixels[yi + 1] = (gSum * mulSum >>> shgSum) * _a2;\n        pixels[yi + 2] = (bSum * mulSum >>> shgSum) * _a2;\n      } else {\n        pixels[yi] = pixels[yi + 1] = pixels[yi + 2] = 0;\n      }\n\n      rSum -= rOutSum;\n      gSum -= gOutSum;\n      bSum -= bOutSum;\n      aSum -= aOutSum;\n      rOutSum -= stackIn.r;\n      gOutSum -= stackIn.g;\n      bOutSum -= stackIn.b;\n      aOutSum -= stackIn.a;\n\n      var _p = x + radius + 1;\n\n      _p = yw + (_p < widthMinus1 ? _p : widthMinus1) << 2;\n      rInSum += stackIn.r = pixels[_p];\n      gInSum += stackIn.g = pixels[_p + 1];\n      bInSum += stackIn.b = pixels[_p + 2];\n      aInSum += stackIn.a = pixels[_p + 3];\n      rSum += rInSum;\n      gSum += gInSum;\n      bSum += bInSum;\n      aSum += aInSum;\n      stackIn = stackIn.next;\n      var _stackOut = stackOut,\n          _r = _stackOut.r,\n          _g = _stackOut.g,\n          _b = _stackOut.b,\n          _a = _stackOut.a;\n      rOutSum += _r;\n      gOutSum += _g;\n      bOutSum += _b;\n      aOutSum += _a;\n      rInSum -= _r;\n      gInSum -= _g;\n      bInSum -= _b;\n      aInSum -= _a;\n      stackOut = stackOut.next;\n      yi += 4;\n    }\n\n    yw += width;\n  }\n\n  for (var _x = 0; _x < width; _x++) {\n    yi = _x << 2;\n\n    var _pr = pixels[yi],\n        _pg = pixels[yi + 1],\n        _pb = pixels[yi + 2],\n        _pa = pixels[yi + 3],\n        _rOutSum = radiusPlus1 * _pr,\n        _gOutSum = radiusPlus1 * _pg,\n        _bOutSum = radiusPlus1 * _pb,\n        _aOutSum = radiusPlus1 * _pa,\n        _rSum = sumFactor * _pr,\n        _gSum = sumFactor * _pg,\n        _bSum = sumFactor * _pb,\n        _aSum = sumFactor * _pa;\n\n    stack = stackStart;\n\n    for (var _i3 = 0; _i3 < radiusPlus1; _i3++) {\n      stack.r = _pr;\n      stack.g = _pg;\n      stack.b = _pb;\n      stack.a = _pa;\n      stack = stack.next;\n    }\n\n    var yp = width;\n    var _gInSum = 0,\n        _bInSum = 0,\n        _aInSum = 0,\n        _rInSum = 0;\n\n    for (var _i4 = 1; _i4 <= radius; _i4++) {\n      yi = yp + _x << 2;\n\n      var _rbs = radiusPlus1 - _i4;\n\n      _rSum += (stack.r = _pr = pixels[yi]) * _rbs;\n      _gSum += (stack.g = _pg = pixels[yi + 1]) * _rbs;\n      _bSum += (stack.b = _pb = pixels[yi + 2]) * _rbs;\n      _aSum += (stack.a = _pa = pixels[yi + 3]) * _rbs;\n      _rInSum += _pr;\n      _gInSum += _pg;\n      _bInSum += _pb;\n      _aInSum += _pa;\n      stack = stack.next;\n\n      if (_i4 < heightMinus1) {\n        yp += width;\n      }\n    }\n\n    yi = _x;\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (var _y = 0; _y < height; _y++) {\n      var _p2 = yi << 2;\n\n      pixels[_p2 + 3] = _pa = _aSum * mulSum >>> shgSum;\n\n      if (_pa > 0) {\n        _pa = 255 / _pa;\n        pixels[_p2] = (_rSum * mulSum >>> shgSum) * _pa;\n        pixels[_p2 + 1] = (_gSum * mulSum >>> shgSum) * _pa;\n        pixels[_p2 + 2] = (_bSum * mulSum >>> shgSum) * _pa;\n      } else {\n        pixels[_p2] = pixels[_p2 + 1] = pixels[_p2 + 2] = 0;\n      }\n\n      _rSum -= _rOutSum;\n      _gSum -= _gOutSum;\n      _bSum -= _bOutSum;\n      _aSum -= _aOutSum;\n      _rOutSum -= stackIn.r;\n      _gOutSum -= stackIn.g;\n      _bOutSum -= stackIn.b;\n      _aOutSum -= stackIn.a;\n      _p2 = _x + ((_p2 = _y + radiusPlus1) < heightMinus1 ? _p2 : heightMinus1) * width << 2;\n      _rSum += _rInSum += stackIn.r = pixels[_p2];\n      _gSum += _gInSum += stackIn.g = pixels[_p2 + 1];\n      _bSum += _bInSum += stackIn.b = pixels[_p2 + 2];\n      _aSum += _aInSum += stackIn.a = pixels[_p2 + 3];\n      stackIn = stackIn.next;\n      _rOutSum += _pr = stackOut.r;\n      _gOutSum += _pg = stackOut.g;\n      _bOutSum += _pb = stackOut.b;\n      _aOutSum += _pa = stackOut.a;\n      _rInSum -= _pr;\n      _gInSum -= _pg;\n      _bInSum -= _pb;\n      _aInSum -= _pa;\n      stackOut = stackOut.next;\n      yi += width;\n    }\n  }\n\n  return imageData;\n}\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {undefined}\n */\n\n\nfunction processCanvasRGB(canvas, topX, topY, width, height, radius) {\n  if (isNaN(radius) || radius < 1) {\n    return;\n  }\n\n  radius |= 0;\n  var imageData = getImageDataFromCanvas(canvas, topX, topY, width, height);\n  imageData = processImageDataRGB(imageData, topX, topY, width, height, radius);\n  canvas.getContext('2d').putImageData(imageData, topX, topY);\n}\n/**\n * @param {ImageData} imageData\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {ImageData}\n */\n\n\nfunction processImageDataRGB(imageData, topX, topY, width, height, radius) {\n  var pixels = imageData.data;\n  var div = 2 * radius + 1; // const w4 = width << 2;\n\n  var widthMinus1 = width - 1;\n  var heightMinus1 = height - 1;\n  var radiusPlus1 = radius + 1;\n  var sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2;\n  var stackStart = new BlurStack();\n  var stack = stackStart;\n  var stackEnd;\n\n  for (var i = 1; i < div; i++) {\n    stack = stack.next = new BlurStack();\n\n    if (i === radiusPlus1) {\n      stackEnd = stack;\n    }\n  }\n\n  stack.next = stackStart;\n  var stackIn = null;\n  var stackOut = null;\n  var mulSum = mulTable[radius];\n  var shgSum = shgTable[radius];\n  var p, rbs;\n  var yw = 0,\n      yi = 0;\n\n  for (var y = 0; y < height; y++) {\n    var pr = pixels[yi],\n        pg = pixels[yi + 1],\n        pb = pixels[yi + 2],\n        rOutSum = radiusPlus1 * pr,\n        gOutSum = radiusPlus1 * pg,\n        bOutSum = radiusPlus1 * pb,\n        rSum = sumFactor * pr,\n        gSum = sumFactor * pg,\n        bSum = sumFactor * pb;\n    stack = stackStart;\n\n    for (var _i5 = 0; _i5 < radiusPlus1; _i5++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack = stack.next;\n    }\n\n    var rInSum = 0,\n        gInSum = 0,\n        bInSum = 0;\n\n    for (var _i6 = 1; _i6 < radiusPlus1; _i6++) {\n      p = yi + ((widthMinus1 < _i6 ? widthMinus1 : _i6) << 2);\n      rSum += (stack.r = pr = pixels[p]) * (rbs = radiusPlus1 - _i6);\n      gSum += (stack.g = pg = pixels[p + 1]) * rbs;\n      bSum += (stack.b = pb = pixels[p + 2]) * rbs;\n      rInSum += pr;\n      gInSum += pg;\n      bInSum += pb;\n      stack = stack.next;\n    }\n\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (var x = 0; x < width; x++) {\n      pixels[yi] = rSum * mulSum >>> shgSum;\n      pixels[yi + 1] = gSum * mulSum >>> shgSum;\n      pixels[yi + 2] = bSum * mulSum >>> shgSum;\n      rSum -= rOutSum;\n      gSum -= gOutSum;\n      bSum -= bOutSum;\n      rOutSum -= stackIn.r;\n      gOutSum -= stackIn.g;\n      bOutSum -= stackIn.b;\n      p = yw + ((p = x + radius + 1) < widthMinus1 ? p : widthMinus1) << 2;\n      rInSum += stackIn.r = pixels[p];\n      gInSum += stackIn.g = pixels[p + 1];\n      bInSum += stackIn.b = pixels[p + 2];\n      rSum += rInSum;\n      gSum += gInSum;\n      bSum += bInSum;\n      stackIn = stackIn.next;\n      rOutSum += pr = stackOut.r;\n      gOutSum += pg = stackOut.g;\n      bOutSum += pb = stackOut.b;\n      rInSum -= pr;\n      gInSum -= pg;\n      bInSum -= pb;\n      stackOut = stackOut.next;\n      yi += 4;\n    }\n\n    yw += width;\n  }\n\n  for (var _x2 = 0; _x2 < width; _x2++) {\n    yi = _x2 << 2;\n\n    var _pr2 = pixels[yi],\n        _pg2 = pixels[yi + 1],\n        _pb2 = pixels[yi + 2],\n        _rOutSum2 = radiusPlus1 * _pr2,\n        _gOutSum2 = radiusPlus1 * _pg2,\n        _bOutSum2 = radiusPlus1 * _pb2,\n        _rSum2 = sumFactor * _pr2,\n        _gSum2 = sumFactor * _pg2,\n        _bSum2 = sumFactor * _pb2;\n\n    stack = stackStart;\n\n    for (var _i7 = 0; _i7 < radiusPlus1; _i7++) {\n      stack.r = _pr2;\n      stack.g = _pg2;\n      stack.b = _pb2;\n      stack = stack.next;\n    }\n\n    var _rInSum2 = 0,\n        _gInSum2 = 0,\n        _bInSum2 = 0;\n\n    for (var _i8 = 1, yp = width; _i8 <= radius; _i8++) {\n      yi = yp + _x2 << 2;\n      _rSum2 += (stack.r = _pr2 = pixels[yi]) * (rbs = radiusPlus1 - _i8);\n      _gSum2 += (stack.g = _pg2 = pixels[yi + 1]) * rbs;\n      _bSum2 += (stack.b = _pb2 = pixels[yi + 2]) * rbs;\n      _rInSum2 += _pr2;\n      _gInSum2 += _pg2;\n      _bInSum2 += _pb2;\n      stack = stack.next;\n\n      if (_i8 < heightMinus1) {\n        yp += width;\n      }\n    }\n\n    yi = _x2;\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (var _y2 = 0; _y2 < height; _y2++) {\n      p = yi << 2;\n      pixels[p] = _rSum2 * mulSum >>> shgSum;\n      pixels[p + 1] = _gSum2 * mulSum >>> shgSum;\n      pixels[p + 2] = _bSum2 * mulSum >>> shgSum;\n      _rSum2 -= _rOutSum2;\n      _gSum2 -= _gOutSum2;\n      _bSum2 -= _bOutSum2;\n      _rOutSum2 -= stackIn.r;\n      _gOutSum2 -= stackIn.g;\n      _bOutSum2 -= stackIn.b;\n      p = _x2 + ((p = _y2 + radiusPlus1) < heightMinus1 ? p : heightMinus1) * width << 2;\n      _rSum2 += _rInSum2 += stackIn.r = pixels[p];\n      _gSum2 += _gInSum2 += stackIn.g = pixels[p + 1];\n      _bSum2 += _bInSum2 += stackIn.b = pixels[p + 2];\n      stackIn = stackIn.next;\n      _rOutSum2 += _pr2 = stackOut.r;\n      _gOutSum2 += _pg2 = stackOut.g;\n      _bOutSum2 += _pb2 = stackOut.b;\n      _rInSum2 -= _pr2;\n      _gInSum2 -= _pg2;\n      _bInSum2 -= _pb2;\n      stackOut = stackOut.next;\n      yi += width;\n    }\n  }\n\n  return imageData;\n}\n/**\n *\n */\n\n\nvar BlurStack =\n/**\n * Set properties.\n */\nfunction BlurStack() {\n  _classCallCheck(this, BlurStack);\n\n  this.r = 0;\n  this.g = 0;\n  this.b = 0;\n  this.a = 0;\n  this.next = null;\n};\n\nexport { BlurStack, processCanvasRGB as canvasRGB, processCanvasRGBA as canvasRGBA, processImage as image, processImageDataRGB as imageDataRGB, processImageDataRGBA as imageDataRGBA };\n", "import { DOMParser } from './types'\n\ninterface IConfig {\n  /**\n   * XML/HTML parser from string into DOM Document.\n   */\n  DOMParser?: DOMParser\n}\n\n/**\n * Options preset for `OffscreenCanvas`.\n * @param config - Preset requirements.\n * @param config.DOMParser - XML/HTML parser from string into DOM Document.\n * @returns Preset object.\n */\nexport function offscreen({ DOMParser: DOMParserFallback }: IConfig = {}) {\n  const preset = {\n    window: null,\n    ignoreAnimation: true,\n    ignoreMouse: true,\n    DOMParser: DOMParserFallback,\n    createCanvas(width: number, height: number) {\n      return new OffscreenCanvas(width, height)\n    },\n    async createImage(url: string) {\n      const response = await fetch(url)\n      const blob = await response.blob()\n      const img = await createImageBitmap(blob)\n\n      return img\n    }\n  }\n\n  if (typeof globalThis.DOMParser !== 'undefined'\n    || typeof DOMParserFallback === 'undefined'\n  ) {\n    Reflect.deleteProperty(preset, 'DOMParser')\n  }\n\n  return preset\n}\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { DOMParser } from './types'\n\n/**\n * `node-canvas` exports.\n */\ninterface ICanvas {\n  createCanvas(width: number, height: number): any\n  loadImage(src: string): Promise<any>\n}\n\n/**\n * WHATWG-compatible `fetch` function.\n */\ntype Fetch = (input: any, config?: any) => Promise<any>\n\ninterface IConfig {\n  /**\n   * XML/HTML parser from string into DOM Document.\n   */\n  DOMParser: DOMParser\n  /**\n   * `node-canvas` exports.\n   */\n  canvas: ICanvas\n  /**\n   * WHATWG-compatible `fetch` function.\n   */\n  fetch: Fetch\n}\n\n/**\n * Options preset for `node-canvas`.\n * @param config - Preset requirements.\n * @param config.DOMParser - XML/HTML parser from string into DOM Document.\n * @param config.canvas - `node-canvas` exports.\n * @param config.fetch - WHATWG-compatible `fetch` function.\n * @returns Preset object.\n */\nexport function node({\n  DOMParser,\n  canvas,\n  fetch\n}: IConfig) {\n  return {\n    window: null,\n    ignoreAnimation: true,\n    ignoreMouse: true,\n    DOMParser,\n    fetch,\n    createCanvas: canvas.createCanvas,\n    createImage: canvas.loadImage\n  }\n}\n", "import { MatrixValue } from '../types'\n\n/**\n * HTML-safe compress white-spaces.\n * @param str - String to compress.\n * @returns String.\n */\nexport function compressSpaces(str: string) {\n  return str.replace(/(?!\\u3000)\\s+/gm, ' ')\n}\n\n/**\n * HTML-safe left trim.\n * @param str - String to trim.\n * @returns String.\n */\nexport function trimLeft(str: string) {\n  return str.replace(/^[\\n \\t]+/, '')\n}\n\n/**\n * HTML-safe right trim.\n * @param str - String to trim.\n * @returns String.\n */\nexport function trimRight(str: string) {\n  return str.replace(/[\\n \\t]+$/, '')\n}\n\n/**\n * String to numbers array.\n * @param str - Numbers string.\n * @returns Numbers array.\n */\nexport function toNumbers(str: string) {\n  const matches = str.match(/-?(\\d+(?:\\.\\d*(?:[eE][+-]?\\d+)?)?|\\.\\d+)(?=\\D|$)/gm)\n\n  return matches ? matches.map(parseFloat) : []\n}\n\n/**\n * String to matrix value.\n * @param str - Numbers string.\n * @returns Matrix value.\n */\nexport function toMatrixValue(str: string): MatrixValue {\n  const numbers = toNumbers(str)\n  const matrix = [\n    numbers[0] || 0,\n    numbers[1] || 0,\n    numbers[2] || 0,\n    numbers[3] || 0,\n    numbers[4] || 0,\n    numbers[5] || 0\n  ] as const\n\n  return matrix\n}\n\n// Microsoft Edge fix\nconst allUppercase = /^[A-Z-]+$/\n\n/**\n * Normalize attribute name.\n * @param name - Attribute name.\n * @returns Normalized attribute name.\n */\nexport function normalizeAttributeName(name: string) {\n  if (allUppercase.test(name)) {\n    return name.toLowerCase()\n  }\n\n  return name\n}\n\n/**\n * Parse external URL.\n * @param url - CSS url string.\n * @returns Parsed URL.\n */\nexport function parseExternalUrl(url: string): string {\n  //                      single quotes [2]\n  //                      v         double quotes [3]\n  //                      v         v         no quotes [4]\n  //                      v         v         v\n  const urlMatch = /url\\(('([^']+)'|\"([^\"]+)\"|([^'\")]+))\\)/.exec(url)\n\n  if (!urlMatch) {\n    return ''\n  }\n\n  return urlMatch[2] || urlMatch[3] || urlMatch[4] || ''\n}\n\n/**\n * Transform floats to integers in rgb colors.\n * @param color - Color to normalize.\n * @returns Normalized color.\n */\nexport function normalizeColor(color: string) {\n  if (!color.startsWith('rgb')) {\n    return color\n  }\n\n  let rgbParts = 3\n  const normalizedColor = color.replace(\n    /\\d+(\\.\\d+)?/g,\n    (num, isFloat) => (rgbParts-- && isFloat\n      ? String(Math.round(parseFloat(num)))\n      : num)\n  )\n\n  return normalizedColor\n}\n", "\n// slightly modified version of https://github.com/keeganstreet/specificity/blob/master/specificity.js\nconst attributeRegex = /(\\[[^\\]]+\\])/g\nconst idRegex = /(#[^\\s+>~.[:]+)/g\nconst classRegex = /(\\.[^\\s+>~.[:]+)/g\nconst pseudoElementRegex = /(::[^\\s+>~.[:]+|:first-line|:first-letter|:before|:after)/gi\nconst pseudoClassWithBracketsRegex = /(:[\\w-]+\\([^)]*\\))/gi\nconst pseudoClassRegex = /(:[^\\s+>~.[:]+)/g\nconst elementRegex = /([^\\s+>~.[:]+)/g\n\nfunction findSelectorMatch(selector: string, regex: RegExp): [string, number] {\n  const matches = regex.exec(selector)\n\n  if (!matches) {\n    return [selector, 0]\n  }\n\n  return [selector.replace(regex, ' '), matches.length]\n}\n\n/**\n * Measure selector specificity.\n * @param selector - Selector to measure.\n * @returns Specificity.\n */\nexport function getSelectorSpecificity(selector: string) {\n  const specificity = [\n    0,\n    0,\n    0\n  ]\n  let currentSelector = selector\n    .replace(/:not\\(([^)]*)\\)/g, '     $1 ')\n    .replace(/{[\\s\\S]*/gm, ' ')\n  let delta = 0;\n\n  [currentSelector, delta] = findSelectorMatch(currentSelector, attributeRegex)\n  specificity[1] += delta;\n\n  [currentSelector, delta] = findSelectorMatch(currentSelector, idRegex)\n  specificity[0] += delta;\n\n  [currentSelector, delta] = findSelectorMatch(currentSelector, classRegex)\n  specificity[1] += delta;\n\n  [currentSelector, delta] = findSelectorMatch(currentSelector, pseudoElementRegex)\n  specificity[2] += delta;\n\n  [currentSelector, delta] = findSelectorMatch(currentSelector, pseudoClassWithBracketsRegex)\n  specificity[1] += delta;\n\n  [currentSelector, delta] = findSelectorMatch(currentSelector, pseudoClassRegex)\n  specificity[1] += delta\n\n  currentSelector = currentSelector\n    .replace(/[*\\s+>~]/g, ' ')\n    .replace(/[#.]/g, ' ');\n\n  [currentSelector, delta] = findSelectorMatch(currentSelector, elementRegex) // lgtm [js/useless-assignment-to-local]\n  specificity[2] += delta\n\n  return specificity.join('')\n}\n", "import { VectorValue } from '../types'\n\nexport const PSEUDO_ZERO = .00000001\n\n/**\n * Vector magnitude.\n * @param v\n * @returns Number result.\n */\nexport function vectorMagnitude(v: VectorValue) {\n  return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2))\n}\n\n/**\n * Ratio between two vectors.\n * @param u\n * @param v\n * @returns Number result.\n */\nexport function vectorsRatio(u: VectorValue, v: VectorValue) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vectorMagnitude(u) * vectorMagnitude(v))\n}\n\n/**\n * Angle between two vectors.\n * @param u\n * @param v\n * @returns Number result.\n */\nexport function vectorsAngle(u: VectorValue, v: VectorValue) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vectorsRatio(u, v))\n}\n\nexport function CB1(t: number) {\n  return t * t * t\n}\n\nexport function CB2(t: number) {\n  return 3 * t * t * (1 - t)\n}\n\nexport function CB3(t: number) {\n  return 3 * t * (1 - t) * (1 - t)\n}\n\nexport function CB4(t: number) {\n  return (1 - t) * (1 - t) * (1 - t)\n}\n\nexport function QB1(t: number) {\n  return t * t\n}\n\nexport function QB2(t: number) {\n  return 2 * t * (1 - t)\n}\n\nexport function QB3(t: number) {\n  return (1 - t) * (1 - t)\n}\n", "import RGBColor from 'rgbcolor'\nimport {\n  compressSpaces,\n  normalizeColor\n} from './util'\nimport { Axis } from './ViewPort'\nimport {\n  Document,\n  Element,\n  PathElement,\n  PatternElement,\n  GradientElement\n} from './Document'\n\nexport class Property<T = unknown> {\n  static empty(document: Document) {\n    return new Property(document, 'EMPTY', '')\n  }\n\n  static readonly textBaselineMapping: Record<string, string> = {\n    'baseline': 'alphabetic',\n    'before-edge': 'top',\n    'text-before-edge': 'top',\n    'middle': 'middle',\n    'central': 'middle',\n    'after-edge': 'bottom',\n    'text-after-edge': 'bottom',\n    'ideographic': 'ideographic',\n    'alphabetic': 'alphabetic',\n    'hanging': 'hanging',\n    'mathematical': 'alphabetic'\n  }\n\n  private isNormalizedColor = false\n\n  constructor(\n    private readonly document: Document,\n    private readonly name: string,\n    private value: T\n  ) {}\n\n  split(separator = ' ') {\n    const {\n      document,\n      name\n    } = this\n\n    return compressSpaces(this.getString())\n      .trim()\n      .split(separator)\n      .map(value => new Property<string>(document, name, value))\n  }\n\n  hasValue(zeroIsValue?: boolean) {\n    const value = this.value as unknown\n\n    return value !== null\n      && value !== ''\n      && (zeroIsValue || value !== 0)\n      && typeof value !== 'undefined'\n  }\n\n  isString(regexp?: RegExp) {\n    const { value } = this\n    const result = typeof value === 'string'\n\n    if (!result || !regexp) {\n      return result\n    }\n\n    return regexp.test(value)\n  }\n\n  isUrlDefinition() {\n    return this.isString(/^url\\(/)\n  }\n\n  isPixels() {\n    if (!this.hasValue()) {\n      return false\n    }\n\n    const asString = this.getString()\n\n    switch (true) {\n      case asString.endsWith('px'):\n      case /^[0-9]+$/.test(asString):\n        return true\n\n      default:\n        return false\n    }\n  }\n\n  setValue(value: T) {\n    this.value = value\n    return this\n  }\n\n  getValue(def?: T) {\n    if (typeof def === 'undefined' || this.hasValue()) {\n      return this.value\n    }\n\n    return def\n  }\n\n  getNumber(def?: T) {\n    if (!this.hasValue()) {\n      if (typeof def === 'undefined') {\n        return 0\n      }\n\n      // @ts-expect-error Parse unknown value.\n      return parseFloat(def)\n    }\n\n    const { value } = this\n    // @ts-expect-error Parse unknown value.\n    let n = parseFloat(value)\n\n    if (this.isString(/%$/)) {\n      n /= 100.0\n    }\n\n    return n\n  }\n\n  getString(def?: T) {\n    if (typeof def === 'undefined' || this.hasValue()) {\n      return typeof this.value === 'undefined'\n        ? ''\n        : String(this.value)\n    }\n\n    return String(def)\n  }\n\n  getColor(def?: T) {\n    let color = this.getString(def)\n\n    if (this.isNormalizedColor) {\n      return color\n    }\n\n    this.isNormalizedColor = true\n    color = normalizeColor(color)\n    this.value = color as unknown as T\n\n    return color\n  }\n\n  getDpi() {\n    return 96.0 // TODO: compute?\n  }\n\n  getRem() {\n    return this.document.rootEmSize\n  }\n\n  getEm() {\n    return this.document.emSize\n  }\n\n  getUnits() {\n    return this.getString().replace(/[0-9.-]/g, '')\n  }\n\n  getPixels(axis?: Axis, processPercent?: boolean): number\n  getPixels(isFontSize?: boolean): number\n  getPixels(axisOrIsFontSize?: Axis | boolean, processPercent = false): number {\n    if (!this.hasValue()) {\n      return 0\n    }\n\n    const [axis, isFontSize] = typeof axisOrIsFontSize === 'boolean'\n      ? [undefined, axisOrIsFontSize]\n      : [axisOrIsFontSize]\n    const { viewPort } = this.document.screen\n\n    switch (true) {\n      case this.isString(/vmin$/):\n        return this.getNumber()\n          / 100.0\n          * Math.min(\n            viewPort.computeSize('x'),\n            viewPort.computeSize('y')\n          )\n\n      case this.isString(/vmax$/):\n        return this.getNumber()\n          / 100.0\n          * Math.max(\n            viewPort.computeSize('x'),\n            viewPort.computeSize('y')\n          )\n\n      case this.isString(/vw$/):\n        return this.getNumber()\n          / 100.0\n          * viewPort.computeSize('x')\n\n      case this.isString(/vh$/):\n        return this.getNumber()\n          / 100.0\n          * viewPort.computeSize('y')\n\n      case this.isString(/rem$/):\n        return this.getNumber() * this.getRem(/* viewPort */)\n\n      case this.isString(/em$/):\n        return this.getNumber() * this.getEm(/* viewPort */)\n\n      case this.isString(/ex$/):\n        return this.getNumber() * this.getEm(/* viewPort */) / 2.0\n\n      case this.isString(/px$/):\n        return this.getNumber()\n\n      case this.isString(/pt$/):\n        return this.getNumber() * this.getDpi(/* viewPort */) * (1.0 / 72.0)\n\n      case this.isString(/pc$/):\n        return this.getNumber() * 15\n\n      case this.isString(/cm$/):\n        return this.getNumber() * this.getDpi(/* viewPort */) / 2.54\n\n      case this.isString(/mm$/):\n        return this.getNumber() * this.getDpi(/* viewPort */) / 25.4\n\n      case this.isString(/in$/):\n        return this.getNumber() * this.getDpi(/* viewPort */)\n\n      case this.isString(/%$/) && isFontSize:\n        return this.getNumber() * this.getEm(/* viewPort */)\n\n      case this.isString(/%$/):\n        return this.getNumber() * viewPort.computeSize(axis)\n\n      default: {\n        const n = this.getNumber()\n\n        if (processPercent && n < 1.0) {\n          return n * viewPort.computeSize(axis)\n        }\n\n        return n\n      }\n    }\n  }\n\n  getMilliseconds() {\n    if (!this.hasValue()) {\n      return 0\n    }\n\n    if (this.isString(/ms$/)) {\n      return this.getNumber()\n    }\n\n    return this.getNumber() * 1000\n  }\n\n  getRadians() {\n    if (!this.hasValue()) {\n      return 0\n    }\n\n    switch (true) {\n      case this.isString(/deg$/):\n        return this.getNumber() * (Math.PI / 180.0)\n\n      case this.isString(/grad$/):\n        return this.getNumber() * (Math.PI / 200.0)\n\n      case this.isString(/rad$/):\n        return this.getNumber()\n\n      default:\n        return this.getNumber() * (Math.PI / 180.0)\n    }\n  }\n\n  getDefinition<T extends Element>() {\n    const asString = this.getString()\n    const match = /#([^)'\"]+)/.exec(asString)\n    const name = match?.[1] || asString\n\n    return this.document.definitions.get(name) as T | undefined\n  }\n\n  getFillStyleDefinition(element: Element | PathElement, opacity: Property) {\n    let def = this.getDefinition<PatternElement & GradientElement>()\n\n    if (!def) {\n      return null\n    }\n\n    // gradient\n    if (typeof def.createGradient === 'function' && 'getBoundingBox' in element) {\n      return def.createGradient(\n        this.document.ctx,\n        element,\n        opacity\n      )\n    }\n\n    // pattern\n    if (typeof def.createPattern === 'function') {\n      if (def.getHrefAttribute().hasValue()) {\n        const patternTransform = def.getAttribute('patternTransform')\n\n        def = def.getHrefAttribute().getDefinition()\n\n        if (def && patternTransform.hasValue()) {\n          def.getAttribute('patternTransform', true).setValue(patternTransform.value)\n        }\n      }\n\n      if (def) {\n        return def.createPattern(this.document.ctx, element, opacity)\n      }\n    }\n\n    return null\n  }\n\n  getTextBaseline() {\n    if (!this.hasValue()) {\n      return null\n    }\n\n    const key = this.getString()\n\n    return Property.textBaselineMapping[key] || null\n  }\n\n  addOpacity(opacity: Property) {\n    let value = this.getColor()\n    const len = value.length\n    let commas = 0\n\n    // Simulate old RGBColor version, which can't parse rgba.\n    for (let i = 0; i < len; i++) {\n      if (value[i] === ',') {\n        commas++\n      }\n\n      if (commas === 3) {\n        break\n      }\n    }\n\n    if (opacity.hasValue() && this.isString() && commas !== 3) {\n      const color = new RGBColor(value)\n\n      if (color.ok) {\n        color.alpha = opacity.getNumber()\n        value = color.toRGBA()\n      }\n    }\n\n    return new Property<string>(this.document, this.name, value)\n  }\n}\n", "\nexport interface IViewPortSize {\n  width: number\n  height: number\n}\n\nexport type Axis = 'x' | 'y'\n\nexport class ViewPort {\n  static DEFAULT_VIEWPORT_WIDTH = 800\n  static DEFAULT_VIEWPORT_HEIGHT = 600\n\n  viewPorts: IViewPortSize[] = []\n\n  clear() {\n    this.viewPorts = []\n  }\n\n  setCurrent(width: number, height: number) {\n    this.viewPorts.push({\n      width,\n      height\n    })\n  }\n\n  removeCurrent() {\n    this.viewPorts.pop()\n  }\n\n  getRoot() {\n    const [root] = this.viewPorts\n\n    if (!root) {\n      return getDefault()\n    }\n\n    return root\n  }\n\n  getCurrent() {\n    const { viewPorts } = this\n    const current = viewPorts[viewPorts.length - 1]\n\n    if (!current) {\n      return getDefault()\n    }\n\n    return current\n  }\n\n  get width() {\n    return this.getCurrent().width\n  }\n\n  get height() {\n    return this.getCurrent().height\n  }\n\n  computeSize(d?: number|Axis) {\n    if (typeof d === 'number') {\n      return d\n    }\n\n    if (d === 'x') {\n      return this.width\n    }\n\n    if (d === 'y') {\n      return this.height\n    }\n\n    return Math.sqrt(\n      Math.pow(this.width, 2) + Math.pow(this.height, 2)\n    ) / Math.sqrt(2)\n  }\n}\n\nfunction getDefault() {\n  return {\n    width: ViewPort.DEFAULT_VIEWPORT_WIDTH,\n    height: ViewPort.DEFAULT_VIEWPORT_HEIGHT\n  }\n}\n", "import { MatrixValue } from './types'\nimport { toNumbers } from './util'\n\nexport class Point {\n  static parse(point: string, defaultValue = 0) {\n    const [x = defaultValue, y = defaultValue] = toNumbers(point)\n\n    return new Point(x, y)\n  }\n\n  static parseScale(scale: string, defaultValue = 1) {\n    const [x = defaultValue, y = x] = toNumbers(scale)\n\n    return new Point(x, y)\n  }\n\n  static parsePath(path: string) {\n    const points = toNumbers(path)\n    const len = points.length\n    const pathPoints: Point[] = []\n\n    for (let i = 0; i < len; i += 2) {\n      pathPoints.push(new Point(points[i], points[i + 1]))\n    }\n\n    return pathPoints\n  }\n\n  constructor(\n    public x: number,\n    public y: number\n  ) {}\n\n  angleTo(point: Point) {\n    return Math.atan2(point.y - this.y, point.x - this.x)\n  }\n\n  applyTransform(transform: MatrixValue) {\n    const {\n      x,\n      y\n    } = this\n    const xp = x * transform[0] + y * transform[2] + transform[4]\n    const yp = x * transform[1] + y * transform[3] + transform[5]\n\n    this.x = xp\n    this.y = yp\n  }\n}\n", "import { RenderingContext2D } from './types'\nimport { BoundingBox } from './BoundingBox'\nimport { Point } from './Point'\nimport { Screen } from './Screen'\nimport { Element } from './Document'\n\ninterface IEventTarget {\n  onClick?(): void\n  onMouseMove?(): void\n}\n\nexport interface IEvent {\n  type: string\n  x: number\n  y: number\n  run(eventTarget: IEventTarget): void\n}\n\nexport class Mouse {\n  private working = false\n  private events: IEvent[] = []\n  private eventElements: Element[] = []\n\n  constructor(\n    private readonly screen: Screen\n  ) {\n    this.onClick = this.onClick.bind(this)\n    this.onMouseMove = this.onMouseMove.bind(this)\n  }\n\n  isWorking() {\n    return this.working\n  }\n\n  start() {\n    if (this.working) {\n      return\n    }\n\n    const {\n      screen,\n      onClick,\n      onMouseMove\n    } = this\n    const canvas = screen.ctx.canvas as HTMLCanvasElement\n\n    canvas.onclick = onClick\n    canvas.onmousemove = onMouseMove\n    this.working = true\n  }\n\n  stop() {\n    if (!this.working) {\n      return\n    }\n\n    const canvas = this.screen.ctx.canvas as HTMLCanvasElement\n\n    this.working = false\n    canvas.onclick = null\n    canvas.onmousemove = null\n  }\n\n  hasEvents() {\n    return this.working && this.events.length > 0\n  }\n\n  runEvents() {\n    if (!this.working) {\n      return\n    }\n\n    const {\n      screen: document,\n      events,\n      eventElements\n    } = this\n    const { style } = document.ctx.canvas as HTMLCanvasElement\n    let element: Element | null | undefined\n\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (style) {\n      style.cursor = ''\n    }\n\n    events.forEach(({ run }, i) => {\n      element = eventElements[i]\n\n      while (element) {\n        run(element as IEventTarget)\n        element = element.parent\n      }\n    })\n\n    // done running, clear\n    this.events = []\n    this.eventElements = []\n  }\n\n  checkPath(element: Element, ctx: RenderingContext2D | null) {\n    if (!this.working || !ctx) {\n      return\n    }\n\n    const {\n      events,\n      eventElements\n    } = this\n\n    events.forEach(({ x, y }, i) => {\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!eventElements[i] && ctx.isPointInPath && ctx.isPointInPath(x, y)) {\n        eventElements[i] = element\n      }\n    })\n  }\n\n  checkBoundingBox(element: Element, boundingBox: BoundingBox | null) {\n    if (!this.working || !boundingBox) {\n      return\n    }\n\n    const {\n      events,\n      eventElements\n    } = this\n\n    events.forEach(({ x, y }, i) => {\n      if (!eventElements[i] && boundingBox.isPointInBox(x, y)) {\n        eventElements[i] = element\n      }\n    })\n  }\n\n  private mapXY(x: number, y: number) {\n    const {\n      window,\n      ctx\n    } = this.screen\n    const point = new Point(x, y)\n    let element = ctx.canvas as HTMLElement | null\n\n    while (element) {\n      point.x -= element.offsetLeft\n      point.y -= element.offsetTop\n      element = element.offsetParent as HTMLElement | null\n    }\n\n    if (window?.scrollX) {\n      point.x += window.scrollX\n    }\n\n    if (window?.scrollY) {\n      point.y += window.scrollY\n    }\n\n    return point\n  }\n\n  private onClick(event: MouseEvent) {\n    const {\n      x,\n      y\n    } = this.mapXY(\n      event.clientX,\n      event.clientY\n    )\n\n    this.events.push({\n      type: 'onclick',\n      x,\n      y,\n      run(eventTarget) {\n        if (eventTarget.onClick) {\n          eventTarget.onClick()\n        }\n      }\n    })\n  }\n\n  private onMouseMove(event: MouseEvent) {\n    const {\n      x,\n      y\n    } = this.mapXY(\n      event.clientX,\n      event.clientY\n    )\n\n    this.events.push({\n      type: 'onmousemove',\n      x,\n      y,\n      run(eventTarget) {\n        if (eventTarget.onMouseMove) {\n          eventTarget.onMouseMove()\n        }\n      }\n    })\n  }\n}\n", "import requestAnimationFrame from 'raf'\nimport {\n  RenderingContext2D,\n  Fetch\n} from './types'\nimport {\n  compressSpaces,\n  toNumbers\n} from './util'\nimport { Property } from './Property'\nimport { ViewPort } from './ViewPort'\nimport { Mouse } from './Mouse'\nimport {\n  Document,\n  Element,\n  AnimateElement\n} from './Document'\n\nexport interface IScreenOptions {\n  /**\n   * Window object.\n   */\n  window?: Window | null\n  /**\n   * WHATWG-compatible `fetch` function.\n   */\n  fetch?: Fetch\n}\n\nexport interface IScreenStartOptions {\n  /**\n   * Whether enable the redraw.\n   */\n  enableRedraw?: boolean\n  /**\n   * Ignore mouse events.\n   */\n  ignoreMouse?: boolean\n  /**\n   * Ignore animations.\n   */\n  ignoreAnimation?: boolean\n  /**\n   * Does not try to resize canvas.\n   */\n  ignoreDimensions?: boolean\n  /**\n   * Does not clear canvas.\n   */\n  ignoreClear?: boolean\n  /**\n   * Scales horizontally to width.\n   */\n  scaleWidth?: number\n  /**\n   * Scales vertically to height.\n   */\n  scaleHeight?: number\n  /**\n   * Draws at a x offset.\n   */\n  offsetX?: number\n  /**\n   * Draws at a y offset.\n   */\n  offsetY?: number\n  /**\n   * Will call the function on every frame, if it returns true, will redraw.\n   */\n  forceRedraw?(): boolean\n}\n\nexport interface IScreenViewBoxConfig {\n  document: Document\n  ctx: RenderingContext2D\n  aspectRatio: string\n  width: number\n  desiredWidth: number\n  height: number\n  desiredHeight: number\n  minX?: number\n  minY?: number\n  refX?: number\n  refY?: number\n  clip?: boolean\n  clipX?: number\n  clipY?: number\n}\n\nconst defaultWindow = typeof window !== 'undefined'\n  ? window\n  : null\nconst defaultFetch = typeof fetch !== 'undefined'\n  ? fetch.bind(undefined) // `fetch` depends on context: `someObject.fetch(...)` will throw error.\n  : undefined\n\nexport class Screen {\n  static readonly defaultWindow = defaultWindow\n  static readonly defaultFetch = defaultFetch\n  static FRAMERATE = 30\n  static MAX_VIRTUAL_PIXELS = 30000\n\n  readonly window: Window | null\n  readonly fetch: Fetch\n  readonly viewPort = new ViewPort()\n  readonly mouse = new Mouse(this)\n  readonly animations: AnimateElement[] = []\n  private readyPromise: Promise<void> | undefined\n  private resolveReady: (() => void) | undefined\n  private waits: (() => boolean)[] = []\n  private frameDuration = 0\n  private isReadyLock = false\n  private isFirstRender = true\n  private intervalId: number | null = null\n\n  constructor(\n    readonly ctx: RenderingContext2D,\n    {\n      fetch = defaultFetch,\n      window = defaultWindow\n    }: IScreenOptions = {}\n  ) {\n    this.window = window\n\n    if (!fetch) {\n      throw new Error(`Can't find 'fetch' in 'globalThis', please provide it via options`)\n    }\n\n    this.fetch = fetch\n  }\n\n  wait(checker: () => boolean) {\n    this.waits.push(checker)\n  }\n\n  ready() {\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    if (!this.readyPromise) {\n      return Promise.resolve()\n    }\n\n    return this.readyPromise\n  }\n\n  isReady() {\n    if (this.isReadyLock) {\n      return true\n    }\n\n    const isReadyLock = this.waits.every(_ => _())\n\n    if (isReadyLock) {\n      this.waits = []\n\n      if (this.resolveReady) {\n        this.resolveReady()\n      }\n    }\n\n    this.isReadyLock = isReadyLock\n\n    return isReadyLock\n  }\n\n  setDefaults(ctx: RenderingContext2D) {\n    // initial values and defaults\n    ctx.strokeStyle = 'rgba(0,0,0,0)'\n    ctx.lineCap = 'butt'\n    ctx.lineJoin = 'miter'\n    ctx.miterLimit = 4\n  }\n\n  setViewBox({\n    document,\n    ctx,\n    aspectRatio,\n    width,\n    desiredWidth,\n    height,\n    desiredHeight,\n    minX = 0,\n    minY = 0,\n    refX,\n    refY,\n    clip = false,\n    clipX = 0,\n    clipY = 0\n  }: IScreenViewBoxConfig) {\n    // aspect ratio - http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n    const cleanAspectRatio = compressSpaces(aspectRatio).replace(/^defer\\s/, '') // ignore defer\n    const [aspectRatioAlign, aspectRatioMeetOrSlice] = cleanAspectRatio.split(' ')\n    const align = aspectRatioAlign || 'xMidYMid'\n    const meetOrSlice = aspectRatioMeetOrSlice || 'meet'\n    // calculate scale\n    const scaleX = width / desiredWidth\n    const scaleY = height / desiredHeight\n    const scaleMin = Math.min(scaleX, scaleY)\n    const scaleMax = Math.max(scaleX, scaleY)\n    let finalDesiredWidth = desiredWidth\n    let finalDesiredHeight = desiredHeight\n\n    if (meetOrSlice === 'meet') {\n      finalDesiredWidth *= scaleMin\n      finalDesiredHeight *= scaleMin\n    }\n\n    if (meetOrSlice === 'slice') {\n      finalDesiredWidth *= scaleMax\n      finalDesiredHeight *= scaleMax\n    }\n\n    const refXProp = new Property(document, 'refX', refX)\n    const refYProp = new Property(document, 'refY', refY)\n    const hasRefs = refXProp.hasValue() && refYProp.hasValue()\n\n    if (hasRefs) {\n      ctx.translate(\n        -scaleMin * refXProp.getPixels('x'),\n        -scaleMin * refYProp.getPixels('y')\n      )\n    }\n\n    if (clip) {\n      const scaledClipX = scaleMin * clipX\n      const scaledClipY = scaleMin * clipY\n\n      ctx.beginPath()\n      ctx.moveTo(scaledClipX, scaledClipY)\n      ctx.lineTo(width, scaledClipY)\n      ctx.lineTo(width, height)\n      ctx.lineTo(scaledClipX, height)\n      ctx.closePath()\n      ctx.clip()\n    }\n\n    if (!hasRefs) {\n      const isMeetMinY = meetOrSlice === 'meet' && scaleMin === scaleY\n      const isSliceMaxY = meetOrSlice === 'slice' && scaleMax === scaleY\n      const isMeetMinX = meetOrSlice === 'meet' && scaleMin === scaleX\n      const isSliceMaxX = meetOrSlice === 'slice' && scaleMax === scaleX\n\n      if (align.startsWith('xMid') && (\n        isMeetMinY || isSliceMaxY\n      )) {\n        ctx.translate(width / 2.0 - finalDesiredWidth / 2.0, 0)\n      }\n\n      if (align.endsWith('YMid') && (\n        isMeetMinX || isSliceMaxX\n      )) {\n        ctx.translate(0, height / 2.0 - finalDesiredHeight / 2.0)\n      }\n\n      if (align.startsWith('xMax') && (\n        isMeetMinY || isSliceMaxY\n      )) {\n        ctx.translate(width - finalDesiredWidth, 0)\n      }\n\n      if (align.endsWith('YMax') && (\n        isMeetMinX || isSliceMaxX\n      )) {\n        ctx.translate(0, height - finalDesiredHeight)\n      }\n    }\n\n    // scale\n    switch (true) {\n      case align === 'none':\n        ctx.scale(scaleX, scaleY)\n        break\n\n      case meetOrSlice === 'meet':\n        ctx.scale(scaleMin, scaleMin)\n        break\n\n      case meetOrSlice === 'slice':\n        ctx.scale(scaleMax, scaleMax)\n        break\n    }\n\n    // translate\n    ctx.translate(-minX, -minY)\n  }\n\n  start(\n    element: Element,\n    {\n      enableRedraw = false,\n      ignoreMouse = false,\n      ignoreAnimation = false,\n      ignoreDimensions = false,\n      ignoreClear = false,\n      forceRedraw,\n      scaleWidth,\n      scaleHeight,\n      offsetX,\n      offsetY\n    }: IScreenStartOptions = {}\n  ) {\n    const { mouse } = this\n    const frameDuration = 1000 / Screen.FRAMERATE\n\n    this.isReadyLock = false\n    this.frameDuration = frameDuration\n    this.readyPromise = new Promise((resolve) => {\n      this.resolveReady = resolve\n    })\n\n    if (this.isReady()) {\n      this.render(\n        element,\n        ignoreDimensions,\n        ignoreClear,\n        scaleWidth,\n        scaleHeight,\n        offsetX,\n        offsetY\n      )\n    }\n\n    if (!enableRedraw) {\n      return\n    }\n\n    let now = Date.now()\n    let then = now\n    let delta = 0\n    const tick = () => {\n      now = Date.now()\n      delta = now - then\n\n      if (delta >= frameDuration) {\n        then = now - (delta % frameDuration)\n\n        if (this.shouldUpdate(\n          ignoreAnimation,\n          forceRedraw\n        )) {\n          this.render(\n            element,\n            ignoreDimensions,\n            ignoreClear,\n            scaleWidth,\n            scaleHeight,\n            offsetX,\n            offsetY\n          )\n          mouse.runEvents()\n        }\n      }\n\n      this.intervalId = requestAnimationFrame(tick)\n    }\n\n    if (!ignoreMouse) {\n      mouse.start()\n    }\n\n    this.intervalId = requestAnimationFrame(tick)\n  }\n\n  stop() {\n    if (this.intervalId) {\n      requestAnimationFrame.cancel(this.intervalId)\n      this.intervalId = null\n    }\n\n    this.mouse.stop()\n  }\n\n  private shouldUpdate(\n    ignoreAnimation: boolean,\n    forceRedraw: (() => boolean) | undefined\n  ) {\n    // need update from animations?\n    if (!ignoreAnimation) {\n      const { frameDuration } = this\n      const shouldUpdate = this.animations.reduce(\n        (shouldUpdate, animation) => animation.update(frameDuration) || shouldUpdate,\n        false\n      )\n\n      if (shouldUpdate) {\n        return true\n      }\n    }\n\n    // need update from redraw?\n    if (typeof forceRedraw === 'function' && forceRedraw()) {\n      return true\n    }\n\n    if (!this.isReadyLock && this.isReady()) {\n      return true\n    }\n\n    // need update from mouse events?\n    if (this.mouse.hasEvents()) {\n      return true\n    }\n\n    return false\n  }\n\n  private render(\n    element: Element,\n    ignoreDimensions: boolean,\n    ignoreClear: boolean,\n    scaleWidth: number | undefined,\n    scaleHeight: number | undefined,\n    offsetX: number | undefined,\n    offsetY: number | undefined\n  ) {\n    const {\n      viewPort,\n      ctx,\n      isFirstRender\n    } = this\n    const canvas = ctx.canvas as HTMLCanvasElement\n\n    viewPort.clear()\n\n    if (canvas.width && canvas.height) {\n      viewPort.setCurrent(canvas.width, canvas.height)\n    }\n\n    const widthStyle = element.getStyle('width')\n    const heightStyle = element.getStyle('height')\n\n    if (!ignoreDimensions && (\n      isFirstRender\n      || typeof scaleWidth !== 'number' && typeof scaleHeight !== 'number'\n    )) {\n      // set canvas size\n      if (widthStyle.hasValue()) {\n        canvas.width = widthStyle.getPixels('x')\n\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n        if (canvas.style) {\n          canvas.style.width = `${canvas.width}px`\n        }\n      }\n\n      if (heightStyle.hasValue()) {\n        canvas.height = heightStyle.getPixels('y')\n\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n        if (canvas.style) {\n          canvas.style.height = `${canvas.height}px`\n        }\n      }\n    }\n\n    let cWidth = canvas.clientWidth || canvas.width\n    let cHeight = canvas.clientHeight || canvas.height\n\n    if (ignoreDimensions && widthStyle.hasValue() && heightStyle.hasValue()) {\n      cWidth = widthStyle.getPixels('x')\n      cHeight = heightStyle.getPixels('y')\n    }\n\n    viewPort.setCurrent(cWidth, cHeight)\n\n    if (typeof offsetX === 'number') {\n      element.getAttribute('x', true).setValue(offsetX)\n    }\n\n    if (typeof offsetY === 'number') {\n      element.getAttribute('y', true).setValue(offsetY)\n    }\n\n    if (typeof scaleWidth === 'number'\n      || typeof scaleHeight === 'number'\n    ) {\n      const viewBox = toNumbers(element.getAttribute('viewBox').getString())\n      let xRatio = 0\n      let yRatio = 0\n\n      if (typeof scaleWidth === 'number') {\n        const widthStyle = element.getStyle('width')\n\n        if (widthStyle.hasValue()) {\n          xRatio = widthStyle.getPixels('x') / scaleWidth\n        } else\n        if (viewBox[2] && !isNaN(viewBox[2])) {\n          xRatio = viewBox[2] / scaleWidth\n        }\n      }\n\n      if (typeof scaleHeight === 'number') {\n        const heightStyle = element.getStyle('height')\n\n        if (heightStyle.hasValue()) {\n          yRatio = heightStyle.getPixels('y') / scaleHeight\n        } else\n        if (viewBox[3] && !isNaN(viewBox[3])) {\n          yRatio = viewBox[3] / scaleHeight\n        }\n      }\n\n      if (!xRatio) {\n        xRatio = yRatio\n      }\n\n      if (!yRatio) {\n        yRatio = xRatio\n      }\n\n      element.getAttribute('width', true).setValue(scaleWidth)\n      element.getAttribute('height', true).setValue(scaleHeight)\n\n      const transformStyle = element.getStyle('transform', true, true)\n\n      transformStyle.setValue(`${transformStyle.getString()} scale(${1.0 / xRatio}, ${1.0 / yRatio})`)\n    }\n\n    // clear and render\n    if (!ignoreClear) {\n      ctx.clearRect(0, 0, cWidth, cHeight)\n    }\n\n    element.render(ctx)\n\n    if (isFirstRender) {\n      this.isFirstRender = false\n    }\n  }\n}\n", "import { Fetch } from './types'\nimport { Screen } from './Screen'\n\ntype DOMParserConstructor = typeof DOMParser\n\nexport interface IParserOptions {\n  /**\n   * WHATWG-compatible `fetch` function.\n   */\n  fetch?: Fetch\n  /**\n   * XML/HTML parser from string into DOM Document.\n   */\n  DOMParser?: DOMParserConstructor\n}\n\nconst { defaultFetch } = Screen\nconst DefaultDOMParser = typeof DOMParser !== 'undefined'\n  ? DOMParser\n  : undefined\n\nexport class Parser {\n  private readonly fetch: Fetch\n  private readonly DOMParser: DOMParserConstructor\n\n  constructor({\n    fetch = defaultFetch,\n    DOMParser = DefaultDOMParser\n  }: IParserOptions = {}) {\n    if (!fetch) {\n      throw new Error(`Can't find 'fetch' in 'globalThis', please provide it via options`)\n    }\n\n    if (!DOMParser) {\n      throw new Error(`Can't find 'DOMParser' in 'globalThis', please provide it via options`)\n    }\n\n    this.fetch = fetch\n    this.DOMParser = DOMParser\n  }\n\n  async parse(resource: string) {\n    if (resource.startsWith('<')) {\n      return this.parseFromString(resource)\n    }\n\n    return this.load(resource)\n  }\n\n  parseFromString(xml: string) {\n    const parser = new this.DOMParser()\n\n    try {\n      return this.checkDocument(\n        parser.parseFromString(xml, 'image/svg+xml')\n      )\n    } catch (err) {\n      return this.checkDocument(\n        parser.parseFromString(xml, 'text/xml')\n      )\n    }\n  }\n\n  private checkDocument(document: Document) {\n    const parserError = document.getElementsByTagName('parsererror')[0]\n\n    if (parserError) {\n      throw new Error(parserError.textContent || 'Unknown parse error')\n    }\n\n    return document\n  }\n\n  async load(url: string) {\n    const response = await this.fetch(url)\n    const xml = await response.text()\n\n    return this.parseFromString(xml)\n  }\n}\n", "import { RenderingContext2D } from '../types'\nimport { Document } from '../Document'\nimport { Point } from '../Point'\n\nexport class Translate {\n  type = 'translate'\n  private readonly point: Point\n\n  constructor(\n    _: Document,\n    point: string\n  ) {\n    this.point = Point.parse(point)\n  }\n\n  apply(ctx: RenderingContext2D) {\n    const {\n      x,\n      y\n    } = this.point\n\n    ctx.translate(\n      x || 0.0,\n      y || 0.0\n    )\n  }\n\n  unapply(ctx: RenderingContext2D) {\n    const {\n      x,\n      y\n    } = this.point\n\n    ctx.translate(\n      -1.0 * x || 0.0,\n      -1.0 * y || 0.0\n    )\n  }\n\n  applyToPoint(point: Point) {\n    const {\n      x,\n      y\n    } = this.point\n\n    point.applyTransform([\n      1,\n      0,\n      0,\n      1,\n      x || 0.0,\n      y || 0.0\n    ])\n  }\n}\n", "import { RenderingContext2D } from '../types'\nimport { toNumbers } from '../util'\nimport { Document } from '../Document'\nimport { Property } from '../Property'\nimport { Point } from '../Point'\n\nexport class Rotate {\n  type = 'rotate'\n  private readonly angle: Property\n  private readonly originX: Property\n  private readonly originY: Property\n  private readonly cx: number\n  private readonly cy: number\n\n  constructor(\n    document: Document,\n    rotate: string,\n    transformOrigin: readonly [Property<string>, Property<string>]\n  ) {\n    const numbers = toNumbers(rotate)\n\n    this.angle = new Property(document, 'angle', numbers[0])\n    this.originX = transformOrigin[0]\n    this.originY = transformOrigin[1]\n    this.cx = numbers[1] || 0\n    this.cy = numbers[2] || 0\n  }\n\n  apply(ctx: RenderingContext2D) {\n    const {\n      cx,\n      cy,\n      originX,\n      originY,\n      angle\n    } = this\n    const tx = cx + originX.getPixels('x')\n    const ty = cy + originY.getPixels('y')\n\n    ctx.translate(tx, ty)\n    ctx.rotate(angle.getRadians())\n    ctx.translate(-tx, -ty)\n  }\n\n  unapply(ctx: RenderingContext2D) {\n    const {\n      cx,\n      cy,\n      originX,\n      originY,\n      angle\n    } = this\n    const tx = cx + originX.getPixels('x')\n    const ty = cy + originY.getPixels('y')\n\n    ctx.translate(tx, ty)\n    ctx.rotate(-1.0 * angle.getRadians())\n    ctx.translate(-tx, -ty)\n  }\n\n  applyToPoint(point: Point) {\n    const {\n      cx,\n      cy,\n      angle\n    } = this\n    const rad = angle.getRadians()\n\n    point.applyTransform([\n      1,\n      0,\n      0,\n      1,\n      cx || 0.0, // this.p.x\n      cy || 0.0 // this.p.y\n    ])\n    point.applyTransform([\n      Math.cos(rad),\n      Math.sin(rad),\n      -Math.sin(rad),\n      Math.cos(rad),\n      0,\n      0\n    ])\n    point.applyTransform([\n      1,\n      0,\n      0,\n      1,\n      -cx || 0.0, // -this.p.x\n      -cy || 0.0 // -this.p.y\n    ])\n  }\n}\n", "import { RenderingContext2D } from '../types'\nimport { PSEUDO_ZERO } from '../util'\nimport { Document } from '../Document'\nimport { Point } from '../Point'\nimport { Property } from '../Property'\n\nexport class Scale {\n  type = 'scale'\n  private readonly scale: Point\n  private readonly originX: Property\n  private readonly originY: Property\n\n  constructor(\n    _: Document,\n    scale: string,\n    transformOrigin: readonly [Property<string>, Property<string>]\n  ) {\n    const scaleSize = Point.parseScale(scale)\n\n    // Workaround for node-canvas\n    if (scaleSize.x === 0\n      || scaleSize.y === 0\n    ) {\n      scaleSize.x = PSEUDO_ZERO\n      scaleSize.y = PSEUDO_ZERO\n    }\n\n    this.scale = scaleSize\n    this.originX = transformOrigin[0]\n    this.originY = transformOrigin[1]\n  }\n\n  apply(ctx: RenderingContext2D) {\n    const {\n      scale: {\n        x,\n        y\n      },\n      originX,\n      originY\n    } = this\n    const tx = originX.getPixels('x')\n    const ty = originY.getPixels('y')\n\n    ctx.translate(tx, ty)\n    ctx.scale(x, y || x)\n    ctx.translate(-tx, -ty)\n  }\n\n  unapply(ctx: RenderingContext2D) {\n    const {\n      scale: {\n        x,\n        y\n      },\n      originX,\n      originY\n    } = this\n    const tx = originX.getPixels('x')\n    const ty = originY.getPixels('y')\n\n    ctx.translate(tx, ty)\n    ctx.scale(1.0 / x, 1.0 / y || x)\n    ctx.translate(-tx, -ty)\n  }\n\n  applyToPoint(point: Point) {\n    const {\n      x,\n      y\n    } = this.scale\n\n    point.applyTransform([\n      x || 0.0,\n      0,\n      0,\n      y || 0.0,\n      0,\n      0\n    ])\n  }\n}\n", "import { MatrixValue, RenderingContext2D } from '../types'\nimport { toMatrixValue } from '../util'\nimport { Document } from '../Document'\nimport { Point } from '../Point'\nimport { Property } from '../Property'\nimport { ITransform } from './types'\n\nexport class Matrix implements ITransform {\n  type = 'matrix'\n  protected matrix: MatrixValue\n  private readonly originX: Property\n  private readonly originY: Property\n\n  constructor(\n    _: Document,\n    matrix: string,\n    transformOrigin: readonly [Property<string>, Property<string>]\n  ) {\n    this.matrix = toMatrixValue(matrix)\n    this.originX = transformOrigin[0]\n    this.originY = transformOrigin[1]\n  }\n\n  apply(ctx: RenderingContext2D) {\n    const {\n      originX,\n      originY,\n      matrix\n    } = this\n    const tx = originX.getPixels('x')\n    const ty = originY.getPixels('y')\n\n    ctx.translate(tx, ty)\n    ctx.transform(\n      matrix[0],\n      matrix[1],\n      matrix[2],\n      matrix[3],\n      matrix[4],\n      matrix[5]\n    )\n    ctx.translate(-tx, -ty)\n  }\n\n  unapply(ctx: RenderingContext2D) {\n    const {\n      originX,\n      originY,\n      matrix\n    } = this\n    const a = matrix[0]\n    const b = matrix[2]\n    const c = matrix[4]\n    const d = matrix[1]\n    const e = matrix[3]\n    const f = matrix[5]\n    const g = 0.0\n    const h = 0.0\n    const i = 1.0\n    const det = 1 / (a * (e * i - f * h) - b * (d * i - f * g) + c * (d * h - e * g))\n    const tx = originX.getPixels('x')\n    const ty = originY.getPixels('y')\n\n    ctx.translate(tx, ty)\n    ctx.transform(\n      det * (e * i - f * h),\n      det * (f * g - d * i),\n      det * (c * h - b * i),\n      det * (a * i - c * g),\n      det * (b * f - c * e),\n      det * (c * d - a * f)\n    )\n    ctx.translate(-tx, -ty)\n  }\n\n  applyToPoint(point: Point) {\n    point.applyTransform(this.matrix)\n  }\n}\n", "import { Document } from '../Document'\nimport { Property } from '../Property'\nimport { Matrix } from './Matrix'\n\nexport class Skew extends Matrix {\n  override type = 'skew'\n  protected readonly angle: Property\n\n  constructor(\n    document: Document,\n    skew: string,\n    transformOrigin: readonly [Property<string>, Property<string>]\n  ) {\n    super(document, skew, transformOrigin)\n\n    this.angle = new Property(document, 'angle', skew)\n  }\n}\n", "import { Document } from '../Document'\nimport { Property } from '../Property'\nimport { Skew } from './Skew'\n\nexport class SkewX extends Skew {\n  override type = 'skewX'\n\n  constructor(\n    document: Document,\n    skew: string,\n    transformOrigin: readonly [Property<string>, Property<string>]\n  ) {\n    super(document, skew, transformOrigin)\n\n    this.matrix = [\n      1,\n      0,\n      Math.tan(this.angle.getRadians()),\n      1,\n      0,\n      0\n    ]\n  }\n}\n", "import { Document } from '../Document'\nimport { Property } from '../Property'\nimport { Skew } from './Skew'\n\nexport class SkewY extends Skew {\n  override type = 'skewY'\n\n  constructor(\n    document: Document,\n    skew: string,\n    transformOrigin: readonly [Property<string>, Property<string>]\n  ) {\n    super(document, skew, transformOrigin)\n\n    this.matrix = [\n      1,\n      Math.tan(this.angle.getRadians()),\n      0,\n      1,\n      0,\n      0\n    ]\n  }\n}\n", "import { RenderingContext2D } from '../types'\nimport { compressSpaces } from '../util'\nimport { Property } from '../Property'\nimport { Point } from '../Point'\nimport { Document, Element } from '../Document'\nimport { ITransform } from './types'\nimport { Translate } from './Translate'\nimport { Rotate } from './Rotate'\nimport { Scale } from './Scale'\nimport { Matrix } from './Matrix'\nimport { SkewX } from './SkewX'\nimport { SkewY } from './SkewY'\n\nfunction parseTransforms(transform: string) {\n  return compressSpaces(transform)\n    .trim()\n    .replace(/\\)([a-zA-Z])/g, ') $1')\n    .replace(/\\)(\\s?,\\s?)/g, ') ')\n    .split(/\\s(?=[a-z])/)\n}\n\nfunction parseTransform(transform: string) {\n  const [type = '', value = ''] = transform.split('(')\n\n  return [type.trim(), value.trim().replace(')', '')] as const\n}\n\ninterface ITransformConstructor {\n  prototype: ITransform\n  new (\n    document: Document,\n    value: string,\n    transformOrigin: readonly [Property<string>, Property<string>]\n  ): ITransform\n}\n\nexport class Transform {\n  static fromElement(document: Document, element: Element) {\n    const transformStyle = element.getStyle('transform', false, true)\n\n    if (transformStyle.hasValue()) {\n      const [transformOriginXProperty, transformOriginYProperty = transformOriginXProperty] = element.getStyle('transform-origin', false, true).split()\n\n      if (transformOriginXProperty && transformOriginYProperty) {\n        const transformOrigin = [transformOriginXProperty, transformOriginYProperty] as const\n\n        return new Transform(\n          document,\n          transformStyle.getString(),\n          transformOrigin\n        )\n      }\n    }\n\n    return null\n  }\n\n  static transformTypes: Record<string, ITransformConstructor> = {\n    translate: Translate,\n    rotate: Rotate,\n    scale: Scale,\n    matrix: Matrix,\n    skewX: SkewX,\n    skewY: SkewY\n  }\n\n  private readonly transforms: ITransform[] = []\n\n  constructor(\n    private readonly document: Document,\n    transform: string,\n    transformOrigin: readonly [Property<string>, Property<string>]\n  ) {\n    const data = parseTransforms(transform)\n\n    data.forEach((transform) => {\n      if (transform === 'none') {\n        return\n      }\n\n      const [type, value] = parseTransform(transform)\n      const TransformType = Transform.transformTypes[type]\n\n      if (TransformType) {\n        this.transforms.push(new TransformType(this.document, value, transformOrigin))\n      }\n    })\n  }\n\n  apply(ctx: RenderingContext2D) {\n    this.transforms.forEach(transform => transform.apply(ctx))\n  }\n\n  unapply(ctx: RenderingContext2D) {\n    this.transforms.forEach(transform => transform.unapply(ctx))\n  }\n\n  // TODO: applyToPoint unused ... remove?\n  applyToPoint(point: Point) {\n    this.transforms.forEach(transform => transform.applyToPoint(point))\n  }\n}\n", "import { RenderingContext2D } from '../types'\nimport { normalizeAttributeName } from '../util'\nimport { Property } from '../Property'\nimport { Transform } from '../Transform'\nimport { Document } from './Document'\nimport { ClipPathElement } from './ClipPathElement'\nimport { MaskElement } from './MaskElement'\nimport { FilterElement } from './FilterElement'\n\nexport abstract class Element {\n  static readonly ignoreChildTypes = ['title']\n\n  readonly type: string = ''\n  readonly attributes: Map<string, Property> = new Map()\n  readonly styles: Map<string, Property> = new Map()\n  readonly stylesSpecificity: Map<string, string> = new Map()\n  animationFrozen = false\n  animationFrozenValue = ''\n  parent: Element | null = null\n  children: Element[] = []\n\n  constructor(\n    protected readonly document: Document,\n    protected readonly node?: HTMLElement,\n    protected readonly captureTextNodes = false\n  ) {\n    if (!node || node.nodeType !== 1) { // ELEMENT_NODE\n      return\n    }\n\n    // add attributes\n    Array.from(node.attributes).forEach((attribute) => {\n      const nodeName = normalizeAttributeName(attribute.nodeName)\n\n      this.attributes.set(nodeName, new Property(document, nodeName, attribute.value))\n    })\n\n    this.addStylesFromStyleDefinition()\n\n    // add inline styles\n    if (this.getAttribute('style').hasValue()) {\n      const styles = this.getAttribute('style')\n        .getString()\n        .split(';')\n        .map(_ => _.trim())\n\n      styles.forEach((style) => {\n        if (!style) {\n          return\n        }\n\n        const [name, value] = style.split(':').map(_ => _.trim())\n\n        if (name) {\n          this.styles.set(name, new Property(document, name, value))\n        }\n      })\n    }\n\n    const { definitions } = document\n    const id = this.getAttribute('id')\n\n    // add id\n    if (id.hasValue()) {\n      if (!definitions.has(id.getString())) {\n        definitions.set(id.getString(), this)\n      }\n    }\n\n    Array.from(node.childNodes).forEach((childNode: HTMLElement) => {\n      if (childNode.nodeType === 1) {\n        this.addChild(childNode) // ELEMENT_NODE\n      } else\n      if (captureTextNodes && (\n        childNode.nodeType === 3\n        || childNode.nodeType === 4\n      )) {\n        const textNode = document.createTextNode(childNode)\n\n        if (textNode.getText().length > 0) {\n          this.addChild(textNode) // TEXT_NODE\n        }\n      }\n    })\n  }\n\n  getAttribute(name: string, createIfNotExists = false): Property {\n    const attr = this.attributes.get(name)\n\n    if (!attr && createIfNotExists) {\n      const attr = new Property(this.document, name, '')\n\n      this.attributes.set(name, attr)\n\n      return attr\n    }\n\n    return attr || Property.empty(this.document)\n  }\n\n  getHrefAttribute(): Property {\n    let href: Property | undefined\n\n    for (const [key, value] of this.attributes) {\n      if (key === 'href' || key.endsWith(':href')) {\n        href = value\n        break\n      }\n    }\n\n    return href || Property.empty(this.document)\n  }\n\n  getStyle(name: string, createIfNotExists = false, skipAncestors = false): Property {\n    const style = this.styles.get(name)\n\n    if (style) {\n      return style\n    }\n\n    const attr = this.getAttribute(name)\n\n    if (attr.hasValue()) {\n      this.styles.set(name, attr) // move up to me to cache\n      return attr\n    }\n\n    if (!skipAncestors) {\n      const { parent } = this\n\n      if (parent) {\n        const parentStyle = parent.getStyle(name)\n\n        if (parentStyle.hasValue()) {\n          return parentStyle\n        }\n      }\n    }\n\n    if (createIfNotExists) {\n      const style = new Property(this.document, name, '')\n\n      this.styles.set(name, style)\n\n      return style\n    }\n\n    return Property.empty(this.document)\n  }\n\n  render(ctx: RenderingContext2D) {\n    // don't render display=none\n    // don't render visibility=hidden\n    if (this.getStyle('display').getString() === 'none'\n      || this.getStyle('visibility').getString() === 'hidden'\n    ) {\n      return\n    }\n\n    ctx.save()\n\n    if (this.getStyle('mask').hasValue()) { // mask\n      const mask = this.getStyle('mask').getDefinition<MaskElement>()\n\n      if (mask) {\n        this.applyEffects(ctx)\n        mask.apply(ctx, this)\n      }\n    } else\n    if (this.getStyle('filter').getValue('none') !== 'none') { // filter\n      const filter = this.getStyle('filter').getDefinition<FilterElement>()\n\n      if (filter) {\n        this.applyEffects(ctx)\n        filter.apply(ctx, this)\n      }\n    } else {\n      this.setContext(ctx)\n      this.renderChildren(ctx)\n      this.clearContext(ctx)\n    }\n\n    ctx.restore()\n  }\n\n  setContext(_: RenderingContext2D) {\n    // NO RENDER\n  }\n\n  protected applyEffects(ctx: RenderingContext2D) {\n    // transform\n    const transform = Transform.fromElement(this.document, this)\n\n    if (transform) {\n      transform.apply(ctx)\n    }\n\n    // clip\n    const clipPathStyleProp = this.getStyle('clip-path', false, true)\n\n    if (clipPathStyleProp.hasValue()) {\n      const clip = clipPathStyleProp.getDefinition<ClipPathElement>()\n\n      if (clip) {\n        clip.apply(ctx)\n      }\n    }\n  }\n\n  clearContext(_: RenderingContext2D) {\n    // NO RENDER\n  }\n\n  renderChildren(ctx: RenderingContext2D) {\n    this.children.forEach((child) => {\n      child.render(ctx)\n    })\n  }\n\n  protected addChild(childNode: Element|HTMLElement) {\n    const child = childNode instanceof Element\n      ? childNode\n      : this.document.createElement(childNode)\n\n    child.parent = this\n\n    if (!Element.ignoreChildTypes.includes(child.type)) {\n      this.children.push(child)\n    }\n  }\n\n  protected matchesSelector(selector: string) {\n    const { node } = this\n\n    if (typeof node.matches === 'function') {\n      return node.matches(selector)\n    }\n\n    const styleClasses = node.getAttribute?.('class')\n\n    if (!styleClasses || styleClasses === '') {\n      return false\n    }\n\n    return styleClasses.split(' ').some(styleClass => `.${styleClass}` === selector)\n  }\n\n  addStylesFromStyleDefinition() {\n    const {\n      styles,\n      stylesSpecificity\n    } = this.document\n\n    for (const [selector, style] of styles) {\n      if (!selector.startsWith('@') && this.matchesSelector(selector)) {\n        const specificity = stylesSpecificity.get(selector)\n\n        if (style) {\n          for (const [name, styleProp] of style) {\n            let existingSpecificity = this.stylesSpecificity.get(name)\n\n            if (typeof existingSpecificity === 'undefined') {\n              existingSpecificity = '000'\n            }\n\n            if (specificity && specificity >= existingSpecificity) {\n              if (styleProp) {\n                this.styles.set(name, styleProp)\n              }\n\n              this.stylesSpecificity.set(name, specificity)\n            }\n          }\n        }\n      }\n    }\n  }\n\n  protected removeStyles(element: Element, ignoreStyles: string[]) {\n    const toRestore = ignoreStyles.reduce<[string, string][]>((toRestore, name) => {\n      const styleProp = element.getStyle(name)\n\n      if (!styleProp.hasValue()) {\n        return toRestore\n      }\n\n      const value = styleProp.getString()\n\n      styleProp.setValue('')\n\n      return [...toRestore, [name, value]]\n    }, [])\n\n    return toRestore\n  }\n\n  protected restoreStyles(element: Element, styles: [string, string][]) {\n    styles.forEach(([name, value]) => {\n      element.getStyle(name, true).setValue(value)\n    })\n  }\n\n  isFirstChild() {\n    return this.parent?.children.indexOf(this) === 0\n  }\n}\n", "import { Document } from './Document'\nimport { Element } from './Element'\n\nexport class UnknownElement extends Element {\n  constructor(\n    document: Document,\n    node: HTMLElement,\n    captureTextNodes?: boolean\n  ) {\n    super(document, node, captureTextNodes)\n\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn(`Element ${node.nodeName} not yet implemented.`)\n    }\n  }\n}\n", "import { compressSpaces } from './util'\n\nfunction wrapFontFamily(fontFamily: string) {\n  const trimmed = fontFamily.trim()\n\n  return /^('|\")/.test(trimmed)\n    ? trimmed\n    : `\"${trimmed}\"`\n}\n\nfunction prepareFontFamily(fontFamily: string) {\n  return typeof process === 'undefined'\n    ? fontFamily\n    : fontFamily\n      .trim()\n      .split(',')\n      .map(wrapFontFamily)\n      .join(',')\n}\n\n/**\n * https://developer.mozilla.org/en-US/docs/Web/CSS/font-style\n * @param fontStyle\n * @returns CSS font style.\n */\nfunction prepareFontStyle(fontStyle: string) {\n  if (!fontStyle) {\n    return ''\n  }\n\n  const targetFontStyle = fontStyle.trim().toLowerCase()\n\n  switch (targetFontStyle) {\n    case 'normal':\n    case 'italic':\n    case 'oblique':\n    case 'inherit':\n    case 'initial':\n    case 'unset':\n      return targetFontStyle\n\n    default:\n\n      if (/^oblique\\s+(-|)\\d+deg$/.test(targetFontStyle)) {\n        return targetFontStyle\n      }\n\n      return ''\n  }\n}\n\n/**\n * https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight\n * @param fontWeight\n * @returns CSS font weight.\n */\nfunction prepareFontWeight(fontWeight: string) {\n  if (!fontWeight) {\n    return ''\n  }\n\n  const targetFontWeight = fontWeight.trim().toLowerCase()\n\n  switch (targetFontWeight) {\n    case 'normal':\n    case 'bold':\n    case 'lighter':\n    case 'bolder':\n    case 'inherit':\n    case 'initial':\n    case 'unset':\n      return targetFontWeight\n\n    default:\n\n      if (/^[\\d.]+$/.test(targetFontWeight)) {\n        return targetFontWeight\n      }\n\n      return ''\n  }\n}\n\nexport class Font {\n  static parse(\n    font = '',\n    inherit?: string | Font\n  ) {\n    let fontStyle = ''\n    let fontVariant = ''\n    let fontWeight = ''\n    let fontSize = ''\n    let fontFamily = ''\n    const parts = compressSpaces(font).trim().split(' ')\n    const set = {\n      fontSize: false,\n      fontStyle: false,\n      fontWeight: false,\n      fontVariant: false\n    }\n\n    parts.forEach((part) => {\n      switch (true) {\n        case !set.fontStyle && Font.styles.includes(part):\n\n          if (part !== 'inherit') {\n            fontStyle = part\n          }\n\n          set.fontStyle = true\n          break\n\n        case !set.fontVariant && Font.variants.includes(part):\n\n          if (part !== 'inherit') {\n            fontVariant = part\n          }\n\n          set.fontStyle = true\n          set.fontVariant = true\n          break\n\n        case !set.fontWeight && Font.weights.includes(part):\n\n          if (part !== 'inherit') {\n            fontWeight = part\n          }\n\n          set.fontStyle = true\n          set.fontVariant = true\n          set.fontWeight = true\n          break\n\n        case !set.fontSize:\n\n          if (part !== 'inherit') {\n            fontSize = part.split('/')[0] || ''\n          }\n\n          set.fontStyle = true\n          set.fontVariant = true\n          set.fontWeight = true\n          set.fontSize = true\n          break\n\n        default:\n\n          if (part !== 'inherit') {\n            fontFamily += part\n          }\n      }\n    })\n\n    return new Font(\n      fontStyle,\n      fontVariant,\n      fontWeight,\n      fontSize,\n      fontFamily,\n      inherit\n    )\n  }\n\n  static readonly styles = 'normal|italic|oblique|inherit'\n  static readonly variants = 'normal|small-caps|inherit'\n  static readonly weights = 'normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit'\n\n  readonly fontFamily: string\n  readonly fontSize: string\n  readonly fontStyle: string\n  readonly fontWeight: string\n  readonly fontVariant: string\n\n  constructor(\n    fontStyle: string,\n    fontVariant: string,\n    fontWeight: string,\n    fontSize: string,\n    fontFamily: string,\n    inherit?: string | Font\n  ) {\n    const inheritFont = inherit\n      ? typeof inherit === 'string'\n        ? Font.parse(inherit)\n        : inherit\n      : {} as Font\n\n    this.fontFamily = fontFamily || inheritFont.fontFamily\n    this.fontSize = fontSize || inheritFont.fontSize\n    this.fontStyle = fontStyle || inheritFont.fontStyle\n    this.fontWeight = fontWeight || inheritFont.fontWeight\n    this.fontVariant = fontVariant || inheritFont.fontVariant\n  }\n\n  toString() {\n    return [\n      prepareFontStyle(this.fontStyle),\n      this.fontVariant,\n      prepareFontWeight(this.fontWeight),\n      this.fontSize,\n      // Wrap fontFamily only on nodejs and only for canvas.ctx\n      prepareFontFamily(this.fontFamily)\n    ].join(' ').trim()\n  }\n}\n", "\nexport class BoundingBox {\n  constructor(\n    public x1 = Number.NaN,\n    public y1 = Number.NaN,\n    public x2 = Number.NaN,\n    public y2 = Number.NaN\n  ) {\n    this.addPoint(x1, y1)\n    this.addPoint(x2, y2)\n  }\n\n  get x() {\n    return this.x1\n  }\n\n  get y() {\n    return this.y1\n  }\n\n  get width() {\n    return this.x2 - this.x1\n  }\n\n  get height() {\n    return this.y2 - this.y1\n  }\n\n  addPoint(x: number | undefined, y: number | undefined) {\n    if (typeof x !== 'undefined') {\n      if (isNaN(this.x1) || isNaN(this.x2)) {\n        this.x1 = x\n        this.x2 = x\n      }\n\n      if (x < this.x1) {\n        this.x1 = x\n      }\n\n      if (x > this.x2) {\n        this.x2 = x\n      }\n    }\n\n    if (typeof y !== 'undefined') {\n      if (isNaN(this.y1) || isNaN(this.y2)) {\n        this.y1 = y\n        this.y2 = y\n      }\n\n      if (y < this.y1) {\n        this.y1 = y\n      }\n\n      if (y > this.y2) {\n        this.y2 = y\n      }\n    }\n  }\n\n  addX(x: number) {\n    this.addPoint(x, 0)\n  }\n\n  addY(y: number) {\n    this.addPoint(0, y)\n  }\n\n  addBoundingBox(boundingBox: BoundingBox | null) {\n    if (!boundingBox) {\n      return\n    }\n\n    const {\n      x1,\n      y1,\n      x2,\n      y2\n    } = boundingBox\n\n    this.addPoint(x1, y1)\n    this.addPoint(x2, y2)\n  }\n\n  private sumCubic(\n    t: number,\n    p0: number,\n    p1: number,\n    p2: number,\n    p3: number\n  ) {\n    return (\n      Math.pow(1 - t, 3) * p0\n      + 3 * Math.pow(1 - t, 2) * t * p1\n      + 3 * (1 - t) * Math.pow(t, 2) * p2\n      + Math.pow(t, 3) * p3\n    )\n  }\n\n  private bezierCurveAdd(\n    forX: boolean,\n    p0: number,\n    p1: number,\n    p2: number,\n    p3: number\n  ) {\n    const b = 6 * p0 - 12 * p1 + 6 * p2\n    const a = -3 * p0 + 9 * p1 - 9 * p2 + 3 * p3\n    const c = 3 * p1 - 3 * p0\n\n    if (a === 0) {\n      if (b === 0) {\n        return\n      }\n\n      const t = -c / b\n\n      if (0 < t && t < 1) {\n        if (forX) {\n          this.addX(this.sumCubic(t, p0, p1, p2, p3))\n        } else {\n          this.addY(this.sumCubic(t, p0, p1, p2, p3))\n        }\n      }\n\n      return\n    }\n\n    const b2ac = Math.pow(b, 2) - 4 * c * a\n\n    if (b2ac < 0) {\n      return\n    }\n\n    const t1 = (-b + Math.sqrt(b2ac)) / (2 * a)\n\n    if (0 < t1 && t1 < 1) {\n      if (forX) {\n        this.addX(\n          this.sumCubic(t1, p0, p1, p2, p3)\n        )\n      } else {\n        this.addY(\n          this.sumCubic(t1, p0, p1, p2, p3)\n        )\n      }\n    }\n\n    const t2 = (-b - Math.sqrt(b2ac)) / (2 * a)\n\n    if (0 < t2 && t2 < 1) {\n      if (forX) {\n        this.addX(this.sumCubic(t2, p0, p1, p2, p3))\n      } else {\n        this.addY(this.sumCubic(t2, p0, p1, p2, p3))\n      }\n    }\n  }\n\n  // from http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n  addBezierCurve(\n    p0x: number,\n    p0y: number,\n    p1x: number,\n    p1y: number,\n    p2x: number,\n    p2y: number,\n    p3x: number,\n    p3y: number\n  ) {\n    this.addPoint(p0x, p0y)\n    this.addPoint(p3x, p3y)\n    this.bezierCurveAdd(true, p0x, p1x, p2x, p3x)\n    this.bezierCurveAdd(false, p0y, p1y, p2y, p3y)\n  }\n\n  addQuadraticCurve(\n    p0x: number,\n    p0y: number,\n    p1x: number,\n    p1y: number,\n    p2x: number,\n    p2y: number\n  ) {\n    const cp1x = p0x + 2 / 3 * (p1x - p0x) // CP1 = QP0 + 2/3 *(QP1-QP0)\n    const cp1y = p0y + 2 / 3 * (p1y - p0y) // CP1 = QP0 + 2/3 *(QP1-QP0)\n    const cp2x = cp1x + 1 / 3 * (p2x - p0x) // CP2 = CP1 + 1/3 *(QP2-QP0)\n    const cp2y = cp1y + 1 / 3 * (p2y - p0y) // CP2 = CP1 + 1/3 *(QP2-QP0)\n\n    this.addBezierCurve(p0x, p0y, cp1x, cp2x, cp1y, cp2y, p2x, p2y)\n  }\n\n  isPointInBox(\n    x: number,\n    y: number\n  ) {\n    const {\n      x1,\n      y1,\n      x2,\n      y2\n    } = this\n\n    return (\n      x1 <= x\n      && x <= x2\n      && y1 <= y\n      && y <= y2\n    )\n  }\n}\n", "import { RenderingContext2D } from '../types'\nimport {\n  PSEUDO_ZERO,\n  toNumbers\n} from '../util'\nimport { Font } from '../Font'\nimport { Property } from '../Property'\nimport { Element } from './Element'\n\nexport abstract class RenderedElement extends Element {\n  private modifiedEmSizeStack = false\n\n  protected calculateOpacity() {\n    let opacity = 1.0\n    // eslint-disable-next-line @typescript-eslint/no-this-alias, consistent-this\n    let element: Element | null = this\n\n    while (element) {\n      const opacityStyle = element.getStyle('opacity', false, true) // no ancestors on style call\n\n      if (opacityStyle.hasValue(true)) {\n        opacity *= opacityStyle.getNumber()\n      }\n\n      element = element.parent\n    }\n\n    return opacity\n  }\n\n  override setContext(ctx: RenderingContext2D, fromMeasure = false) {\n    if (!fromMeasure) { // causes stack overflow when measuring text with gradients\n      // fill\n      const fillStyleProp = this.getStyle('fill')\n      const fillOpacityStyleProp = this.getStyle('fill-opacity')\n      const strokeStyleProp = this.getStyle('stroke')\n      const strokeOpacityProp = this.getStyle('stroke-opacity')\n\n      if (fillStyleProp.isUrlDefinition()) {\n        const fillStyle = fillStyleProp.getFillStyleDefinition(this, fillOpacityStyleProp)\n\n        if (fillStyle) {\n          ctx.fillStyle = fillStyle\n        }\n      } else\n      if (fillStyleProp.hasValue()) {\n        if (fillStyleProp.getString() === 'currentColor') {\n          fillStyleProp.setValue(this.getStyle('color').getColor())\n        }\n\n        const fillStyle = fillStyleProp.getColor()\n\n        if (fillStyle !== 'inherit') {\n          ctx.fillStyle = fillStyle === 'none'\n            ? 'rgba(0,0,0,0)'\n            : fillStyle\n        }\n      }\n\n      if (fillOpacityStyleProp.hasValue()) {\n        const fillStyle = new Property(this.document, 'fill', ctx.fillStyle)\n          .addOpacity(fillOpacityStyleProp)\n          .getColor()\n\n        ctx.fillStyle = fillStyle\n      }\n\n      // stroke\n      if (strokeStyleProp.isUrlDefinition()) {\n        const strokeStyle = strokeStyleProp.getFillStyleDefinition(this, strokeOpacityProp)\n\n        if (strokeStyle) {\n          ctx.strokeStyle = strokeStyle\n        }\n      } else\n      if (strokeStyleProp.hasValue()) {\n        if (strokeStyleProp.getString() === 'currentColor') {\n          strokeStyleProp.setValue(this.getStyle('color').getColor())\n        }\n\n        const strokeStyle = strokeStyleProp.getString()\n\n        if (strokeStyle !== 'inherit') {\n          ctx.strokeStyle = strokeStyle === 'none'\n            ? 'rgba(0,0,0,0)'\n            : strokeStyle\n        }\n      }\n\n      if (strokeOpacityProp.hasValue()) {\n        const strokeStyle = new Property(this.document, 'stroke', ctx.strokeStyle)\n          .addOpacity(strokeOpacityProp)\n          .getString()\n\n        ctx.strokeStyle = strokeStyle\n      }\n\n      const strokeWidthStyleProp = this.getStyle('stroke-width')\n\n      if (strokeWidthStyleProp.hasValue()) {\n        const newLineWidth = strokeWidthStyleProp.getPixels()\n\n        ctx.lineWidth = !newLineWidth\n          ? PSEUDO_ZERO // browsers don't respect 0 (or node-canvas? :-)\n          : newLineWidth\n      }\n\n      const strokeLinecapStyleProp = this.getStyle('stroke-linecap')\n      const strokeLinejoinStyleProp = this.getStyle('stroke-linejoin')\n      const strokeMiterlimitProp = this.getStyle('stroke-miterlimit')\n      // NEED TEST\n      // const pointOrderStyleProp = this.getStyle('paint-order');\n      const strokeDasharrayStyleProp = this.getStyle('stroke-dasharray')\n      const strokeDashoffsetProp = this.getStyle('stroke-dashoffset')\n\n      if (strokeLinecapStyleProp.hasValue()) {\n        ctx.lineCap = strokeLinecapStyleProp.getString() as CanvasLineCap\n      }\n\n      if (strokeLinejoinStyleProp.hasValue()) {\n        ctx.lineJoin = strokeLinejoinStyleProp.getString() as CanvasLineJoin\n      }\n\n      if (strokeMiterlimitProp.hasValue()) {\n        ctx.miterLimit = strokeMiterlimitProp.getNumber()\n      }\n\n      // NEED TEST\n      // if (pointOrderStyleProp.hasValue()) {\n      //   // ?\n      //   ctx.paintOrder = pointOrderStyleProp.getValue();\n      // }\n\n      if (strokeDasharrayStyleProp.hasValue() && strokeDasharrayStyleProp.getString() !== 'none') {\n        const gaps = toNumbers(strokeDasharrayStyleProp.getString())\n\n        if (typeof ctx.setLineDash !== 'undefined') {\n          ctx.setLineDash(gaps)\n        } else\n        // @ts-expect-error Handle browser prefix.\n        if (typeof ctx.webkitLineDash !== 'undefined') {\n          // @ts-expect-error Handle browser prefix.\n          ctx.webkitLineDash = gaps\n        } else\n        // @ts-expect-error Handle browser prefix.\n        if (typeof ctx.mozDash !== 'undefined' && !(gaps.length === 1 && gaps[0] === 0)) {\n          // @ts-expect-error Handle browser prefix.\n          ctx.mozDash = gaps\n        }\n\n        const offset = strokeDashoffsetProp.getPixels()\n\n        if (typeof ctx.lineDashOffset !== 'undefined') {\n          ctx.lineDashOffset = offset\n        } else\n        // @ts-expect-error Handle browser prefix.\n        if (typeof ctx.webkitLineDashOffset !== 'undefined') {\n          // @ts-expect-error Handle browser prefix.\n          ctx.webkitLineDashOffset = offset\n        } else\n        // @ts-expect-error Handle browser prefix.\n        if (typeof ctx.mozDashOffset !== 'undefined') {\n          // @ts-expect-error Handle browser prefix.\n          ctx.mozDashOffset = offset\n        }\n      }\n    }\n\n    // font\n    this.modifiedEmSizeStack = false\n\n    if (typeof ctx.font !== 'undefined') {\n      const fontStyleProp = this.getStyle('font')\n      const fontStyleStyleProp = this.getStyle('font-style')\n      const fontVariantStyleProp = this.getStyle('font-variant')\n      const fontWeightStyleProp = this.getStyle('font-weight')\n      const fontSizeStyleProp = this.getStyle('font-size')\n      const fontFamilyStyleProp = this.getStyle('font-family')\n      const font = new Font(\n        fontStyleStyleProp.getString(),\n        fontVariantStyleProp.getString(),\n        fontWeightStyleProp.getString(),\n        fontSizeStyleProp.hasValue()\n          ? `${fontSizeStyleProp.getPixels(true)}px`\n          : '',\n        fontFamilyStyleProp.getString(),\n        Font.parse(\n          fontStyleProp.getString(),\n          ctx.font\n        )\n      )\n\n      fontStyleStyleProp.setValue(font.fontStyle)\n      fontVariantStyleProp.setValue(font.fontVariant)\n      fontWeightStyleProp.setValue(font.fontWeight)\n      fontSizeStyleProp.setValue(font.fontSize)\n      fontFamilyStyleProp.setValue(font.fontFamily)\n\n      ctx.font = font.toString()\n\n      if (fontSizeStyleProp.isPixels()) {\n        this.document.emSize = fontSizeStyleProp.getPixels()\n        this.modifiedEmSizeStack = true\n      }\n    }\n\n    if (!fromMeasure) {\n      // effects\n      this.applyEffects(ctx)\n      // opacity\n      ctx.globalAlpha = this.calculateOpacity()\n    }\n  }\n\n  override clearContext(ctx: RenderingContext2D) {\n    super.clearContext(ctx)\n\n    if (this.modifiedEmSizeStack) {\n      this.document.popEmSize()\n    }\n  }\n}\n", "import { RenderingContext2D } from '../types'\nimport {\n  toNumbers,\n  compressSpaces,\n  trimLeft,\n  trimRight\n} from '../util'\nimport { Font } from '../Font'\nimport { BoundingBox } from '../BoundingBox'\nimport { Document } from './Document'\nimport { Element } from './Element'\nimport { FontElement } from './FontElement'\nimport { ArabicForm, GlyphElement } from './GlyphElement'\nimport { RenderedElement } from './RenderedElement'\n\nexport class TextElement extends RenderedElement {\n  override type = 'text'\n  protected x = 0\n  protected y = 0\n  private leafTexts: TextElement[] = []\n  private textChunkStart = 0\n  private minX = Number.POSITIVE_INFINITY\n  private maxX = Number.NEGATIVE_INFINITY\n  private measureCache = -1\n\n  constructor(\n    document: Document,\n    node: HTMLElement,\n    captureTextNodes?: boolean\n  ) {\n    super(\n      document,\n      node,\n      new.target === TextElement\n        ? true\n        : captureTextNodes\n    )\n  }\n\n  override setContext(ctx: RenderingContext2D, fromMeasure = false) {\n    super.setContext(ctx, fromMeasure)\n\n    const textBaseline = this.getStyle('dominant-baseline').getTextBaseline()\n      || this.getStyle('alignment-baseline').getTextBaseline()\n\n    if (textBaseline) {\n      ctx.textBaseline = textBaseline as CanvasTextBaseline\n    }\n  }\n\n  protected initializeCoordinates() {\n    this.x = 0\n    this.y = 0\n    this.leafTexts = []\n    this.textChunkStart = 0\n    this.minX = Number.POSITIVE_INFINITY\n    this.maxX = Number.NEGATIVE_INFINITY\n  }\n\n  getBoundingBox(ctx: RenderingContext2D) {\n    if (this.type !== 'text') {\n      return this.getTElementBoundingBox(ctx)\n    }\n\n    // first, calculate child positions\n    this.initializeCoordinates()\n    this.adjustChildCoordinatesRecursive(ctx)\n\n    let boundingBox: BoundingBox | null = null\n\n    // then calculate bounding box\n    this.children.forEach((_, i) => {\n      const childBoundingBox = this.getChildBoundingBox(ctx, this, this, i)\n\n      if (!boundingBox) {\n        boundingBox = childBoundingBox\n      } else {\n        boundingBox.addBoundingBox(childBoundingBox)\n      }\n    })\n\n    return boundingBox\n  }\n\n  protected getFontSize() {\n    const {\n      document,\n      parent\n    } = this\n    const inheritFontSize = Font.parse(document.ctx.font).fontSize\n    const fontSize = parent.getStyle('font-size').getNumber(inheritFontSize)\n\n    return fontSize\n  }\n\n  protected getTElementBoundingBox(ctx: RenderingContext2D) {\n    const fontSize = this.getFontSize()\n\n    return new BoundingBox(\n      this.x,\n      this.y - fontSize,\n      this.x + this.measureText(ctx),\n      this.y\n    )\n  }\n\n  getGlyph(\n    font: FontElement,\n    text: string,\n    i: number\n  ) {\n    const char = text[i]\n    let glyph: GlyphElement | undefined\n\n    if (font.isArabic) {\n      const len = text.length\n      const prevChar = text[i - 1]\n      const nextChar = text[i + 1]\n      let arabicForm: ArabicForm = 'isolated'\n\n      if ((i === 0 || prevChar === ' ') && i < len - 1 && nextChar !== ' ') {\n        arabicForm = 'terminal'\n      }\n\n      if (i > 0 && prevChar !== ' ' && i < len - 1 && nextChar !== ' ') {\n        arabicForm = 'medial'\n      }\n\n      if (i > 0 && prevChar !== ' ' && (i === len - 1 || nextChar === ' ')) {\n        arabicForm = 'initial'\n      }\n\n      glyph = font.arabicGlyphs.get(char)?.get(arabicForm) || font.glyphs.get(char)\n    } else {\n      glyph = font.glyphs.get(char)\n    }\n\n    if (!glyph) {\n      glyph = font.missingGlyph\n    }\n\n    return glyph\n  }\n\n  getText() {\n    return ''\n  }\n\n  protected getTextFromNode(node?: ChildNode) {\n    const textNode = node || this.node\n    const childNodes = Array.from(textNode.parentNode.childNodes)\n    const index = childNodes.indexOf(textNode)\n    const lastIndex = childNodes.length - 1\n    let text = compressSpaces(\n      // textNode.value\n      // || textNode.text\n      textNode.textContent\n      || ''\n    )\n\n    if (index === 0) {\n      text = trimLeft(text)\n    }\n\n    if (index === lastIndex) {\n      text = trimRight(text)\n    }\n\n    return text\n  }\n\n  override renderChildren(ctx: RenderingContext2D) {\n    if (this.type !== 'text') {\n      this.renderTElementChildren(ctx)\n      return\n    }\n\n    // first, calculate child positions\n    this.initializeCoordinates()\n    this.adjustChildCoordinatesRecursive(ctx)\n\n    // then render\n    this.children.forEach((_, i) => {\n      this.renderChild(ctx, this, this, i)\n    })\n\n    const { mouse } = this.document.screen\n\n    // Do not calc bounding box if mouse is not working.\n    if (mouse.isWorking()) {\n      mouse.checkBoundingBox(\n        this,\n        this.getBoundingBox(ctx)\n      )\n    }\n  }\n\n  protected renderTElementChildren(ctx: RenderingContext2D) {\n    const {\n      document,\n      parent\n    } = this\n    const renderText = this.getText()\n    const customFont = parent.getStyle('font-family').getDefinition<FontElement>()\n\n    if (customFont) {\n      const { unitsPerEm } = customFont.fontFace\n      const ctxFont = Font.parse(document.ctx.font)\n      const fontSize = parent.getStyle('font-size').getNumber(ctxFont.fontSize)\n      const fontStyle = parent.getStyle('font-style').getString(ctxFont.fontStyle)\n      const scale = fontSize / unitsPerEm\n      const text = customFont.isRTL\n        ? renderText.split('').reverse().join('')\n        : renderText\n      const dx = toNumbers(parent.getAttribute('dx').getString())\n      const len = text.length\n\n      for (let i = 0; i < len; i++) {\n        const glyph = this.getGlyph(customFont, text, i)\n\n        ctx.translate(this.x, this.y)\n        ctx.scale(scale, -scale)\n\n        const lw = ctx.lineWidth\n\n        ctx.lineWidth = ctx.lineWidth * unitsPerEm / fontSize\n\n        if (fontStyle === 'italic') {\n          ctx.transform(1, 0, .4, 1, 0, 0)\n        }\n\n        glyph.render(ctx)\n\n        if (fontStyle === 'italic') {\n          ctx.transform(1, 0, -.4, 1, 0, 0)\n        }\n\n        ctx.lineWidth = lw\n        ctx.scale(1 / scale, -1 / scale)\n        ctx.translate(-this.x, -this.y)\n\n        this.x += fontSize * (glyph.horizAdvX || customFont.horizAdvX) / unitsPerEm\n\n        if (typeof dx[i] !== 'undefined' && !isNaN(dx[i])) {\n          this.x += dx[i]\n        }\n      }\n\n      return\n    }\n\n    const {\n      x,\n      y\n    } = this\n\n    // NEED TEST\n    // if (ctx.paintOrder === 'stroke') {\n    //   if (ctx.strokeStyle) {\n    //     ctx.strokeText(renderText, x, y);\n    //   }\n\n    //   if (ctx.fillStyle) {\n    //     ctx.fillText(renderText, x, y);\n    //   }\n    // } else {\n    if (ctx.fillStyle) {\n      ctx.fillText(renderText, x, y)\n    }\n\n    if (ctx.strokeStyle) {\n      ctx.strokeText(renderText, x, y)\n    }\n    // }\n  }\n\n  protected applyAnchoring() {\n    if (this.textChunkStart >= this.leafTexts.length) {\n      return\n    }\n\n    // This is basically the \"Apply anchoring\" part of https://www.w3.org/TR/SVG2/text.html#TextLayoutAlgorithm.\n    // The difference is that we apply the anchoring as soon as a chunk is finished. This saves some extra looping.\n    // Vertical text is not supported.\n\n    const firstElement = this.leafTexts[this.textChunkStart]\n    const textAnchor = firstElement.getStyle('text-anchor').getString('start')\n    const isRTL = false // we treat RTL like LTR\n    let shift = 0\n\n    if (textAnchor === 'start' && !isRTL || textAnchor === 'end' && isRTL) {\n      shift = firstElement.x - this.minX\n    } else if (textAnchor === 'end' && !isRTL || textAnchor === 'start' && isRTL) {\n      shift = firstElement.x - this.maxX\n    } else {\n      shift = firstElement.x - (this.minX + this.maxX) / 2\n    }\n\n    for (let i = this.textChunkStart; i < this.leafTexts.length; i++) {\n      this.leafTexts[i].x += shift\n    }\n\n    // start new chunk\n    this.minX = Number.POSITIVE_INFINITY\n    this.maxX = Number.NEGATIVE_INFINITY\n    this.textChunkStart = this.leafTexts.length\n  }\n\n  protected adjustChildCoordinatesRecursive(ctx: RenderingContext2D) {\n    this.children.forEach((_, i) => {\n      this.adjustChildCoordinatesRecursiveCore(ctx, this, this, i)\n    })\n    this.applyAnchoring()\n  }\n\n  protected adjustChildCoordinatesRecursiveCore(\n    ctx: RenderingContext2D,\n    textParent: TextElement,\n    parent: Element,\n    i: number\n  ): void {\n    const child = parent.children[i] as TextElement\n\n    if (child.children.length > 0) {\n      child.children.forEach((_, i) => {\n        textParent.adjustChildCoordinatesRecursiveCore(ctx, textParent, child, i)\n      })\n    } else {\n      // only leafs are relevant\n      this.adjustChildCoordinates(ctx, textParent, parent, i)\n    }\n  }\n\n  protected adjustChildCoordinates(\n    ctx: RenderingContext2D,\n    textParent: TextElement,\n    parent: Element,\n    i: number\n  ) {\n    const child = parent.children[i] as TextElement\n\n    if (typeof child.measureText !== 'function') {\n      return child\n    }\n\n    ctx.save()\n    child.setContext(ctx, true)\n\n    const xAttr = child.getAttribute('x')\n    const yAttr = child.getAttribute('y')\n    const dxAttr = child.getAttribute('dx')\n    const dyAttr = child.getAttribute('dy')\n    const customFont = child.getStyle('font-family').getDefinition<FontElement>()\n    const isRTL = Boolean(customFont?.isRTL)\n\n    if (i === 0) {\n      // First children inherit attributes from parent(s). Positional attributes\n      // are only inherited from a parent to it's first child.\n      if (!xAttr.hasValue()) {\n        xAttr.setValue(child.getInheritedAttribute('x'))\n      }\n\n      if (!yAttr.hasValue()) {\n        yAttr.setValue(child.getInheritedAttribute('y'))\n      }\n\n      if (!dxAttr.hasValue()) {\n        dxAttr.setValue(child.getInheritedAttribute('dx'))\n      }\n\n      if (!dyAttr.hasValue()) {\n        dyAttr.setValue(child.getInheritedAttribute('dy'))\n      }\n    }\n\n    const width = child.measureText(ctx)\n\n    if (isRTL) {\n      textParent.x -= width\n    }\n\n    if (xAttr.hasValue()) {\n      // an \"x\" attribute marks the start of a new chunk\n      textParent.applyAnchoring()\n\n      child.x = xAttr.getPixels('x')\n\n      if (dxAttr.hasValue()) {\n        child.x += dxAttr.getPixels('x')\n      }\n    } else {\n      if (dxAttr.hasValue()) {\n        textParent.x += dxAttr.getPixels('x')\n      }\n\n      child.x = textParent.x\n    }\n\n    textParent.x = child.x\n\n    if (!isRTL) {\n      textParent.x += width\n    }\n\n    if (yAttr.hasValue()) {\n      child.y = yAttr.getPixels('y')\n\n      if (dyAttr.hasValue()) {\n        child.y += dyAttr.getPixels('y')\n      }\n    } else {\n      if (dyAttr.hasValue()) {\n        textParent.y += dyAttr.getPixels('y')\n      }\n\n      child.y = textParent.y\n    }\n\n    textParent.y = child.y\n\n    // update the current chunk and it's bounds\n    textParent.leafTexts.push(child)\n    textParent.minX = Math.min(textParent.minX, child.x, child.x + width)\n    textParent.maxX = Math.max(textParent.maxX, child.x, child.x + width)\n\n    child.clearContext(ctx)\n    ctx.restore()\n\n    return child\n  }\n\n  protected getChildBoundingBox(\n    ctx: RenderingContext2D,\n    textParent: TextElement,\n    parent: Element,\n    i: number\n  ) {\n    const child = parent.children[i] as TextElement\n\n    // not a text node?\n    if (typeof child.getBoundingBox !== 'function') {\n      return null\n    }\n\n    const boundingBox = child.getBoundingBox(ctx)\n\n    if (boundingBox) {\n      child.children.forEach((_, i) => {\n        const childBoundingBox = textParent.getChildBoundingBox(ctx, textParent, child, i)\n\n        boundingBox.addBoundingBox(childBoundingBox)\n      })\n    }\n\n    return boundingBox\n  }\n\n  protected renderChild(\n    ctx: RenderingContext2D,\n    textParent: TextElement,\n    parent: Element,\n    i: number\n  ) {\n    const child = parent.children[i] as TextElement\n\n    child.render(ctx)\n    child.children.forEach((_, i) => {\n      textParent.renderChild(ctx, textParent, child, i)\n    })\n  }\n\n  protected measureText(ctx: RenderingContext2D) {\n    const { measureCache } = this\n\n    if (~measureCache) {\n      return measureCache\n    }\n\n    const renderText = this.getText()\n    const measure = this.measureTargetText(ctx, renderText)\n\n    this.measureCache = measure\n\n    return measure\n  }\n\n  protected measureTargetText(\n    ctx: RenderingContext2D,\n    targetText: string\n  ) {\n    if (!targetText.length) {\n      return 0\n    }\n\n    const { parent } = this\n    const customFont = parent.getStyle('font-family').getDefinition<FontElement>()\n\n    if (customFont) {\n      const fontSize = this.getFontSize()\n      const text = customFont.isRTL\n        ? targetText.split('').reverse().join('')\n        : targetText\n      const dx = toNumbers(parent.getAttribute('dx').getString())\n      const len = text.length\n      let measure = 0\n\n      for (let i = 0; i < len; i++) {\n        const glyph = this.getGlyph(customFont, text, i)\n\n        measure += (glyph.horizAdvX || customFont.horizAdvX)\n          * fontSize\n          / customFont.fontFace.unitsPerEm\n\n        if (typeof dx[i] !== 'undefined' && !isNaN(dx[i])) {\n          measure += dx[i]\n        }\n      }\n\n      return measure\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (!ctx.measureText) {\n      return targetText.length * 10\n    }\n\n    ctx.save()\n    this.setContext(ctx, true)\n\n    const { width: measure } = ctx.measureText(targetText)\n\n    this.clearContext(ctx)\n    ctx.restore()\n\n    return measure\n  }\n\n  /**\n   * Inherits positional attributes from {@link TextElement} parent(s). Attributes\n   * are only inherited from a parent to its first child.\n   * @param name - The attribute name.\n   * @returns The attribute value or null.\n   */\n  protected getInheritedAttribute(name: string): string | null {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias,consistent-this\n    let current: Element | null = this\n\n    while (current instanceof TextElement && current.isFirstChild() && current.parent) {\n      const parentAttr = current.parent.getAttribute(name)\n\n      if (parentAttr.hasValue(true)) {\n        return parentAttr.getString('0')\n      }\n\n      current = current.parent\n    }\n\n    return null\n  }\n}\n", "import { Document } from './Document'\nimport { TextElement } from './TextElement'\n\nexport class TSpanElement extends TextElement {\n  override type = 'tspan'\n  protected readonly text: string\n\n  constructor(\n    document: Document,\n    node: HTMLElement,\n    captureTextNodes?: boolean\n  ) {\n    super(\n      document,\n      node,\n      new.target === TSpanElement\n        ? true\n        : captureTextNodes\n    )\n\n    // if this node has children, then they own the text\n    this.text = this.children.length > 0\n      ? ''\n      : this.getTextFromNode()\n  }\n\n  override getText() {\n    return this.text\n  }\n}\n", "import { TSpanElement } from './TSpanElement'\n\nexport class TextNode extends TSpanElement {\n  override type = 'textNode'\n}\n", "import {\n  SVGCommand,\n  CommandM,\n  CommandL,\n  CommandH,\n  CommandV,\n  CommandZ,\n  CommandQ,\n  CommandT,\n  CommandC,\n  CommandS,\n  CommandA\n} from 'svg-pathdata/lib/types'\nimport { SVGPathData } from 'svg-pathdata'\nimport { Point } from './Point'\n\nexport type CommandType = SVGCommand['type']\nexport type Command = { type: CommandType }\n  & Omit<CommandM, 'type'>\n  & Omit<CommandL, 'type'>\n  & Omit<CommandH, 'type'>\n  & Omit<CommandV, 'type'>\n  & Omit<CommandZ, 'type'>\n  & Omit<CommandQ, 'type'>\n  & Omit<CommandT, 'type'>\n  & Omit<CommandC, 'type'>\n  & Omit<CommandS, 'type'>\n  & Omit<CommandA, 'type'>\n\nexport class PathParser extends SVGPathData {\n  control: Point = new Point(0, 0)\n  start: Point = new Point(0, 0)\n  current: Point = new Point(0, 0)\n  command: Command | null = null\n  override readonly commands: Command[] /* Babel fix: */ = this.commands\n  private i = -1\n  private previousCommand: Command | null = null\n  private points: Point[] = []\n  private angles: (number | null)[] = []\n\n  constructor(path: string) {\n    super(\n      path\n        // Fix spaces after signs.\n        .replace(/([+\\-.])\\s+/gm, '$1')\n        // Remove invalid part.\n        .replace(/[^MmZzLlHhVvCcSsQqTtAae\\d\\s.,+-].*/g, '')\n    )\n  }\n\n  reset() {\n    this.i = -1\n    this.command = null\n    this.previousCommand = null\n    this.start = new Point(0, 0)\n    this.control = new Point(0, 0)\n    this.current = new Point(0, 0)\n    this.points = []\n    this.angles = []\n  }\n\n  isEnd() {\n    const {\n      i,\n      commands\n    } = this\n\n    return i >= commands.length - 1\n  }\n\n  next() {\n    const command = this.commands[++this.i]\n\n    this.previousCommand = this.command\n    this.command = command\n\n    return command\n  }\n\n  getPoint(xProp = 'x', yProp = 'y') {\n    const point = new Point(\n      this.command[xProp] as number,\n      this.command[yProp] as number\n    )\n\n    return this.makeAbsolute(point)\n  }\n\n  getAsControlPoint(xProp?: string, yProp?: string) {\n    const point = this.getPoint(xProp, yProp)\n\n    this.control = point\n\n    return point\n  }\n\n  getAsCurrentPoint(xProp?: string, yProp?: string) {\n    const point = this.getPoint(xProp, yProp)\n\n    this.current = point\n\n    return point\n  }\n\n  getReflectedControlPoint() {\n    const previousCommand = this.previousCommand.type\n\n    if (previousCommand !== SVGPathData.CURVE_TO\n      && previousCommand !== SVGPathData.SMOOTH_CURVE_TO\n      && previousCommand !== SVGPathData.QUAD_TO\n      && previousCommand !== SVGPathData.SMOOTH_QUAD_TO\n    ) {\n      return this.current\n    }\n\n    // reflect point\n    const {\n      current: {\n        x: cx,\n        y: cy\n      },\n      control: {\n        x: ox,\n        y: oy\n      }\n    } = this\n    const point = new Point(2 * cx - ox, 2 * cy - oy)\n\n    return point\n  }\n\n  makeAbsolute(point: Point) {\n    if (this.command.relative) {\n      const {\n        x,\n        y\n      } = this.current\n\n      point.x += x\n      point.y += y\n    }\n\n    return point\n  }\n\n  addMarker(point: Point, from?: Point, priorTo?: Point) {\n    const {\n      points,\n      angles\n    } = this\n\n    // if the last angle isn't filled in because we didn't have this point yet ...\n    if (priorTo && angles.length > 0 && !angles[angles.length - 1]) {\n      angles[angles.length - 1] = points[points.length - 1].angleTo(priorTo)\n    }\n\n    this.addMarkerAngle(point, from ? from.angleTo(point) : null)\n  }\n\n  addMarkerAngle(point: Point, angle: number) {\n    this.points.push(point)\n    this.angles.push(angle)\n  }\n\n  getMarkerPoints() {\n    return this.points\n  }\n\n  getMarkerAngles() {\n    const { angles } = this\n    const len = angles.length\n\n    for (let i = 0; i < len; i++) {\n      if (!angles[i]) {\n        for (let j = i + 1; j < len; j++) {\n          if (angles[j]) {\n            angles[i] = angles[j]\n            break\n          }\n        }\n      }\n    }\n\n    return angles\n  }\n}\n", "/* eslint-disable @typescript-eslint/member-ordering */\nimport { RenderingContext2D } from '../types'\nimport {\n  vectorsRatio,\n  vectorsAngle\n} from '../util'\nimport { Point } from '../Point'\nimport { BoundingBox } from '../BoundingBox'\nimport { PathParser } from '../PathParser'\nimport { Document } from './Document'\nimport { RenderedElement } from './RenderedElement'\nimport { MarkerElement } from './MarkerElement'\n\nexport type Marker = [Point, number]\n\nexport class PathElement extends RenderedElement {\n  override type = 'path'\n  readonly pathParser: PathParser\n\n  constructor(\n    document: Document,\n    node?: HTMLElement,\n    captureTextNodes?: boolean\n  ) {\n    super(document, node, captureTextNodes)\n\n    this.pathParser = new PathParser(this.getAttribute('d').getString())\n  }\n\n  path(ctx?: RenderingContext2D) {\n    const { pathParser } = this\n    const boundingBox = new BoundingBox()\n\n    pathParser.reset()\n\n    if (ctx) {\n      ctx.beginPath()\n    }\n\n    while (!pathParser.isEnd()) {\n      switch (pathParser.next().type) {\n        case PathParser.MOVE_TO:\n          this.pathM(ctx, boundingBox)\n          break\n\n        case PathParser.LINE_TO:\n          this.pathL(ctx, boundingBox)\n          break\n\n        case PathParser.HORIZ_LINE_TO:\n          this.pathH(ctx, boundingBox)\n          break\n\n        case PathParser.VERT_LINE_TO:\n          this.pathV(ctx, boundingBox)\n          break\n\n        case PathParser.CURVE_TO:\n          this.pathC(ctx, boundingBox)\n          break\n\n        case PathParser.SMOOTH_CURVE_TO:\n          this.pathS(ctx, boundingBox)\n          break\n\n        case PathParser.QUAD_TO:\n          this.pathQ(ctx, boundingBox)\n          break\n\n        case PathParser.SMOOTH_QUAD_TO:\n          this.pathT(ctx, boundingBox)\n          break\n\n        case PathParser.ARC:\n          this.pathA(ctx, boundingBox)\n          break\n\n        case PathParser.CLOSE_PATH:\n          this.pathZ(ctx, boundingBox)\n          break\n\n        default:\n      }\n    }\n\n    return boundingBox\n  }\n\n  getBoundingBox(_ctx: RenderingContext2D) {\n    return this.path()\n  }\n\n  getMarkers(): Marker[] {\n    const { pathParser } = this\n    const points = pathParser.getMarkerPoints()\n    const angles = pathParser.getMarkerAngles()\n    const markers = points.map((point, i): Marker => [point, angles[i]])\n\n    return markers\n  }\n\n  override renderChildren(ctx: RenderingContext2D) {\n    this.path(ctx)\n    this.document.screen.mouse.checkPath(this, ctx)\n\n    const fillRuleStyleProp = this.getStyle('fill-rule')\n\n    if (ctx.fillStyle !== '') {\n      if (fillRuleStyleProp.getString('inherit') !== 'inherit') {\n        ctx.fill(fillRuleStyleProp.getString() as CanvasFillRule)\n      } else {\n        ctx.fill()\n      }\n    }\n\n    if (ctx.strokeStyle !== '') {\n      if (this.getAttribute('vector-effect').getString() === 'non-scaling-stroke') {\n        ctx.save()\n        ctx.setTransform(1, 0, 0, 1, 0, 0)\n        ctx.stroke()\n        ctx.restore()\n      } else {\n        ctx.stroke()\n      }\n    }\n\n    const markers = this.getMarkers()\n\n    if (markers) {\n      const markersLastIndex = markers.length - 1\n      const markerStartStyleProp = this.getStyle('marker-start')\n      const markerMidStyleProp = this.getStyle('marker-mid')\n      const markerEndStyleProp = this.getStyle('marker-end')\n\n      if (markerStartStyleProp.isUrlDefinition()) {\n        const marker = markerStartStyleProp.getDefinition<MarkerElement>()\n        const [point, angle] = markers[0]\n\n        marker.render(ctx, point, angle)\n      }\n\n      if (markerMidStyleProp.isUrlDefinition()) {\n        const marker = markerMidStyleProp.getDefinition<MarkerElement>()\n\n        for (let i = 1; i < markersLastIndex; i++) {\n          const [point, angle] = markers[i]\n\n          marker.render(ctx, point, angle)\n        }\n      }\n\n      if (markerEndStyleProp.isUrlDefinition()) {\n        const marker = markerEndStyleProp.getDefinition<MarkerElement>()\n        const [point, angle] = markers[markersLastIndex]\n\n        marker.render(ctx, point, angle)\n      }\n    }\n  }\n\n  static pathM(pathParser: PathParser) {\n    const point = pathParser.getAsCurrentPoint()\n\n    pathParser.start = pathParser.current\n\n    return {\n      point\n    }\n  }\n\n  protected pathM(\n    ctx: RenderingContext2D | undefined,\n    boundingBox: BoundingBox\n  ) {\n    const { pathParser } = this\n    const { point } = PathElement.pathM(pathParser)\n    const {\n      x,\n      y\n    } = point\n\n    pathParser.addMarker(point)\n    boundingBox.addPoint(x, y)\n\n    if (ctx) {\n      ctx.moveTo(x, y)\n    }\n  }\n\n  static pathL(pathParser: PathParser) {\n    const { current } = pathParser\n    const point = pathParser.getAsCurrentPoint()\n\n    return {\n      current,\n      point\n    }\n  }\n\n  protected pathL(\n    ctx: RenderingContext2D | undefined,\n    boundingBox: BoundingBox\n  ) {\n    const { pathParser } = this\n    const {\n      current,\n      point\n    } = PathElement.pathL(pathParser)\n    const {\n      x,\n      y\n    } = point\n\n    pathParser.addMarker(point, current)\n    boundingBox.addPoint(x, y)\n\n    if (ctx) {\n      ctx.lineTo(x, y)\n    }\n  }\n\n  static pathH(pathParser: PathParser) {\n    const {\n      current,\n      command\n    } = pathParser\n    const point = new Point(\n      (command.relative ? current.x : 0) + command.x,\n      current.y\n    )\n\n    pathParser.current = point\n\n    return {\n      current,\n      point\n    }\n  }\n\n  protected pathH(\n    ctx: RenderingContext2D | undefined,\n    boundingBox: BoundingBox\n  ) {\n    const { pathParser } = this\n    const {\n      current,\n      point\n    } = PathElement.pathH(pathParser)\n    const {\n      x,\n      y\n    } = point\n\n    pathParser.addMarker(point, current)\n    boundingBox.addPoint(x, y)\n\n    if (ctx) {\n      ctx.lineTo(x, y)\n    }\n  }\n\n  static pathV(pathParser: PathParser) {\n    const {\n      current,\n      command\n    } = pathParser\n    const point = new Point(\n      current.x,\n      (command.relative ? current.y : 0) + command.y\n    )\n\n    pathParser.current = point\n\n    return {\n      current,\n      point\n    }\n  }\n\n  protected pathV(\n    ctx: RenderingContext2D | undefined,\n    boundingBox: BoundingBox\n  ) {\n    const { pathParser } = this\n    const {\n      current,\n      point\n    } = PathElement.pathV(pathParser)\n    const {\n      x,\n      y\n    } = point\n\n    pathParser.addMarker(point, current)\n    boundingBox.addPoint(x, y)\n\n    if (ctx) {\n      ctx.lineTo(x, y)\n    }\n  }\n\n  static pathC(pathParser: PathParser) {\n    const { current } = pathParser\n    const point = pathParser.getPoint('x1', 'y1')\n    const controlPoint = pathParser.getAsControlPoint('x2', 'y2')\n    const currentPoint = pathParser.getAsCurrentPoint()\n\n    return {\n      current,\n      point,\n      controlPoint,\n      currentPoint\n    }\n  }\n\n  protected pathC(\n    ctx: RenderingContext2D | undefined,\n    boundingBox: BoundingBox\n  ) {\n    const { pathParser } = this\n    const {\n      current,\n      point,\n      controlPoint,\n      currentPoint\n    } = PathElement.pathC(pathParser)\n\n    pathParser.addMarker(currentPoint, controlPoint, point)\n    boundingBox.addBezierCurve(\n      current.x,\n      current.y,\n      point.x,\n      point.y,\n      controlPoint.x,\n      controlPoint.y,\n      currentPoint.x,\n      currentPoint.y\n    )\n\n    if (ctx) {\n      ctx.bezierCurveTo(\n        point.x,\n        point.y,\n        controlPoint.x,\n        controlPoint.y,\n        currentPoint.x,\n        currentPoint.y\n      )\n    }\n  }\n\n  static pathS(pathParser: PathParser) {\n    const { current } = pathParser\n    const point = pathParser.getReflectedControlPoint()\n    const controlPoint = pathParser.getAsControlPoint('x2', 'y2')\n    const currentPoint = pathParser.getAsCurrentPoint()\n\n    return {\n      current,\n      point,\n      controlPoint,\n      currentPoint\n    }\n  }\n\n  protected pathS(\n    ctx: RenderingContext2D | undefined,\n    boundingBox: BoundingBox\n  ) {\n    const { pathParser } = this\n    const {\n      current,\n      point,\n      controlPoint,\n      currentPoint\n    } = PathElement.pathS(pathParser)\n\n    pathParser.addMarker(currentPoint, controlPoint, point)\n    boundingBox.addBezierCurve(\n      current.x,\n      current.y,\n      point.x,\n      point.y,\n      controlPoint.x,\n      controlPoint.y,\n      currentPoint.x,\n      currentPoint.y\n    )\n\n    if (ctx) {\n      ctx.bezierCurveTo(\n        point.x,\n        point.y,\n        controlPoint.x,\n        controlPoint.y,\n        currentPoint.x,\n        currentPoint.y\n      )\n    }\n  }\n\n  static pathQ(pathParser: PathParser) {\n    const { current } = pathParser\n    const controlPoint = pathParser.getAsControlPoint('x1', 'y1')\n    const currentPoint = pathParser.getAsCurrentPoint()\n\n    return {\n      current,\n      controlPoint,\n      currentPoint\n    }\n  }\n\n  protected pathQ(\n    ctx: RenderingContext2D | undefined,\n    boundingBox: BoundingBox\n  ) {\n    const { pathParser } = this\n    const {\n      current,\n      controlPoint,\n      currentPoint\n    } = PathElement.pathQ(pathParser)\n\n    pathParser.addMarker(currentPoint, controlPoint, controlPoint)\n    boundingBox.addQuadraticCurve(\n      current.x,\n      current.y,\n      controlPoint.x,\n      controlPoint.y,\n      currentPoint.x,\n      currentPoint.y\n    )\n\n    if (ctx) {\n      ctx.quadraticCurveTo(\n        controlPoint.x,\n        controlPoint.y,\n        currentPoint.x,\n        currentPoint.y\n      )\n    }\n  }\n\n  static pathT(pathParser: PathParser) {\n    const { current } = pathParser\n    const controlPoint = pathParser.getReflectedControlPoint()\n\n    pathParser.control = controlPoint\n\n    const currentPoint = pathParser.getAsCurrentPoint()\n\n    return {\n      current,\n      controlPoint,\n      currentPoint\n    }\n  }\n\n  protected pathT(\n    ctx: RenderingContext2D | undefined,\n    boundingBox: BoundingBox\n  ) {\n    const { pathParser } = this\n    const {\n      current,\n      controlPoint,\n      currentPoint\n    } = PathElement.pathT(pathParser)\n\n    pathParser.addMarker(currentPoint, controlPoint, controlPoint)\n    boundingBox.addQuadraticCurve(\n      current.x,\n      current.y,\n      controlPoint.x,\n      controlPoint.y,\n      currentPoint.x,\n      currentPoint.y\n    )\n\n    if (ctx) {\n      ctx.quadraticCurveTo(\n        controlPoint.x,\n        controlPoint.y,\n        currentPoint.x,\n        currentPoint.y\n      )\n    }\n  }\n\n  static pathA(pathParser: PathParser) {\n    const {\n      current,\n      command\n    } = pathParser\n    let {\n      rX,\n      rY,\n      xRot,\n      lArcFlag,\n      sweepFlag\n    } = command\n    const xAxisRotation = xRot * (Math.PI / 180.0)\n    const currentPoint = pathParser.getAsCurrentPoint()\n    // Conversion from endpoint to center parameterization\n    // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n    // x1', y1'\n    const currp = new Point(\n      Math.cos(xAxisRotation) * (current.x - currentPoint.x) / 2.0\n      + Math.sin(xAxisRotation) * (current.y - currentPoint.y) / 2.0,\n      -Math.sin(xAxisRotation) * (current.x - currentPoint.x) / 2.0\n      + Math.cos(xAxisRotation) * (current.y - currentPoint.y) / 2.0\n    )\n    // adjust radii\n    const l =\n      Math.pow(currp.x, 2) / Math.pow(rX, 2)\n      + Math.pow(currp.y, 2) / Math.pow(rY, 2)\n\n    if (l > 1) {\n      rX *= Math.sqrt(l)\n      rY *= Math.sqrt(l)\n    }\n\n    // cx', cy'\n    let s = (lArcFlag === sweepFlag ? -1 : 1) * Math.sqrt(\n      (\n        (Math.pow(rX, 2) * Math.pow(rY, 2))\n        - (Math.pow(rX, 2) * Math.pow(currp.y, 2))\n        - (Math.pow(rY, 2) * Math.pow(currp.x, 2))\n      ) / (\n        Math.pow(rX, 2) * Math.pow(currp.y, 2)\n        + Math.pow(rY, 2) * Math.pow(currp.x, 2)\n      )\n    )\n\n    if (isNaN(s)) {\n      s = 0\n    }\n\n    const cpp = new Point(\n      s * rX * currp.y / rY,\n      s * -rY * currp.x / rX\n    )\n    // cx, cy\n    const centp = new Point(\n      (current.x + currentPoint.x) / 2.0\n      + Math.cos(xAxisRotation) * cpp.x\n      - Math.sin(xAxisRotation) * cpp.y,\n      (current.y + currentPoint.y) / 2.0\n      + Math.sin(xAxisRotation) * cpp.x\n      + Math.cos(xAxisRotation) * cpp.y\n    )\n    // initial angle\n    const a1 = vectorsAngle([1, 0], [(currp.x - cpp.x) / rX, (currp.y - cpp.y) / rY]) // θ1\n    // angle delta\n    const u = [(currp.x - cpp.x) / rX, (currp.y - cpp.y) / rY] as const\n    const v = [(-currp.x - cpp.x) / rX, (-currp.y - cpp.y) / rY] as const\n    let ad = vectorsAngle(u, v) // Δθ\n\n    if (vectorsRatio(u, v) <= -1) {\n      ad = Math.PI\n    }\n\n    if (vectorsRatio(u, v) >= 1) {\n      ad = 0\n    }\n\n    return {\n      currentPoint,\n      rX,\n      rY,\n      sweepFlag,\n      xAxisRotation,\n      centp,\n      a1,\n      ad\n    }\n  }\n\n  protected pathA(\n    ctx: RenderingContext2D | undefined,\n    boundingBox: BoundingBox\n  ) {\n    const { pathParser } = this\n    const {\n      currentPoint,\n      rX,\n      rY,\n      sweepFlag,\n      xAxisRotation,\n      centp,\n      a1,\n      ad\n    } = PathElement.pathA(pathParser)\n    // for markers\n    const dir = 1 - sweepFlag ? 1.0 : -1.0\n    const ah = a1 + dir * (ad / 2.0)\n    const halfWay = new Point(\n      centp.x + rX * Math.cos(ah),\n      centp.y + rY * Math.sin(ah)\n    )\n\n    pathParser.addMarkerAngle(halfWay, ah - dir * Math.PI / 2)\n    pathParser.addMarkerAngle(currentPoint, ah - dir * Math.PI)\n    boundingBox.addPoint(currentPoint.x, currentPoint.y) // TODO: this is too naive, make it better\n\n    if (ctx && !isNaN(a1) && !isNaN(ad)) {\n      const r = rX > rY ? rX : rY\n      const sx = rX > rY ? 1 : rX / rY\n      const sy = rX > rY ? rY / rX : 1\n\n      ctx.translate(centp.x, centp.y)\n      ctx.rotate(xAxisRotation)\n      ctx.scale(sx, sy)\n      ctx.arc(0, 0, r, a1, a1 + ad, Boolean(1 - sweepFlag))\n      ctx.scale(1 / sx, 1 / sy)\n      ctx.rotate(-xAxisRotation)\n      ctx.translate(-centp.x, -centp.y)\n    }\n  }\n\n  static pathZ(pathParser: PathParser) {\n    pathParser.current = pathParser.start\n  }\n\n  protected pathZ(\n    ctx: RenderingContext2D | undefined,\n    boundingBox: BoundingBox\n  ) {\n    PathElement.pathZ(this.pathParser)\n\n    if (ctx) {\n      // only close path if it is not a straight line\n      if (boundingBox.x1 !== boundingBox.x2\n        && boundingBox.y1 !== boundingBox.y2\n      ) {\n        ctx.closePath()\n      }\n    }\n  }\n}\n", "import { RenderingContext2D } from '../types'\nimport { toNumbers } from '../util'\nimport { Property } from '../Property'\nimport { Font } from '../Font'\nimport { RenderedElement } from './RenderedElement'\n\nexport class SVGElement extends RenderedElement {\n  override type = 'svg'\n  root = false\n\n  override setContext(ctx: RenderingContext2D) {\n    const { document } = this\n    const {\n      screen,\n      window\n    } = document\n    const canvas = ctx.canvas\n\n    screen.setDefaults(ctx)\n\n    if ('style' in canvas\n      && typeof ctx.font !== 'undefined'\n      && window\n      && typeof window.getComputedStyle !== 'undefined'\n    ) {\n      ctx.font = window.getComputedStyle(canvas).getPropertyValue('font')\n\n      const fontSizeProp = new Property(\n        document,\n        'fontSize',\n        Font.parse(ctx.font).fontSize\n      )\n\n      if (fontSizeProp.hasValue()) {\n        document.rootEmSize = fontSizeProp.getPixels('y')\n        document.emSize = document.rootEmSize\n      }\n    }\n\n    // create new view port\n    if (!this.getAttribute('x').hasValue()) {\n      this.getAttribute('x', true).setValue(0)\n    }\n\n    if (!this.getAttribute('y').hasValue()) {\n      this.getAttribute('y', true).setValue(0)\n    }\n\n    let {\n      width,\n      height\n    } = screen.viewPort\n\n    if (!this.getStyle('width').hasValue()) {\n      this.getStyle('width', true).setValue('100%')\n    }\n\n    if (!this.getStyle('height').hasValue()) {\n      this.getStyle('height', true).setValue('100%')\n    }\n\n    if (!this.getStyle('color').hasValue()) {\n      this.getStyle('color', true).setValue('black')\n    }\n\n    const refXAttr = this.getAttribute('refX')\n    const refYAttr = this.getAttribute('refY')\n    const viewBoxAttr = this.getAttribute('viewBox')\n    const viewBox = viewBoxAttr.hasValue()\n      ? toNumbers(viewBoxAttr.getString())\n      : null\n    const clip = !this.root\n      && this.getStyle('overflow').getValue('hidden') !== 'visible'\n    let minX = 0\n    let minY = 0\n    let clipX = 0\n    let clipY = 0\n\n    if (viewBox) {\n      minX = viewBox[0]\n      minY = viewBox[1]\n    }\n\n    if (!this.root) {\n      width = this.getStyle('width').getPixels('x')\n      height = this.getStyle('height').getPixels('y')\n\n      if (this.type === 'marker') {\n        clipX = minX\n        clipY = minY\n        minX = 0\n        minY = 0\n      }\n    }\n\n    screen.viewPort.setCurrent(width, height)\n\n    // Default value of transform-origin is center only for root SVG elements\n    // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform-origin\n    if (this.node // is not temporary SVGElement\n      && (!this.parent || this.node.parentNode?.nodeName === 'foreignObject')\n      && this.getStyle('transform', false, true).hasValue()\n      && !this.getStyle('transform-origin', false, true).hasValue()\n    ) {\n      this.getStyle('transform-origin', true, true).setValue('50% 50%')\n    }\n\n    super.setContext(ctx)\n\n    ctx.translate(\n      this.getAttribute('x').getPixels('x'),\n      this.getAttribute('y').getPixels('y')\n    )\n\n    if (viewBox) {\n      width = viewBox[2]\n      height = viewBox[3]\n    }\n\n    document.setViewBox({\n      ctx,\n      aspectRatio: this.getAttribute('preserveAspectRatio').getString(),\n      width: screen.viewPort.width,\n      desiredWidth: width,\n      height: screen.viewPort.height,\n      desiredHeight: height,\n      minX,\n      minY,\n      refX: refXAttr.getValue() as number,\n      refY: refYAttr.getValue() as number,\n      clip,\n      clipX,\n      clipY\n    })\n\n    if (viewBox) {\n      screen.viewPort.removeCurrent()\n      screen.viewPort.setCurrent(width, height)\n    }\n  }\n\n  override clearContext(ctx: RenderingContext2D) {\n    super.clearContext(ctx)\n\n    this.document.screen.viewPort.removeCurrent()\n  }\n\n  /**\n   * Resize SVG to fit in given size.\n   * @param width\n   * @param height\n   * @param preserveAspectRatio\n   */\n  resize(\n    width: number,\n    height = width,\n    preserveAspectRatio: boolean | string = false\n  ) {\n    const widthAttr = this.getAttribute('width', true)\n    const heightAttr = this.getAttribute('height', true)\n    const viewBoxAttr = this.getAttribute('viewBox')\n    const styleAttr = this.getAttribute('style')\n    const originWidth = widthAttr.getNumber(0)\n    const originHeight = heightAttr.getNumber(0)\n\n    if (preserveAspectRatio) {\n      if (typeof preserveAspectRatio === 'string') {\n        this.getAttribute('preserveAspectRatio', true).setValue(preserveAspectRatio)\n      } else {\n        const preserveAspectRatioAttr = this.getAttribute('preserveAspectRatio')\n\n        if (preserveAspectRatioAttr.hasValue()) {\n          preserveAspectRatioAttr.setValue(preserveAspectRatioAttr.getString().replace(/^\\s*(\\S.*\\S)\\s*$/, '$1'))\n        }\n      }\n    }\n\n    widthAttr.setValue(width)\n    heightAttr.setValue(height)\n\n    if (!viewBoxAttr.hasValue()) {\n      viewBoxAttr.setValue(`0 0 ${originWidth || width} ${originHeight || height}`)\n    }\n\n    if (styleAttr.hasValue()) {\n      const widthStyle = this.getStyle('width')\n      const heightStyle = this.getStyle('height')\n\n      if (widthStyle.hasValue()) {\n        widthStyle.setValue(`${width}px`)\n      }\n\n      if (heightStyle.hasValue()) {\n        heightStyle.setValue(`${height}px`)\n      }\n    }\n  }\n}\n", "import { RenderingContext2D } from '../types'\nimport { BoundingBox } from '../BoundingBox'\nimport { PathElement } from './PathElement'\n\nexport class RectElement extends PathElement {\n  override type = 'rect'\n\n  override path(ctx: RenderingContext2D) {\n    const x = this.getAttribute('x').getPixels('x')\n    const y = this.getAttribute('y').getPixels('y')\n    const width = this.getStyle('width', false, true).getPixels('x')\n    const height = this.getStyle('height', false, true).getPixels('y')\n    const rxAttr = this.getAttribute('rx')\n    const ryAttr = this.getAttribute('ry')\n    let rx = rxAttr.getPixels('x')\n    let ry = ryAttr.getPixels('y')\n\n    if (rxAttr.hasValue() && !ryAttr.hasValue()) {\n      ry = rx\n    }\n\n    if (ryAttr.hasValue() && !rxAttr.hasValue()) {\n      rx = ry\n    }\n\n    rx = Math.min(rx, width / 2.0)\n    ry = Math.min(ry, height / 2.0)\n\n    if (ctx) {\n      const KAPPA = 4 * ((Math.sqrt(2) - 1) / 3)\n\n      ctx.beginPath() // always start the path so we don't fill prior paths\n\n      if (height > 0 && width > 0) {\n        ctx.moveTo(x + rx, y)\n        ctx.lineTo(x + width - rx, y)\n        ctx.bezierCurveTo(x + width - rx + (KAPPA * rx), y, x + width, y + ry - (KAPPA * ry), x + width, y + ry)\n        ctx.lineTo(x + width, y + height - ry)\n        ctx.bezierCurveTo(\n          x + width,\n          y + height - ry + (KAPPA * ry),\n          x + width - rx + (KAPPA * rx),\n          y + height,\n          x + width - rx,\n          y + height\n        )\n        ctx.lineTo(x + rx, y + height)\n        ctx.bezierCurveTo(x + rx - (KAPPA * rx), y + height, x, y + height - ry + (KAPPA * ry), x, y + height - ry)\n        ctx.lineTo(x, y + ry)\n        ctx.bezierCurveTo(x, y + ry - (KAPPA * ry), x + rx - (KAPPA * rx), y, x + rx, y)\n        ctx.closePath()\n      }\n    }\n\n    return new BoundingBox(x, y, x + width, y + height)\n  }\n\n  override getMarkers() {\n    return null\n  }\n}\n", "import { RenderingContext2D } from '../types'\nimport { BoundingBox } from '../BoundingBox'\nimport { PathElement } from './PathElement'\n\nexport class CircleElement extends PathElement {\n  override type = 'circle'\n\n  override path(ctx: RenderingContext2D) {\n    const cx = this.getAttribute('cx').getPixels('x')\n    const cy = this.getAttribute('cy').getPixels('y')\n    const r = this.getAttribute('r').getPixels()\n\n    if (ctx && r > 0) {\n      ctx.beginPath()\n      ctx.arc(cx, cy, r, 0, Math.PI * 2, false)\n      ctx.closePath()\n    }\n\n    return new BoundingBox(\n      cx - r,\n      cy - r,\n      cx + r,\n      cy + r\n    )\n  }\n\n  override getMarkers() {\n    return null\n  }\n}\n", "import { RenderingContext2D } from '../types'\nimport { BoundingBox } from '../BoundingBox'\nimport { PathElement } from './PathElement'\n\nexport class EllipseElement extends PathElement {\n  override type = 'ellipse'\n\n  override path(ctx: RenderingContext2D) {\n    const KAPPA = 4 * ((Math.sqrt(2) - 1) / 3)\n    const rx = this.getAttribute('rx').getPixels('x')\n    const ry = this.getAttribute('ry').getPixels('y')\n    const cx = this.getAttribute('cx').getPixels('x')\n    const cy = this.getAttribute('cy').getPixels('y')\n\n    if (ctx && rx > 0 && ry > 0) {\n      ctx.beginPath()\n      ctx.moveTo(cx + rx, cy)\n      ctx.bezierCurveTo(\n        cx + rx,\n        cy + (KAPPA * ry),\n        cx + (KAPPA * rx),\n        cy + ry,\n        cx,\n        cy + ry\n      )\n      ctx.bezierCurveTo(\n        cx - (KAPPA * rx),\n        cy + ry,\n        cx - rx,\n        cy + (KAPPA * ry),\n        cx - rx,\n        cy\n      )\n      ctx.bezierCurveTo(\n        cx - rx,\n        cy - (KAPPA * ry),\n        cx - (KAPPA * rx),\n        cy - ry,\n        cx,\n        cy - ry\n      )\n      ctx.bezierCurveTo(\n        cx + (KAPPA * rx),\n        cy - ry,\n        cx + rx,\n        cy - (KAPPA * ry),\n        cx + rx,\n        cy\n      )\n      ctx.closePath()\n    }\n\n    return new BoundingBox(\n      cx - rx,\n      cy - ry,\n      cx + rx,\n      cy + ry\n    )\n  }\n\n  override getMarkers() {\n    return null\n  }\n}\n", "import { RenderingContext2D } from '../types'\nimport { Point } from '../Point'\nimport { BoundingBox } from '../BoundingBox'\nimport { PathElement, Marker } from './PathElement'\n\nexport class LineElement extends PathElement {\n  override type = 'line'\n\n  getPoints() {\n    return [\n      new Point(\n        this.getAttribute('x1').getPixels('x'),\n        this.getAttribute('y1').getPixels('y')\n      ),\n      new Point(\n        this.getAttribute('x2').getPixels('x'),\n        this.getAttribute('y2').getPixels('y')\n      )\n    ]\n  }\n\n  override path(ctx: RenderingContext2D) {\n    const [\n      {\n        x: x0,\n        y: y0\n      },\n      {\n        x: x1,\n        y: y1\n      }\n    ] = this.getPoints()\n\n    if (ctx) {\n      ctx.beginPath()\n      ctx.moveTo(x0, y0)\n      ctx.lineTo(x1, y1)\n    }\n\n    return new BoundingBox(\n      x0,\n      y0,\n      x1,\n      y1\n    )\n  }\n\n  override getMarkers(): Marker[] {\n    const [p0, p1] = this.getPoints()\n    const a = p0.angleTo(p1)\n\n    return [[p0, a], [p1, a]]\n  }\n}\n", "import { RenderingContext2D } from '../types'\nimport { Point } from '../Point'\nimport { BoundingBox } from '../BoundingBox'\nimport { Document } from './Document'\nimport { PathElement, Marker } from './PathElement'\n\nexport class PolylineElement extends PathElement {\n  override type = 'polyline'\n  protected readonly points: Point[] = []\n\n  constructor(\n    document: Document,\n    node: HTMLElement,\n    captureTextNodes?: boolean\n  ) {\n    super(document, node, captureTextNodes)\n\n    this.points = Point.parsePath(\n      this.getAttribute('points').getString()\n    )\n  }\n\n  override path(ctx: RenderingContext2D) {\n    const { points } = this\n    const [\n      {\n        x: x0,\n        y: y0\n      }\n    ] = points\n    const boundingBox = new BoundingBox(x0, y0)\n\n    if (ctx) {\n      ctx.beginPath()\n      ctx.moveTo(x0, y0)\n    }\n\n    points.forEach(({\n      x,\n      y\n    }) => {\n      boundingBox.addPoint(x, y)\n\n      if (ctx) {\n        ctx.lineTo(x, y)\n      }\n    })\n\n    return boundingBox\n  }\n\n  override getMarkers() {\n    const { points } = this\n    const lastIndex = points.length - 1\n    const markers: Marker[] = []\n\n    points.forEach((point, i) => {\n      if (i === lastIndex) {\n        return\n      }\n\n      markers.push([point, point.angleTo(points[i + 1])])\n    })\n\n    if (markers.length > 0) {\n      markers.push([points[points.length - 1], markers[markers.length - 1][1]])\n    }\n\n    return markers\n  }\n}\n", "import { RenderingContext2D } from '../types'\nimport { PolylineElement } from './PolylineElement'\n\nexport class PolygonElement extends PolylineElement {\n  override type = 'polygon'\n\n  override path(ctx: RenderingContext2D) {\n    const boundingBox = super.path(ctx)\n    const [\n      {\n        x,\n        y\n      }\n    ] = this.points\n\n    if (ctx) {\n      ctx.lineTo(x, y)\n      ctx.closePath()\n    }\n\n    return boundingBox\n  }\n}\n", "import { RenderingContext2D } from '../types'\nimport { Property } from '../Property'\nimport { Element } from './Element'\nimport { SVGElement } from './SVGElement'\n\nexport class PatternElement extends Element {\n  override type = 'pattern'\n\n  createPattern(\n    ctx: RenderingContext2D,\n    _: Element,\n    parentOpacityProp: Property\n  ) {\n    const width = this.getStyle('width').getPixels('x', true)\n    const height = this.getStyle('height').getPixels('y', true)\n    // render me using a temporary svg element\n    const patternSvg = new SVGElement(\n      this.document,\n      null\n    )\n\n    patternSvg.attributes.set('viewBox', new Property(\n      this.document,\n      'viewBox',\n      this.getAttribute('viewBox').getValue()\n    ))\n    patternSvg.attributes.set('width', new Property(\n      this.document,\n      'width',\n      `${width}px`\n    ))\n    patternSvg.attributes.set('height', new Property(\n      this.document,\n      'height',\n      `${height}px`\n    ))\n    patternSvg.attributes.set('transform', new Property(\n      this.document,\n      'transform',\n      this.getAttribute('patternTransform').getValue()\n    ))\n    patternSvg.children = this.children\n\n    const patternCanvas = this.document.createCanvas(width, height)\n    const patternCtx = patternCanvas.getContext('2d')\n    const xAttr = this.getAttribute('x')\n    const yAttr = this.getAttribute('y')\n\n    if (xAttr.hasValue() && yAttr.hasValue()) {\n      patternCtx.translate(\n        xAttr.getPixels('x', true),\n        yAttr.getPixels('y', true)\n      )\n    }\n\n    if (parentOpacityProp.hasValue()) {\n      this.styles.set('fill-opacity', parentOpacityProp)\n    } else {\n      this.styles.delete('fill-opacity')\n    }\n\n    // render 3x3 grid so when we transform there's no white space on edges\n    for (let x = -1; x <= 1; x++) {\n      for (let y = -1; y <= 1; y++) {\n        patternCtx.save()\n        patternSvg.attributes.set('x', new Property(\n          this.document,\n          'x',\n          x * patternCanvas.width\n        ))\n        patternSvg.attributes.set('y', new Property(\n          this.document,\n          'y',\n          y * patternCanvas.height\n        ))\n        patternSvg.render(patternCtx)\n        patternCtx.restore()\n      }\n    }\n\n    const pattern = ctx.createPattern(patternCanvas as CanvasImageSource, 'repeat')\n\n    return pattern\n  }\n}\n", "import { RenderingContext2D } from '../types'\nimport { Point } from '../Point'\nimport { Property } from '../Property'\nimport { Element } from './Element'\nimport { SVGElement } from './SVGElement'\n\nexport class MarkerElement extends Element {\n  override type = 'marker'\n\n  override render(ctx: RenderingContext2D, point?: Point, angle?: number) {\n    if (!point) {\n      return\n    }\n\n    const {\n      x,\n      y\n    } = point\n    const orient = this.getAttribute('orient').getString('auto')\n    const markerUnits = this.getAttribute('markerUnits').getString('strokeWidth')\n\n    ctx.translate(x, y)\n\n    if (orient === 'auto') {\n      ctx.rotate(angle)\n    }\n\n    if (markerUnits === 'strokeWidth') {\n      ctx.scale(ctx.lineWidth, ctx.lineWidth)\n    }\n\n    ctx.save()\n\n    // render me using a temporary svg element\n    const markerSvg = new SVGElement(this.document)\n\n    markerSvg.type = this.type\n    markerSvg.attributes.set('viewBox', new Property(\n      this.document,\n      'viewBox',\n      this.getAttribute('viewBox').getValue()\n    ))\n    markerSvg.attributes.set('refX', new Property(\n      this.document,\n      'refX',\n      this.getAttribute('refX').getValue()\n    ))\n    markerSvg.attributes.set('refY', new Property(\n      this.document,\n      'refY',\n      this.getAttribute('refY').getValue()\n    ))\n    markerSvg.attributes.set('width', new Property(\n      this.document,\n      'width',\n      this.getAttribute('markerWidth').getValue()\n    ))\n    markerSvg.attributes.set('height', new Property(\n      this.document,\n      'height',\n      this.getAttribute('markerHeight').getValue()\n    ))\n    markerSvg.attributes.set('overflow', new Property(\n      this.document,\n      'overflow',\n      this.getAttribute('overflow').getValue()\n    ))\n    markerSvg.attributes.set('fill', new Property(\n      this.document,\n      'fill',\n      this.getAttribute('fill').getColor('black')\n    ))\n    markerSvg.attributes.set('stroke', new Property(\n      this.document,\n      'stroke',\n      this.getAttribute('stroke').getValue('none')\n    ))\n    markerSvg.children = this.children\n\n    markerSvg.render(ctx)\n\n    ctx.restore()\n\n    if (markerUnits === 'strokeWidth') {\n      ctx.scale(1 / ctx.lineWidth, 1 / ctx.lineWidth)\n    }\n\n    if (orient === 'auto') {\n      ctx.rotate(-angle)\n    }\n\n    ctx.translate(-x, -y)\n  }\n}\n", "import { Element } from './Element'\n\nexport class DefsElement extends Element {\n  override type = 'defs'\n\n  override render() {\n    // NOOP\n  }\n}\n", "import { RenderingContext2D } from '../types'\nimport { BoundingBox } from '../BoundingBox'\nimport { PathElement } from './PathElement'\nimport { RenderedElement } from './RenderedElement'\n\nexport class GElement extends RenderedElement {\n  override type = 'g'\n\n  getBoundingBox(ctx: RenderingContext2D) {\n    const boundingBox = new BoundingBox()\n\n    this.children.forEach((child: PathElement) => {\n      boundingBox.addBoundingBox(child.getBoundingBox(ctx))\n    })\n\n    return boundingBox\n  }\n}\n", "import { RenderingContext2D } from '../types'\nimport { Screen } from '../Screen'\nimport { Property } from '../Property'\nimport { Document } from './Document'\nimport { Element } from './Element'\nimport { PathElement } from './PathElement'\nimport { SVGElement } from './SVGElement'\nimport { RectElement } from './RectElement'\nimport { StopElement } from './StopElement'\nimport { GElement } from './GElement'\n\nexport abstract class GradientElement extends Element {\n  readonly attributesToInherit = ['gradientUnits']\n\n  protected readonly stops: StopElement[] = []\n\n  constructor(\n    document: Document,\n    node: HTMLElement,\n    captureTextNodes?: boolean\n  ) {\n    super(document, node, captureTextNodes)\n\n    const {\n      stops,\n      children\n    } = this\n\n    children.forEach((child) => {\n      if (child.type === 'stop') {\n        stops.push(child as StopElement)\n      }\n    })\n  }\n\n  abstract getGradient(ctx: RenderingContext2D, element: PathElement): CanvasGradient | null\n\n  getGradientUnits() {\n    return this.getAttribute('gradientUnits').getString('objectBoundingBox')\n  }\n\n  createGradient(\n    ctx: RenderingContext2D,\n    element: PathElement,\n    parentOpacityProp: Property\n  ) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias, consistent-this\n    let stopsContainer = this\n\n    if (this.getHrefAttribute().hasValue()) {\n      stopsContainer = this.getHrefAttribute().getDefinition()\n      this.inheritStopContainer(stopsContainer)\n    }\n\n    const { stops } = stopsContainer\n    const gradient = this.getGradient(ctx, element)\n\n    if (!gradient) {\n      return this.addParentOpacity(\n        parentOpacityProp,\n        stops[stops.length - 1].color\n      )\n    }\n\n    stops.forEach((stop: StopElement) => {\n      gradient.addColorStop(\n        stop.offset,\n        this.addParentOpacity(\n          parentOpacityProp,\n          stop.color\n        )\n      )\n    })\n\n    if (this.getAttribute('gradientTransform').hasValue()) {\n      // render as transformed pattern on temporary canvas\n      const { document } = this\n      const { MAX_VIRTUAL_PIXELS } = Screen\n      const { viewPort } = document.screen\n      const rootView = viewPort.getRoot()\n      const rect = new RectElement(document)\n\n      rect.attributes.set('x', new Property(\n        document,\n        'x',\n        -MAX_VIRTUAL_PIXELS / 3.0\n      ))\n      rect.attributes.set('y', new Property(\n        document,\n        'y',\n        -MAX_VIRTUAL_PIXELS / 3.0\n      ))\n      rect.attributes.set('width', new Property(\n        document,\n        'width',\n        MAX_VIRTUAL_PIXELS\n      ))\n      rect.attributes.set('height', new Property(\n        document,\n        'height',\n        MAX_VIRTUAL_PIXELS\n      ))\n\n      const group = new GElement(document)\n\n      group.attributes.set('transform', new Property(\n        document,\n        'transform',\n        this.getAttribute('gradientTransform').getValue()\n      ))\n      group.children = [rect]\n\n      const patternSvg = new SVGElement(document)\n\n      patternSvg.attributes.set('x', new Property(\n        document,\n        'x',\n        0\n      ))\n      patternSvg.attributes.set('y', new Property(\n        document,\n        'y',\n        0\n      ))\n      patternSvg.attributes.set('width', new Property(\n        document,\n        'width',\n        rootView.width\n      ))\n      patternSvg.attributes.set('height', new Property(\n        document,\n        'height',\n        rootView.height\n      ))\n      patternSvg.children = [group]\n\n      const patternCanvas = document.createCanvas(rootView.width, rootView.height)\n      const patternCtx = patternCanvas.getContext('2d')\n\n      patternCtx.fillStyle = gradient\n      patternSvg.render(patternCtx)\n\n      return patternCtx.createPattern(patternCanvas as CanvasImageSource, 'no-repeat')\n    }\n\n    return gradient\n  }\n\n  protected inheritStopContainer(stopsContainer: Element) {\n    this.attributesToInherit.forEach((attributeToInherit) => {\n      if (!this.getAttribute(attributeToInherit).hasValue()\n        && stopsContainer.getAttribute(attributeToInherit).hasValue()\n      ) {\n        this.getAttribute(attributeToInherit, true)\n          .setValue(stopsContainer.getAttribute(attributeToInherit).getValue())\n      }\n    })\n  }\n\n  protected addParentOpacity(parentOpacityProp: Property, color: string) {\n    if (parentOpacityProp.hasValue()) {\n      const colorProp = new Property(\n        this.document,\n        'color',\n        color\n      )\n\n      return colorProp.addOpacity(parentOpacityProp).getColor()\n    }\n\n    return color\n  }\n}\n", "import { RenderingContext2D } from '../types'\nimport { Document } from './Document'\nimport { PathElement } from './PathElement'\nimport { GradientElement } from './GradientElement'\n\nexport class LinearGradientElement extends GradientElement {\n  override type = 'linearGradient'\n\n  constructor(\n    document: Document,\n    node: HTMLElement,\n    captureTextNodes?: boolean\n  ) {\n    super(document, node, captureTextNodes)\n\n    this.attributesToInherit.push(\n      'x1',\n      'y1',\n      'x2',\n      'y2'\n    )\n  }\n\n  getGradient(ctx: RenderingContext2D, element: PathElement) {\n    const isBoundingBoxUnits = this.getGradientUnits() === 'objectBoundingBox'\n    const boundingBox = isBoundingBoxUnits\n      ? element.getBoundingBox(ctx)\n      : null\n\n    if (isBoundingBoxUnits && !boundingBox) {\n      return null\n    }\n\n    if (!this.getAttribute('x1').hasValue()\n      && !this.getAttribute('y1').hasValue()\n      && !this.getAttribute('x2').hasValue()\n      && !this.getAttribute('y2').hasValue()\n    ) {\n      this.getAttribute('x1', true).setValue(0)\n      this.getAttribute('y1', true).setValue(0)\n      this.getAttribute('x2', true).setValue(1)\n      this.getAttribute('y2', true).setValue(0)\n    }\n\n    const x1 = isBoundingBoxUnits\n      ? boundingBox.x + boundingBox.width * this.getAttribute('x1').getNumber()\n      : this.getAttribute('x1').getPixels('x')\n    const y1 = isBoundingBoxUnits\n      ? boundingBox.y + boundingBox.height * this.getAttribute('y1').getNumber()\n      : this.getAttribute('y1').getPixels('y')\n    const x2 = isBoundingBoxUnits\n      ? boundingBox.x + boundingBox.width * this.getAttribute('x2').getNumber()\n      : this.getAttribute('x2').getPixels('x')\n    const y2 = isBoundingBoxUnits\n      ? boundingBox.y + boundingBox.height * this.getAttribute('y2').getNumber()\n      : this.getAttribute('y2').getPixels('y')\n\n    if (x1 === x2 && y1 === y2) {\n      return null\n    }\n\n    return ctx.createLinearGradient(x1, y1, x2, y2)\n  }\n}\n", "import { RenderingContext2D } from '../types'\nimport { Document } from './Document'\nimport { PathElement } from './PathElement'\nimport { GradientElement } from './GradientElement'\n\nexport class RadialGradientElement extends GradientElement {\n  override type = 'radialGradient'\n\n  constructor(\n    document: Document,\n    node: HTMLElement,\n    captureTextNodes?: boolean\n  ) {\n    super(document, node, captureTextNodes)\n\n    this.attributesToInherit.push(\n      'cx',\n      'cy',\n      'r',\n      'fx',\n      'fy',\n      'fr'\n    )\n  }\n\n  getGradient(ctx: RenderingContext2D, element: PathElement) {\n    const isBoundingBoxUnits = this.getGradientUnits() === 'objectBoundingBox'\n    const boundingBox = element.getBoundingBox(ctx)\n\n    if (isBoundingBoxUnits && !boundingBox) {\n      return null\n    }\n\n    if (!this.getAttribute('cx').hasValue()) {\n      this.getAttribute('cx', true).setValue('50%')\n    }\n\n    if (!this.getAttribute('cy').hasValue()) {\n      this.getAttribute('cy', true).setValue('50%')\n    }\n\n    if (!this.getAttribute('r').hasValue()) {\n      this.getAttribute('r', true).setValue('50%')\n    }\n\n    const cx = isBoundingBoxUnits\n      ? boundingBox.x + boundingBox.width * this.getAttribute('cx').getNumber()\n      : this.getAttribute('cx').getPixels('x')\n    const cy = isBoundingBoxUnits\n      ? boundingBox.y + boundingBox.height * this.getAttribute('cy').getNumber()\n      : this.getAttribute('cy').getPixels('y')\n    let fx = cx\n    let fy = cy\n\n    if (this.getAttribute('fx').hasValue()) {\n      fx = isBoundingBoxUnits\n        ? boundingBox.x + boundingBox.width * this.getAttribute('fx').getNumber()\n        : this.getAttribute('fx').getPixels('x')\n    }\n\n    if (this.getAttribute('fy').hasValue()) {\n      fy = isBoundingBoxUnits\n        ? boundingBox.y + boundingBox.height * this.getAttribute('fy').getNumber()\n        : this.getAttribute('fy').getPixels('y')\n    }\n\n    const r = isBoundingBoxUnits\n      ? (boundingBox.width + boundingBox.height) / 2.0 * this.getAttribute('r').getNumber()\n      : this.getAttribute('r').getPixels()\n    const fr = this.getAttribute('fr').getPixels()\n\n    return ctx.createRadialGradient(fx, fy, fr, cx, cy, r)\n  }\n}\n", "import { Document } from './Document'\nimport { Element } from './Element'\n\nexport class StopElement extends Element {\n  override type = 'stop'\n  readonly offset: number\n  readonly color: string\n\n  constructor(\n    document: Document,\n    node: HTMLElement,\n    captureTextNodes?: boolean\n  ) {\n    super(document, node, captureTextNodes)\n\n    const offset = Math.max(0, Math.min(1, this.getAttribute('offset').getNumber()))\n    const stopOpacity = this.getStyle('stop-opacity')\n    let stopColor = this.getStyle('stop-color', true)\n\n    if (stopColor.getString() === '') {\n      stopColor.setValue('#000')\n    }\n\n    if (stopOpacity.hasValue()) {\n      stopColor = stopColor.addOpacity(stopOpacity)\n    }\n\n    this.offset = offset\n    this.color = stopColor.getColor()\n  }\n}\n", "import { Property } from '../Property'\nimport { Document } from './Document'\nimport { Element } from './Element'\n\nexport interface IProgress {\n  from: Property\n  to: Property\n  progress: number\n}\n\nexport class AnimateElement extends Element {\n  override type = 'animate'\n  protected readonly begin: number\n  protected readonly maxDuration: number\n  protected readonly from: Property\n  protected readonly to: Property\n  protected readonly values: Property<string[]>\n  protected duration = 0\n  protected initialValue: string | undefined\n  protected initialUnits = ''\n  protected removed = false\n  protected frozen = false\n\n  constructor(\n    document: Document,\n    node: HTMLElement,\n    captureTextNodes?: boolean\n  ) {\n    super(document, node, captureTextNodes)\n\n    document.screen.animations.push(this)\n\n    this.begin = this.getAttribute('begin').getMilliseconds()\n    this.maxDuration = this.begin + this.getAttribute('dur').getMilliseconds()\n    this.from = this.getAttribute('from')\n    this.to = this.getAttribute('to')\n    this.values = new Property<string[] | null>(document, 'values', null)\n\n    const valuesAttr = this.getAttribute('values')\n\n    if (valuesAttr.hasValue()) {\n      this.values.setValue(valuesAttr.getString().split(';'))\n    }\n  }\n\n  protected getProperty() {\n    const attributeType = this.getAttribute('attributeType').getString()\n    const attributeName = this.getAttribute('attributeName').getString()\n\n    if (attributeType === 'CSS') {\n      return this.parent.getStyle(attributeName, true)\n    }\n\n    return this.parent.getAttribute(attributeName, true)\n  }\n\n  calcValue() {\n    const { initialUnits } = this\n    const {\n      progress,\n      from,\n      to\n    } = this.getProgress()\n    // tween value linearly\n    let newValue = from.getNumber() + (to.getNumber() - from.getNumber()) * progress\n\n    if (initialUnits === '%') {\n      newValue *= 100.0 // numValue() returns 0-1 whereas properties are 0-100\n    }\n\n    return `${newValue}${initialUnits}`\n  }\n\n  update(delta: number) {\n    const { parent } = this\n    const prop = this.getProperty()\n\n    // set initial value\n    if (!this.initialValue) {\n      this.initialValue = prop.getString()\n      this.initialUnits = prop.getUnits()\n    }\n\n    // if we're past the end time\n    if (this.duration > this.maxDuration) {\n      const fill = this.getAttribute('fill').getString('remove')\n\n      // loop for indefinitely repeating animations\n      if (this.getAttribute('repeatCount').getString() === 'indefinite'\n        || this.getAttribute('repeatDur').getString() === 'indefinite'\n      ) {\n        this.duration = 0\n      } else\n      if (fill === 'freeze' && !this.frozen) {\n        this.frozen = true\n\n        if (parent && prop) {\n          parent.animationFrozen = true\n          parent.animationFrozenValue = prop.getString()\n        }\n      } else\n      if (fill === 'remove' && !this.removed) {\n        this.removed = true\n\n        if (parent && prop) {\n          prop.setValue(\n            parent.animationFrozen\n              ? parent.animationFrozenValue\n              : this.initialValue\n          )\n        }\n\n        return true\n      }\n\n      return false\n    }\n\n    this.duration += delta\n\n    // if we're past the begin time\n    let updated = false\n\n    if (this.begin < this.duration) {\n      let newValue = this.calcValue() // tween\n      const typeAttr = this.getAttribute('type')\n\n      if (typeAttr.hasValue()) {\n        // for transform, etc.\n        const type = typeAttr.getString()\n\n        newValue = `${type}(${newValue})`\n      }\n\n      prop.setValue(newValue)\n      updated = true\n    }\n\n    return updated\n  }\n\n  getProgress(): IProgress {\n    const {\n      document,\n      values\n    } = this\n    let progress = (this.duration - this.begin) / (this.maxDuration - this.begin)\n    let from: Property\n    let to: Property\n\n    if (values.hasValue()) {\n      const p = progress * (values.getValue().length - 1)\n      const lb = Math.floor(p)\n      const ub = Math.ceil(p)\n      let value: string | undefined\n\n      value = values.getValue()[lb]\n      from = new Property(\n        document,\n        'from',\n        value ? parseFloat(value) : 0\n      )\n\n      value = values.getValue()[ub]\n      to = new Property(\n        document,\n        'to',\n        value ? parseFloat(value) : 0\n      )\n\n      progress = (p - lb) / (ub - lb)\n    } else {\n      from = this.from\n      to = this.to\n    }\n\n    return {\n      progress,\n      from,\n      to\n    }\n  }\n}\n", "import RGBColor from 'rgbcolor'\nimport { AnimateElement } from './AnimateElement'\n\nexport class AnimateColorElement extends AnimateElement {\n  override type = 'animateColor'\n\n  override calcValue() {\n    const {\n      progress,\n      from,\n      to\n    } = this.getProgress()\n    const colorFrom = new RGBColor(from.getColor())\n    const colorTo = new RGBColor(to.getColor())\n\n    if (colorFrom.ok && colorTo.ok) {\n      // tween color linearly\n      const r = colorFrom.r + (colorTo.r - colorFrom.r) * progress\n      const g = colorFrom.g + (colorTo.g - colorFrom.g) * progress\n      const b = colorFrom.b + (colorTo.b - colorFrom.b) * progress\n\n      // ? alpha\n      return `rgb(${\n        Math.floor(r)\n      }, ${\n        Math.floor(g)\n      }, ${\n        Math.floor(b)\n      })`\n    }\n\n    return this.getAttribute('from').getColor()\n  }\n}\n", "import { toNumbers } from '../util'\nimport { AnimateElement } from './AnimateElement'\n\nexport class AnimateTransformElement extends AnimateElement {\n  override type = 'animateTransform'\n\n  override calcValue() {\n    const {\n      progress,\n      from,\n      to\n    } = this.getProgress()\n    // tween value linearly\n    const transformFrom = toNumbers(from.getString())\n    const transformTo = toNumbers(to.getString())\n    const newValue = transformFrom.map((from, i) => {\n      const to = transformTo[i]\n\n      return from + (to - from) * progress\n    }).join(' ')\n\n    return newValue\n  }\n}\n", "import { Document } from './Document'\nimport { Element } from './Element'\n\nexport class FontFaceElement extends Element {\n  override type = 'font-face'\n  readonly ascent: number\n  readonly descent: number\n  readonly unitsPerEm: number\n\n  constructor(\n    document: Document,\n    node: HTMLElement,\n    captureTextNodes?: boolean\n  ) {\n    super(document, node, captureTextNodes)\n\n    this.ascent = this.getAttribute('ascent').getNumber()\n    this.descent = this.getAttribute('descent').getNumber()\n    this.unitsPerEm = this.getAttribute('units-per-em').getNumber()\n  }\n}\n", "import { Document } from './Document'\nimport { PathElement } from './PathElement'\n\nexport type ArabicForm = 'isolated' | 'terminal' | 'medial' | 'initial'\n\nexport class GlyphElement extends PathElement {\n  override type = 'glyph'\n  readonly horizAdvX: number\n  readonly unicode: string\n  readonly arabicForm: ArabicForm | undefined\n\n  constructor(\n    document: Document,\n    node: HTMLElement,\n    captureTextNodes?: boolean\n  ) {\n    super(document, node, captureTextNodes)\n\n    this.horizAdvX = this.getAttribute('horiz-adv-x').getNumber()\n    this.unicode = this.getAttribute('unicode').getString()\n    this.arabicForm = this.getAttribute('arabic-form').getString() as ArabicForm\n  }\n}\n", "import { GlyphElement } from './GlyphElement'\n\nexport class MissingGlyphElement extends GlyphElement {\n  override type = 'missing-glyph'\n  override readonly horizAdvX = 0\n}\n", "import { Document } from './Document'\nimport { Element } from './Element'\nimport { FontFaceElement } from './FontFaceElement'\nimport { MissingGlyphElement } from './MissingGlyphElement'\nimport { ArabicForm, GlyphElement } from './GlyphElement'\n\nexport class FontElement extends Element {\n  override type = 'font'\n  readonly isArabic: boolean = false\n  readonly missingGlyph: MissingGlyphElement | undefined\n  readonly glyphs: Map<string, GlyphElement> = new Map()\n  readonly arabicGlyphs: Map<string, Map<ArabicForm, GlyphElement>> = new Map()\n  readonly horizAdvX: number\n  readonly isRTL: boolean = false\n  readonly fontFace: FontFaceElement | undefined\n\n  constructor(\n    document: Document,\n    node: HTMLElement,\n    captureTextNodes?: boolean\n  ) {\n    super(document, node, captureTextNodes)\n\n    this.horizAdvX = this.getAttribute('horiz-adv-x').getNumber()\n\n    const { definitions } = document\n    const { children } = this\n\n    for (const child of children) {\n      if (child instanceof FontFaceElement) {\n        this.fontFace = child\n\n        const fontFamilyStyle = child.getStyle('font-family')\n\n        if (fontFamilyStyle.hasValue()) {\n          definitions.set(fontFamilyStyle.getString(), this)\n        }\n      } else\n      if (child instanceof MissingGlyphElement) {\n        this.missingGlyph = child\n      } else\n      if (child instanceof GlyphElement) {\n        if (child.arabicForm) {\n          this.isRTL = true\n          this.isArabic = true\n\n          let arabicGlyph = this.arabicGlyphs.get(child.unicode)\n\n          if (typeof arabicGlyph === 'undefined') {\n            arabicGlyph = new Map()\n            this.arabicGlyphs.set(child.unicode, arabicGlyph)\n          }\n\n          arabicGlyph.set(child.arabicForm, child)\n        } else {\n          this.glyphs.set(child.unicode, child)\n        }\n      }\n    }\n  }\n\n  override render() {\n    // NO RENDER\n  }\n}\n", "import { TextElement } from './TextElement'\n\nexport class TRefElement extends TextElement {\n  override type = 'tref'\n\n  override getText() {\n    const element = this.getHrefAttribute().getDefinition()\n\n    if (element) {\n      const firstChild = element.children[0] as TextElement\n\n      if (firstChild) {\n        return firstChild.getText()\n      }\n    }\n\n    return ''\n  }\n}\n", "import { RenderingContext2D } from '../types'\nimport { Property } from '../Property'\nimport { Font } from '../Font'\nimport { BoundingBox } from '../BoundingBox'\nimport { Document } from './Document'\nimport { TextElement } from './TextElement'\nimport { GElement } from './GElement'\n\nexport class AElement extends TextElement {\n  override type = 'a'\n  protected readonly hasText: boolean\n  protected readonly text: string\n\n  constructor(\n    document: Document,\n    node: HTMLElement,\n    captureTextNodes?: boolean\n  ) {\n    super(document, node, captureTextNodes)\n\n    const { childNodes } = node\n    const firstChild = childNodes[0]\n    const hasText = childNodes.length > 0\n      && Array.from(childNodes).every(node => node.nodeType === 3)\n\n    this.hasText = hasText\n    this.text = hasText\n      ? this.getTextFromNode(firstChild)\n      : ''\n  }\n\n  override getText() {\n    return this.text\n  }\n\n  override renderChildren(ctx: RenderingContext2D) {\n    if (this.hasText) {\n      // render as text element\n      super.renderChildren(ctx)\n\n      const {\n        document,\n        x,\n        y\n      } = this\n      const { mouse } = document.screen\n      const fontSize = new Property(\n        document,\n        'fontSize',\n        Font.parse(document.ctx.font).fontSize\n      )\n\n      // Do not calc bounding box if mouse is not working.\n      if (mouse.isWorking()) {\n        mouse.checkBoundingBox(\n          this,\n          new BoundingBox(\n            x,\n            y - fontSize.getPixels('y'),\n            x + this.measureText(ctx),\n            y\n          )\n        )\n      }\n    } else\n    if (this.children.length > 0) {\n      // render as temporary group\n      const g = new GElement(this.document)\n\n      g.children = this.children\n      g.parent = this\n      g.render(ctx)\n    }\n  }\n\n  onClick() {\n    const { window } = this.document\n\n    if (window) {\n      window.open(this.getHrefAttribute().getString())\n    }\n  }\n\n  onMouseMove() {\n    const ctx = this.document.ctx as CanvasRenderingContext2D\n\n    ctx.canvas.style.cursor = 'pointer'\n  }\n}\n", "import { RenderingContext2D } from '../types'\nimport {\n  PSEUDO_ZERO,\n  CB1,\n  CB2,\n  CB3,\n  CB4,\n  QB1,\n  QB2,\n  QB3\n} from '../util'\nimport { PathParser, CommandType } from '../PathParser'\nimport { Document } from './Document'\nimport { TextElement } from './TextElement'\nimport { PathElement } from './PathElement'\n\nexport interface IPoint {\n  x: number\n  y: number\n}\n\nexport interface IPathCommand {\n  type: CommandType\n  points: number[]\n  start?: IPoint\n  pathLength: number\n}\n\ninterface ICachedPoint extends IPoint {\n  distance: number\n}\n\ninterface IEquidistantCache {\n  step: number\n  precision: number\n  points: ICachedPoint[]\n}\n\ninterface IGlyphInfo {\n  // transposeX: number;\n  // transposeY: number;\n  text: string\n  rotation: number\n  p0: ICachedPoint\n  p1: ICachedPoint\n}\n\nexport class TextPathElement extends TextElement {\n  override type = 'textPath'\n  protected textWidth = 0\n  protected textHeight = 0\n  protected pathLength = -1\n  protected glyphInfo: IGlyphInfo[] = null\n  protected readonly text: string\n  protected readonly dataArray: IPathCommand[]\n  private letterSpacingCache: number[] = []\n  private equidistantCache: IEquidistantCache\n  private readonly measuresCache = new Map<string, number>([['', 0]])\n\n  constructor(\n    document: Document,\n    node: HTMLElement,\n    captureTextNodes?: boolean\n  ) {\n    super(document, node, captureTextNodes)\n\n    const pathElement = this.getHrefAttribute().getDefinition<PathElement>()\n\n    this.text = this.getTextFromNode()\n    this.dataArray = this.parsePathData(pathElement)\n  }\n\n  override getText() {\n    return this.text\n  }\n\n  path(ctx: RenderingContext2D) {\n    const { dataArray } = this\n\n    if (ctx) {\n      ctx.beginPath()\n    }\n\n    dataArray.forEach(({\n      type,\n      points\n    }) => {\n      switch (type) {\n        case PathParser.LINE_TO:\n\n          if (ctx) {\n            ctx.lineTo(points[0], points[1])\n          }\n\n          break\n\n        case PathParser.MOVE_TO:\n\n          if (ctx) {\n            ctx.moveTo(points[0], points[1])\n          }\n\n          break\n\n        case PathParser.CURVE_TO:\n\n          if (ctx) {\n            ctx.bezierCurveTo(\n              points[0],\n              points[1],\n              points[2],\n              points[3],\n              points[4],\n              points[5]\n            )\n          }\n\n          break\n\n        case PathParser.QUAD_TO:\n\n          if (ctx) {\n            ctx.quadraticCurveTo(\n              points[0],\n              points[1],\n              points[2],\n              points[3]\n            )\n          }\n\n          break\n\n        case PathParser.ARC: {\n          const [\n            cx,\n            cy,\n            rx,\n            ry,\n            theta,\n            dTheta,\n            psi,\n            fs\n          ] = points\n          const r = rx > ry ? rx : ry\n          const scaleX = rx > ry ? 1 : rx / ry\n          const scaleY = rx > ry ? ry / rx : 1\n\n          if (ctx) {\n            ctx.translate(cx, cy)\n            ctx.rotate(psi)\n            ctx.scale(scaleX, scaleY)\n            ctx.arc(0, 0, r, theta, theta + dTheta, Boolean(1 - fs))\n            ctx.scale(1 / scaleX, 1 / scaleY)\n            ctx.rotate(-psi)\n            ctx.translate(-cx, -cy)\n          }\n\n          break\n        }\n\n        case PathParser.CLOSE_PATH:\n\n          if (ctx) {\n            ctx.closePath()\n          }\n\n          break\n\n        default:\n      }\n    })\n  }\n\n  override renderChildren(ctx: RenderingContext2D) {\n    this.setTextData(ctx)\n    ctx.save()\n\n    const textDecoration = this.parent.getStyle('text-decoration').getString()\n    const fontSize = this.getFontSize()\n    const { glyphInfo } = this\n    const fill = ctx.fillStyle\n\n    if (textDecoration === 'underline') {\n      ctx.beginPath()\n    }\n\n    glyphInfo.forEach((glyph, i) => {\n      const {\n        p0,\n        p1,\n        rotation,\n        text: partialText\n      } = glyph\n\n      ctx.save()\n      ctx.translate(p0.x, p0.y)\n      ctx.rotate(rotation)\n\n      if (ctx.fillStyle) {\n        ctx.fillText(partialText, 0, 0)\n      }\n\n      if (ctx.strokeStyle) {\n        ctx.strokeText(partialText, 0, 0)\n      }\n\n      ctx.restore()\n\n      if (textDecoration === 'underline') {\n        if (i === 0) {\n          ctx.moveTo(p0.x, p0.y + fontSize / 8)\n        }\n\n        ctx.lineTo(p1.x, p1.y + fontSize / 5)\n      }\n\n      // // To assist with debugging visually, uncomment following\n      //\n      // ctx.beginPath();\n      // if (i % 2)\n      //   ctx.strokeStyle = 'red';\n      // else\n      //   ctx.strokeStyle = 'green';\n      // ctx.moveTo(p0.x, p0.y);\n      // ctx.lineTo(p1.x, p1.y);\n      // ctx.stroke();\n      // ctx.closePath();\n    })\n\n    if (textDecoration === 'underline') {\n      ctx.lineWidth = fontSize / 20\n      ctx.strokeStyle = fill\n      ctx.stroke()\n      ctx.closePath()\n    }\n\n    ctx.restore()\n  }\n\n  protected getLetterSpacingAt(idx = 0) {\n    return this.letterSpacingCache[idx] || 0\n  }\n\n  protected findSegmentToFitChar(\n    ctx: RenderingContext2D,\n    anchor: string,\n    textFullWidth: number,\n    fullPathWidth: number,\n    spacesNumber: number,\n    inputOffset: number,\n    dy: number,\n    c: string,\n    charI: number\n  ) {\n    let offset = inputOffset\n    let glyphWidth = this.measureText(ctx, c)\n\n    if (c === ' '\n      && anchor === 'justify'\n      && textFullWidth < fullPathWidth\n    ) {\n      glyphWidth += (fullPathWidth - textFullWidth) / spacesNumber\n    }\n\n    if (charI > -1) {\n      offset += this.getLetterSpacingAt(charI)\n    }\n\n    const splineStep = this.textHeight / 20\n    const p0 = this.getEquidistantPointOnPath(offset, splineStep, 0)\n    const p1 = this.getEquidistantPointOnPath(offset + glyphWidth, splineStep, 0)\n    const segment = {\n      p0,\n      p1\n    }\n    const rotation = p0 && p1\n      ? Math.atan2(\n        p1.y - p0.y,\n        p1.x - p0.x\n      )\n      : 0\n\n    if (dy) {\n      const dyX = Math.cos(Math.PI / 2 + rotation) * dy\n      const dyY = Math.cos(-rotation) * dy\n\n      segment.p0 = {\n        ...p0,\n        x: p0.x + dyX,\n        y: p0.y + dyY\n      }\n      segment.p1 = {\n        ...p1,\n        x: p1.x + dyX,\n        y: p1.y + dyY\n      }\n    }\n\n    offset += glyphWidth\n\n    return {\n      offset,\n      segment,\n      rotation\n    }\n  }\n\n  protected override measureText(\n    ctx: RenderingContext2D,\n    text?: string\n  ) {\n    const { measuresCache } = this\n    const targetText = text || this.getText()\n\n    if (measuresCache.has(targetText)) {\n      return measuresCache.get(targetText)\n    }\n\n    const measure = this.measureTargetText(ctx, targetText)\n\n    measuresCache.set(targetText, measure)\n\n    return measure\n  }\n\n  // This method supposes what all custom fonts already loaded.\n  // If some font will be loaded after this method call, <textPath> will not be rendered correctly.\n  // You need to call this method manually to update glyphs cache.\n  protected setTextData(ctx: RenderingContext2D) {\n    if (this.glyphInfo) {\n      return\n    }\n\n    const renderText = this.getText()\n    const chars = renderText.split('')\n    const spacesNumber = renderText.split(' ').length - 1\n    const dx = this.parent.getAttribute('dx').split().map(_ => _.getPixels('x'))\n    const dy = this.parent.getAttribute('dy').getPixels('y')\n    const anchor = this.parent.getStyle('text-anchor').getString('start')\n    const thisSpacing = this.getStyle('letter-spacing')\n    const parentSpacing = this.parent.getStyle('letter-spacing')\n    let letterSpacing = 0\n\n    if (!thisSpacing.hasValue()\n      || thisSpacing.getValue() === 'inherit'\n    ) {\n      letterSpacing = parentSpacing.getPixels()\n    } else\n    if (thisSpacing.hasValue()) {\n      if (thisSpacing.getValue() !== 'initial'\n        && thisSpacing.getValue() !== 'unset'\n      ) {\n        letterSpacing = thisSpacing.getPixels()\n      }\n    }\n\n    // fill letter-spacing cache\n    const letterSpacingCache: number[] = []\n    const textLen = renderText.length\n\n    this.letterSpacingCache = letterSpacingCache\n\n    for (let i = 0; i < textLen; i++) {\n      letterSpacingCache.push(\n        typeof dx[i] !== 'undefined'\n          ? dx[i]\n          : letterSpacing\n      )\n    }\n\n    const dxSum = letterSpacingCache.reduce(\n      (acc, cur, i) => (\n        i === 0\n          ? 0\n          : acc + cur || 0\n      ),\n      0\n    )\n    const textWidth = this.measureText(ctx)\n    const textFullWidth = Math.max(textWidth + dxSum, 0)\n\n    this.textWidth = textWidth\n    this.textHeight = this.getFontSize()\n    this.glyphInfo = []\n\n    const fullPathWidth = this.getPathLength()\n    const startOffset = this.getStyle('startOffset').getNumber(0) * fullPathWidth\n    let offset = 0\n\n    if (anchor === 'middle'\n      || anchor === 'center'\n    ) {\n      offset = -textFullWidth / 2\n    }\n\n    if (anchor === 'end'\n      || anchor === 'right'\n    ) {\n      offset = -textFullWidth\n    }\n\n    offset += startOffset\n\n    chars.forEach((char, i) => {\n      // Find such segment what distance between p0 and p1 is approx. width of glyph\n      const {\n        offset: nextOffset,\n        segment,\n        rotation\n      } = this.findSegmentToFitChar(\n        ctx,\n        anchor,\n        textFullWidth,\n        fullPathWidth,\n        spacesNumber,\n        offset,\n        dy,\n        char,\n        i\n      )\n\n      offset = nextOffset\n\n      if (!segment.p0 || !segment.p1) {\n        return\n      }\n\n      // const width = this.getLineLength(\n      //   segment.p0.x,\n      //   segment.p0.y,\n      //   segment.p1.x,\n      //   segment.p1.y\n      // );\n      // Note: Since glyphs are rendered one at a time, any kerning pair data built into the font will not be used.\n      // Can foresee having a rough pair table built in that the developer can override as needed.\n      // Or use \"dx\" attribute of the <text> node as a naive replacement\n      // const kern = 0;\n      // placeholder for future implementation\n      // const midpoint = this.getPointOnLine(\n      //   kern + width / 2.0,\n      //   segment.p0.x, segment.p0.y, segment.p1.x, segment.p1.y\n      // );\n\n      this.glyphInfo.push({\n        // transposeX: midpoint.x,\n        // transposeY: midpoint.y,\n        text: chars[i],\n        p0: segment.p0,\n        p1: segment.p1,\n        rotation\n      })\n    })\n  }\n\n  protected parsePathData(path: PathElement) {\n    this.pathLength = -1 // reset path length\n\n    if (!path) {\n      return []\n    }\n\n    const pathCommands: IPathCommand[] = []\n    const { pathParser } = path\n\n    pathParser.reset()\n\n    // convert l, H, h, V, and v to L\n    while (!pathParser.isEnd()) {\n      const { current } = pathParser\n      const startX = current ? current.x : 0\n      const startY = current ? current.y : 0\n      const command = pathParser.next()\n      let nextCommandType: CommandType = command.type\n      let points: number[] = []\n\n      switch (command.type) {\n        case PathParser.MOVE_TO:\n          this.pathM(pathParser, points)\n          break\n\n        case PathParser.LINE_TO:\n          nextCommandType = this.pathL(pathParser, points)\n          break\n\n        case PathParser.HORIZ_LINE_TO:\n          nextCommandType = this.pathH(pathParser, points)\n          break\n\n        case PathParser.VERT_LINE_TO:\n          nextCommandType = this.pathV(pathParser, points)\n          break\n\n        case PathParser.CURVE_TO:\n          this.pathC(pathParser, points)\n          break\n\n        case PathParser.SMOOTH_CURVE_TO:\n          nextCommandType = this.pathS(pathParser, points)\n          break\n\n        case PathParser.QUAD_TO:\n          this.pathQ(pathParser, points)\n          break\n\n        case PathParser.SMOOTH_QUAD_TO:\n          nextCommandType = this.pathT(pathParser, points)\n          break\n\n        case PathParser.ARC:\n          points = this.pathA(pathParser)\n          break\n\n        case PathParser.CLOSE_PATH:\n          PathElement.pathZ(pathParser)\n          break\n\n        default:\n      }\n\n      if (command.type !== PathParser.CLOSE_PATH) {\n        pathCommands.push({\n          type: nextCommandType,\n          points,\n          start: {\n            x: startX,\n            y: startY\n          },\n          pathLength: this.calcLength(startX, startY, nextCommandType, points)\n        })\n      } else {\n        pathCommands.push({\n          type: PathParser.CLOSE_PATH,\n          points: [],\n          pathLength: 0\n        })\n      }\n    }\n\n    return pathCommands\n  }\n\n  protected pathM(\n    pathParser: PathParser,\n    points: number[]\n  ) {\n    const {\n      x,\n      y\n    } = PathElement.pathM(pathParser).point\n\n    points.push(x, y)\n  }\n\n  protected pathL(\n    pathParser: PathParser,\n    points: number[]\n  ) {\n    const {\n      x,\n      y\n    } = PathElement.pathL(pathParser).point\n\n    points.push(x, y)\n\n    return PathParser.LINE_TO\n  }\n\n  protected pathH(\n    pathParser: PathParser,\n    points: number[]\n  ) {\n    const {\n      x,\n      y\n    } = PathElement.pathH(pathParser).point\n\n    points.push(x, y)\n\n    return PathParser.LINE_TO\n  }\n\n  protected pathV(\n    pathParser: PathParser,\n    points: number[]\n  ) {\n    const {\n      x,\n      y\n    } = PathElement.pathV(pathParser).point\n\n    points.push(x, y)\n\n    return PathParser.LINE_TO\n  }\n\n  protected pathC(\n    pathParser: PathParser,\n    points: number[]\n  ) {\n    const {\n      point,\n      controlPoint,\n      currentPoint\n    } = PathElement.pathC(pathParser)\n\n    points.push(\n      point.x,\n      point.y,\n      controlPoint.x,\n      controlPoint.y,\n      currentPoint.x,\n      currentPoint.y\n    )\n  }\n\n  protected pathS(\n    pathParser: PathParser,\n    points: number[]\n  ) {\n    const {\n      point,\n      controlPoint,\n      currentPoint\n    } = PathElement.pathS(pathParser)\n\n    points.push(\n      point.x,\n      point.y,\n      controlPoint.x,\n      controlPoint.y,\n      currentPoint.x,\n      currentPoint.y\n    )\n\n    return PathParser.CURVE_TO\n  }\n\n  protected pathQ(\n    pathParser: PathParser,\n    points: number[]\n  ) {\n    const {\n      controlPoint,\n      currentPoint\n    } = PathElement.pathQ(pathParser)\n\n    points.push(\n      controlPoint.x,\n      controlPoint.y,\n      currentPoint.x,\n      currentPoint.y\n    )\n  }\n\n  protected pathT(\n    pathParser: PathParser,\n    points: number[]\n  ) {\n    const {\n      controlPoint,\n      currentPoint\n    } = PathElement.pathT(pathParser)\n\n    points.push(\n      controlPoint.x,\n      controlPoint.y,\n      currentPoint.x,\n      currentPoint.y\n    )\n\n    return PathParser.QUAD_TO\n  }\n\n  protected pathA(\n    pathParser: PathParser\n  ) {\n    let {\n      rX,\n      rY,\n      sweepFlag,\n      xAxisRotation,\n      centp,\n      a1,\n      ad\n    } = PathElement.pathA(pathParser)\n\n    if (sweepFlag === 0 && ad > 0) {\n      ad -= 2 * Math.PI\n    }\n\n    if (sweepFlag === 1 && ad < 0) {\n      ad += 2 * Math.PI\n    }\n\n    return [\n      centp.x,\n      centp.y,\n      rX,\n      rY,\n      a1,\n      ad,\n      xAxisRotation,\n      sweepFlag\n    ]\n  }\n\n  protected calcLength(\n    x: number,\n    y: number,\n    commandType: CommandType,\n    points: number[]\n  ) {\n    let len = 0\n    let p1: IPoint = null\n    let p2: IPoint = null\n    let t = 0\n\n    switch (commandType) {\n      case PathParser.LINE_TO:\n        return this.getLineLength(x, y, points[0], points[1])\n\n      case PathParser.CURVE_TO:\n        // Approximates by breaking curve into 100 line segments\n        len = 0.0\n        p1 = this.getPointOnCubicBezier(\n          0,\n          x,\n          y,\n          points[0],\n          points[1],\n          points[2],\n          points[3],\n          points[4],\n          points[5]\n        )\n\n        for (t = 0.01; t <= 1; t += 0.01) {\n          p2 = this.getPointOnCubicBezier(\n            t,\n            x,\n            y,\n            points[0],\n            points[1],\n            points[2],\n            points[3],\n            points[4],\n            points[5]\n          )\n          len += this.getLineLength(p1.x, p1.y, p2.x, p2.y)\n          p1 = p2\n        }\n\n        return len\n\n      case PathParser.QUAD_TO:\n        // Approximates by breaking curve into 100 line segments\n        len = 0.0\n        p1 = this.getPointOnQuadraticBezier(\n          0,\n          x,\n          y,\n          points[0],\n          points[1],\n          points[2],\n          points[3]\n        )\n\n        for (t = 0.01; t <= 1; t += 0.01) {\n          p2 = this.getPointOnQuadraticBezier(\n            t,\n            x,\n            y,\n            points[0],\n            points[1],\n            points[2],\n            points[3]\n          )\n          len += this.getLineLength(\n            p1.x,\n            p1.y,\n            p2.x,\n            p2.y\n          )\n          p1 = p2\n        }\n\n        return len\n\n      case PathParser.ARC: {\n        // Approximates by breaking curve into line segments\n        len = 0.0\n\n        const start = points[4]\n        // 4 = theta\n        const dTheta = points[5]\n        // 5 = dTheta\n        const end = points[4] + dTheta\n        let inc = Math.PI / 180.0\n\n        // 1 degree resolution\n        if (Math.abs(start - end) < inc) {\n          inc = Math.abs(start - end)\n        }\n\n        // Note: for purpose of calculating arc length, not going to worry about rotating X-axis by angle psi\n        p1 = this.getPointOnEllipticalArc(\n          points[0],\n          points[1],\n          points[2],\n          points[3],\n          start,\n          0\n        )\n\n        if (dTheta < 0) { // clockwise\n          for (t = start - inc; t > end; t -= inc) {\n            p2 = this.getPointOnEllipticalArc(\n              points[0],\n              points[1],\n              points[2],\n              points[3],\n              t,\n              0\n            )\n            len += this.getLineLength(p1.x, p1.y, p2.x, p2.y)\n            p1 = p2\n          }\n        } else { // counter-clockwise\n          for (t = start + inc; t < end; t += inc) {\n            p2 = this.getPointOnEllipticalArc(\n              points[0],\n              points[1],\n              points[2],\n              points[3],\n              t,\n              0\n            )\n            len += this.getLineLength(p1.x, p1.y, p2.x, p2.y)\n            p1 = p2\n          }\n        }\n\n        p2 = this.getPointOnEllipticalArc(\n          points[0],\n          points[1],\n          points[2],\n          points[3],\n          end,\n          0\n        )\n        len += this.getLineLength(p1.x, p1.y, p2.x, p2.y)\n\n        return len\n      }\n\n      default:\n    }\n\n    return 0\n  }\n\n  protected getPointOnLine(\n    dist: number,\n    p1x: number,\n    p1y: number,\n    p2x: number,\n    p2y: number,\n    fromX = p1x,\n    fromY = p1y\n  ) {\n    const m = (p2y - p1y) / ((p2x - p1x) + PSEUDO_ZERO)\n    let run = Math.sqrt(dist * dist / (1 + m * m))\n\n    if (p2x < p1x) {\n      run *= -1\n    }\n\n    let rise = m * run\n    let pt: IPoint = null\n\n    if (p2x === p1x) { // vertical line\n      pt = {\n        x: fromX,\n        y: fromY + rise\n      }\n    } else\n    if ((fromY - p1y) / ((fromX - p1x) + PSEUDO_ZERO) === m) {\n      pt = {\n        x: fromX + run,\n        y: fromY + rise\n      }\n    } else {\n      let ix = 0\n      let iy = 0\n      const len = this.getLineLength(p1x, p1y, p2x, p2y)\n\n      if (len < PSEUDO_ZERO) {\n        return null\n      }\n\n      let u =\n        ((fromX - p1x) * (p2x - p1x))\n        + ((fromY - p1y) * (p2y - p1y))\n\n      u /= len * len\n      ix = p1x + u * (p2x - p1x)\n      iy = p1y + u * (p2y - p1y)\n\n      const pRise = this.getLineLength(fromX, fromY, ix, iy)\n      const pRun = Math.sqrt(dist * dist - pRise * pRise)\n\n      run = Math.sqrt(pRun * pRun / (1 + m * m))\n\n      if (p2x < p1x) {\n        run *= -1\n      }\n\n      rise = m * run\n      pt = {\n        x: ix + run,\n        y: iy + rise\n      }\n    }\n\n    return pt\n  }\n\n  protected getPointOnPath(distance: number) {\n    const fullLen = this.getPathLength()\n    let cumulativePathLength = 0\n    let p: IPoint = null\n\n    if (distance < -0.00005\n      || distance - 0.00005 > fullLen\n    ) {\n      return null\n    }\n\n    const { dataArray } = this\n\n    for (const command of dataArray) {\n      if (command\n        && (\n          command.pathLength < 0.00005\n          || cumulativePathLength + command.pathLength + 0.00005 < distance\n        )\n      ) {\n        cumulativePathLength += command.pathLength\n        continue\n      }\n\n      const delta = distance - cumulativePathLength\n      let currentT = 0\n\n      switch (command.type) {\n        case PathParser.LINE_TO:\n          p = this.getPointOnLine(\n            delta,\n            command.start.x,\n            command.start.y,\n            command.points[0],\n            command.points[1],\n            command.start.x,\n            command.start.y\n          )\n          break\n\n        case PathParser.ARC: {\n          const start = command.points[4]\n          // 4 = theta\n          const dTheta = command.points[5]\n          // 5 = dTheta\n          const end = command.points[4] + dTheta\n\n          currentT = start + delta / command.pathLength * dTheta\n\n          if (dTheta < 0 && currentT < end\n            || dTheta >= 0 && currentT > end\n          ) {\n            break\n          }\n\n          p = this.getPointOnEllipticalArc(\n            command.points[0],\n            command.points[1],\n            command.points[2],\n            command.points[3],\n            currentT,\n            command.points[6]\n          )\n          break\n        }\n\n        case PathParser.CURVE_TO:\n\n          currentT = delta / command.pathLength\n\n          if (currentT > 1) {\n            currentT = 1\n          }\n\n          p = this.getPointOnCubicBezier(\n            currentT,\n            command.start.x,\n            command.start.y,\n            command.points[0],\n            command.points[1],\n            command.points[2],\n            command.points[3],\n            command.points[4],\n            command.points[5]\n          )\n          break\n\n        case PathParser.QUAD_TO:\n\n          currentT = delta / command.pathLength\n\n          if (currentT > 1) {\n            currentT = 1\n          }\n\n          p = this.getPointOnQuadraticBezier(\n            currentT,\n            command.start.x,\n            command.start.y,\n            command.points[0],\n            command.points[1],\n            command.points[2],\n            command.points[3]\n          )\n          break\n\n        default:\n      }\n\n      if (p) {\n        return p\n      }\n\n      break\n    }\n\n    return null\n  }\n\n  protected getLineLength(\n    x1: number,\n    y1: number,\n    x2: number,\n    y2: number\n  ) {\n    return Math.sqrt(\n      (x2 - x1) * (x2 - x1)\n      + (y2 - y1) * (y2 - y1)\n    )\n  }\n\n  protected getPathLength() {\n    if (this.pathLength === -1) {\n      this.pathLength = this.dataArray.reduce<number>(\n        (length, command: IPathCommand) => (\n          command.pathLength > 0\n            ? length + command.pathLength\n            : length\n        ),\n        0\n      )\n    }\n\n    return this.pathLength\n  }\n\n  protected getPointOnCubicBezier(\n    pct: number,\n    p1x: number,\n    p1y: number,\n    p2x: number,\n    p2y: number,\n    p3x: number,\n    p3y: number,\n    p4x: number,\n    p4y: number\n  ): IPoint {\n    const x = p4x * CB1(pct) + p3x * CB2(pct) + p2x * CB3(pct) + p1x * CB4(pct)\n    const y = p4y * CB1(pct) + p3y * CB2(pct) + p2y * CB3(pct) + p1y * CB4(pct)\n\n    return {\n      x,\n      y\n    }\n  }\n\n  protected getPointOnQuadraticBezier(\n    pct: number,\n    p1x: number,\n    p1y: number,\n    p2x: number,\n    p2y: number,\n    p3x: number,\n    p3y: number\n  ): IPoint {\n    const x = p3x * QB1(pct) + p2x * QB2(pct) + p1x * QB3(pct)\n    const y = p3y * QB1(pct) + p2y * QB2(pct) + p1y * QB3(pct)\n\n    return {\n      x,\n      y\n    }\n  }\n\n  protected getPointOnEllipticalArc(\n    cx: number,\n    cy: number,\n    rx: number,\n    ry: number,\n    theta: number,\n    psi: number\n  ): IPoint {\n    const cosPsi = Math.cos(psi)\n    const sinPsi = Math.sin(psi)\n    const pt = {\n      x: rx * Math.cos(theta),\n      y: ry * Math.sin(theta)\n    }\n\n    return {\n      x: cx + (pt.x * cosPsi - pt.y * sinPsi),\n      y: cy + (pt.x * sinPsi + pt.y * cosPsi)\n    }\n  }\n\n  // TODO need some optimisations. possibly build cache only for curved segments?\n  protected buildEquidistantCache(\n    inputStep: number,\n    inputPrecision: number\n  ) {\n    const fullLen = this.getPathLength()\n    const precision = inputPrecision || 0.25 // accuracy vs performance\n    const step = inputStep || fullLen / 100\n\n    if (!this.equidistantCache\n      || this.equidistantCache.step !== step\n      || this.equidistantCache.precision !== precision\n    ) {\n      // Prepare cache\n      this.equidistantCache = {\n        step,\n        precision,\n        points: []\n      }\n\n      // Calculate points\n      let s = 0\n\n      for (let l = 0; l <= fullLen; l += precision) {\n        const p0 = this.getPointOnPath(l)\n        const p1 = this.getPointOnPath(l + precision)\n\n        if (!p0 || !p1) {\n          continue\n        }\n\n        s += this.getLineLength(p0.x, p0.y, p1.x, p1.y)\n\n        if (s >= step) {\n          this.equidistantCache.points.push({\n            x: p0.x,\n            y: p0.y,\n            distance: l\n          })\n          s -= step\n        }\n      }\n    }\n  }\n\n  protected getEquidistantPointOnPath(\n    targetDistance: number,\n    step?: number,\n    precision?: number\n  ) {\n    this.buildEquidistantCache(step, precision)\n\n    if (targetDistance < 0\n      || targetDistance - this.getPathLength() > 0.00005\n    ) {\n      return null\n    }\n\n    const idx = Math.round(\n      targetDistance\n      / this.getPathLength()\n      * (this.equidistantCache.points.length - 1)\n    )\n\n    return this.equidistantCache.points[idx] || null\n  }\n}\n", "import { RenderingContext2D } from '../types'\nimport { BoundingBox } from '../BoundingBox'\nimport { Document } from './Document'\nimport { RenderedElement } from './RenderedElement'\n\n// groups: 1: mime-type (+ charset), 2: mime-type (w/o charset), 3: charset, 4: base64?, 5: body\nconst dataUriRegex = /^\\s*data:(([^/,;]+\\/[^/,;]+)(?:;([^,;=]+=[^,;=]+))?)?(?:;(base64))?,(.*)$/i\n\nexport class ImageElement extends RenderedElement {\n  override type = 'image'\n  loaded = false\n  protected image: CanvasImageSource | string | undefined\n\n  constructor(\n    document: Document,\n    node: HTMLElement,\n    captureTextNodes?: boolean\n  ) {\n    super(document, node, captureTextNodes)\n\n    const href = this.getHrefAttribute().getString()\n\n    if (!href) {\n      return\n    }\n\n    const isSvg = href.endsWith('.svg') || /^\\s*data:image\\/svg\\+xml/i.test(href)\n\n    document.images.push(this)\n\n    if (!isSvg) {\n      void this.loadImage(href)\n    } else {\n      void this.loadSvg(href)\n    }\n  }\n\n  protected async loadImage(href: string) {\n    try {\n      const image = await this.document.createImage(href)\n\n      this.image = image\n    } catch (err) {\n      console.error(`Error while loading image \"${href}\":`, err)\n    }\n\n    this.loaded = true\n  }\n\n  protected async loadSvg(href: string) {\n    const match = dataUriRegex.exec(href)\n\n    if (match) {\n      const data = match[5]\n\n      if (data) {\n        if (match[4] === 'base64') {\n          this.image = atob(data)\n        } else {\n          this.image = decodeURIComponent(data)\n        }\n      }\n    } else {\n      try {\n        const response = await this.document.fetch(href)\n        const svg = await response.text()\n\n        this.image = svg\n      } catch (err) {\n        console.error(`Error while loading image \"${href}\":`, err)\n      }\n    }\n\n    this.loaded = true\n  }\n\n  override renderChildren(ctx: RenderingContext2D) {\n    const {\n      document,\n      image,\n      loaded\n    } = this\n    const x = this.getAttribute('x').getPixels('x')\n    const y = this.getAttribute('y').getPixels('y')\n    const width = this.getStyle('width').getPixels('x')\n    const height = this.getStyle('height').getPixels('y')\n\n    if (!loaded || !image\n      || !width || !height\n    ) {\n      return\n    }\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    if (typeof image === 'string') {\n      const subDocument = document.canvg.forkString(\n        ctx,\n        image,\n        {\n          ignoreMouse: true,\n          ignoreAnimation: true,\n          ignoreDimensions: true,\n          ignoreClear: true,\n          offsetX: 0,\n          offsetY: 0,\n          scaleWidth: width,\n          scaleHeight: height\n        }\n      )\n      const { documentElement } = subDocument.document\n\n      if (documentElement) {\n        documentElement.parent = this\n      }\n\n      void subDocument.render()\n    } else {\n      document.setViewBox({\n        ctx,\n        aspectRatio: this.getAttribute('preserveAspectRatio').getString(),\n        width,\n        desiredWidth: image.width as number,\n        height,\n        desiredHeight: image.height as number\n      })\n\n      if (this.loaded) {\n        if (!('complete' in image) || image.complete) {\n          ctx.drawImage(image, 0, 0)\n        }\n      }\n    }\n\n    ctx.restore()\n  }\n\n  getBoundingBox() {\n    const x = this.getAttribute('x').getPixels('x')\n    const y = this.getAttribute('y').getPixels('y')\n    const width = this.getStyle('width').getPixels('x')\n    const height = this.getStyle('height').getPixels('y')\n\n    return new BoundingBox(x, y, x + width, y + height)\n  }\n}\n", "import { RenderingContext2D } from '../types'\nimport { RenderedElement } from './RenderedElement'\n\nexport class SymbolElement extends RenderedElement {\n  override type = 'symbol'\n\n  override render(_: RenderingContext2D) {\n    // NO RENDER\n  }\n}\n", "import { Document } from './Document'\n\nexport class SVGFontLoader {\n  loaded = false\n\n  constructor(\n    private readonly document: Document\n  ) {\n    document.fonts.push(this)\n  }\n\n  async load(fontFamily: string, url: string) {\n    try {\n      const { document } = this\n      const svgDocument = await document.canvg.parser.load(url)\n      const fonts = svgDocument.getElementsByTagName('font')\n\n      Array.from(fonts).forEach((fontNode: HTMLElement) => {\n        const font = document.createElement(fontNode)\n\n        document.definitions.set(fontFamily, font)\n      })\n    } catch (err) {\n      console.error(`Error while loading font \"${url}\":`, err)\n    }\n\n    this.loaded = true\n  }\n}\n", "import {\n  compressSpaces,\n  getSelectorSpecificity,\n  parseExternalUrl\n} from '../util'\nimport { Property } from '../Property'\nimport { SVGFontLoader } from '../SVGFontLoader'\nimport { Document } from './Document'\nimport { Element } from './Element'\n\nexport class StyleElement extends Element {\n  static readonly parseExternalUrl = parseExternalUrl\n\n  override type = 'style'\n\n  constructor(\n    document: Document,\n    node: HTMLElement,\n    captureTextNodes?: boolean\n  ) {\n    super(document, node, captureTextNodes)\n\n    const css = compressSpaces(\n      Array.from(node.childNodes)\n      // NEED TEST\n        .map(_ => _.textContent)\n        .join('')\n        .replace(/(\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*+\\/)|(^[\\s]*\\/\\/.*)/gm, '') // remove comments\n        .replace(/@import.*;/g, '') // remove imports\n    )\n    const cssDefs = css.split('}')\n\n    cssDefs.forEach((_) => {\n      const def = _.trim()\n\n      if (!def) {\n        return\n      }\n\n      const cssParts = def.split('{')\n      const cssClasses = cssParts[0].split(',')\n      const cssProps = cssParts[1].split(';')\n\n      cssClasses.forEach((_) => {\n        const cssClass = _.trim()\n\n        if (!cssClass) {\n          return\n        }\n\n        const props = document.styles.get(cssClass) || new Map<string, Property>()\n\n        cssProps.forEach((cssProp) => {\n          const prop = cssProp.indexOf(':')\n          const name = cssProp.substr(0, prop).trim()\n          const value = cssProp.substr(prop + 1, cssProp.length - prop).trim()\n\n          if (name && value) {\n            props.set(name, new Property(document, name, value))\n          }\n        })\n\n        document.styles.set(cssClass, props)\n        document.stylesSpecificity.set(cssClass, getSelectorSpecificity(cssClass))\n\n        if (cssClass === '@font-face') { //  && !nodeEnv\n          const fontFamily = props.get('font-family').getString().replace(/\"|'/g, '')\n          const srcs = props.get('src').getString().split(',')\n\n          srcs.forEach((src) => {\n            if (src.indexOf('format(\"svg\")') > 0) {\n              const url = parseExternalUrl(src)\n\n              if (url) {\n                void new SVGFontLoader(document).load(fontFamily, url)\n              }\n            }\n          })\n        }\n      })\n    })\n  }\n}\n", "import { RenderingContext2D } from '../types'\nimport { Property } from '../Property'\nimport { Transform } from '../Transform'\nimport { RenderedElement } from './RenderedElement'\nimport { PathElement } from './PathElement'\nimport { SVGElement } from './SVGElement'\n\nexport class UseElement extends RenderedElement {\n  override type = 'use'\n  private cachedElement: PathElement | undefined\n\n  override setContext(ctx: RenderingContext2D) {\n    super.setContext(ctx)\n\n    const xAttr = this.getAttribute('x')\n    const yAttr = this.getAttribute('y')\n\n    if (xAttr.hasValue()) {\n      ctx.translate(xAttr.getPixels('x'), 0)\n    }\n\n    if (yAttr.hasValue()) {\n      ctx.translate(0, yAttr.getPixels('y'))\n    }\n  }\n\n  path(ctx: RenderingContext2D) {\n    const { element } = this\n\n    if (element) {\n      element.path(ctx)\n    }\n  }\n\n  override renderChildren(ctx: RenderingContext2D) {\n    const {\n      document,\n      element\n    } = this\n\n    if (element) {\n      let tempSvg: RenderedElement = element\n\n      if (element.type === 'symbol') {\n        // render me using a temporary svg element in symbol cases (http://www.w3.org/TR/SVG/struct.html#UseElement)\n        tempSvg = new SVGElement(document)\n        tempSvg.attributes.set('viewBox', new Property(\n          document,\n          'viewBox',\n          element.getAttribute('viewBox').getString()\n        ))\n        tempSvg.attributes.set('preserveAspectRatio', new Property(\n          document,\n          'preserveAspectRatio',\n          element.getAttribute('preserveAspectRatio').getString()\n        ))\n        tempSvg.attributes.set('overflow', new Property(\n          document,\n          'overflow',\n          element.getAttribute('overflow').getString()\n        ))\n        tempSvg.children = element.children\n\n        // element is still the parent of the children\n        element.styles.set('opacity', new Property(\n          document,\n          'opacity',\n          this.calculateOpacity()\n        ))\n      }\n\n      if (tempSvg.type === 'svg') {\n        const widthStyle = this.getStyle('width', false, true)\n        const heightStyle = this.getStyle('height', false, true)\n\n        // if symbol or svg, inherit width/height from me\n        if (widthStyle.hasValue()) {\n          tempSvg.attributes.set('width', new Property(\n            document,\n            'width',\n            widthStyle.getString()\n          ))\n        }\n\n        if (heightStyle.hasValue()) {\n          tempSvg.attributes.set('height', new Property(\n            document,\n            'height',\n            heightStyle.getString()\n          ))\n        }\n      }\n\n      const oldParent = tempSvg.parent\n\n      tempSvg.parent = this\n      tempSvg.render(ctx)\n      tempSvg.parent = oldParent\n    }\n  }\n\n  getBoundingBox(ctx: CanvasRenderingContext2D) {\n    const { element } = this\n\n    if (element) {\n      return element.getBoundingBox(ctx)\n    }\n\n    return null\n  }\n\n  elementTransform() {\n    const {\n      document,\n      element\n    } = this\n\n    if (!element) {\n      return null\n    }\n\n    return Transform.fromElement(document, element)\n  }\n\n  protected get element() {\n    if (!this.cachedElement) {\n      this.cachedElement = this.getHrefAttribute().getDefinition()\n    }\n\n    return this.cachedElement\n  }\n}\n", "import { RenderingContext2D } from '../types'\nimport { toNumbers } from '../util'\nimport { Document } from './Document'\nimport { Element } from './Element'\n\nfunction imGet(\n  img: Uint8ClampedArray,\n  x: number,\n  y: number,\n  width: number,\n  _height: number,\n  rgba: number\n) {\n  return img[y * width * 4 + x * 4 + rgba]\n}\n\nfunction imSet(\n  img: Uint8ClampedArray,\n  x: number,\n  y: number,\n  width: number,\n  _height: number,\n  rgba: number,\n  val: number\n) {\n  img[y * width * 4 + x * 4 + rgba] = val\n}\n\nfunction m(\n  matrix: number[],\n  i: number,\n  v: number\n) {\n  const mi = matrix[i]\n\n  return mi * v\n}\n\nfunction c(\n  a: number,\n  m1: number,\n  m2: number,\n  m3: number\n) {\n  return m1 + Math.cos(a) * m2 + Math.sin(a) * m3\n}\n\nexport class FeColorMatrixElement extends Element {\n  override type = 'feColorMatrix'\n  protected readonly matrix: number[]\n  protected readonly includeOpacity: boolean\n\n  constructor(\n    document: Document,\n    node: HTMLElement,\n    captureTextNodes?: boolean\n  ) {\n    super(document, node, captureTextNodes)\n\n    let matrix = toNumbers(this.getAttribute('values').getString())\n\n    switch (this.getAttribute('type').getString('matrix')) { // http://www.w3.org/TR/SVG/filters.html#feColorMatrixElement\n      case 'saturate': {\n        const s = matrix[0]\n\n        /* eslint-disable array-element-newline */\n        matrix = [\n          0.213 + 0.787 * s, 0.715 - 0.715 * s, 0.072 - 0.072 * s, 0, 0,\n          0.213 - 0.213 * s, 0.715 + 0.285 * s, 0.072 - 0.072 * s, 0, 0,\n          0.213 - 0.213 * s, 0.715 - 0.715 * s, 0.072 + 0.928 * s, 0, 0,\n          0, 0, 0, 1, 0,\n          0, 0, 0, 0, 1\n        ]\n        /* eslint-enable array-element-newline */\n        break\n      }\n\n      case 'hueRotate': {\n        const a = matrix[0] * Math.PI / 180.0\n\n        /* eslint-disable array-element-newline */\n        matrix = [\n          c(a, 0.213, 0.787, -0.213), c(a, 0.715, -0.715, -0.715), c(a, 0.072, -0.072, 0.928), 0, 0,\n          c(a, 0.213, -0.213, 0.143), c(a, 0.715, 0.285, 0.140), c(a, 0.072, -0.072, -0.283), 0, 0,\n          c(a, 0.213, -0.213, -0.787), c(a, 0.715, -0.715, 0.715), c(a, 0.072, 0.928, 0.072), 0, 0,\n          0, 0, 0, 1, 0,\n          0, 0, 0, 0, 1\n        ]\n        /* eslint-enable array-element-newline */\n        break\n      }\n\n      case 'luminanceToAlpha':\n        /* eslint-disable array-element-newline */\n        matrix = [\n          0, 0, 0, 0, 0,\n          0, 0, 0, 0, 0,\n          0, 0, 0, 0, 0,\n          0.2125, 0.7154, 0.0721, 0, 0,\n          0, 0, 0, 0, 1\n        ]\n        /* eslint-enable array-element-newline */\n        break\n\n      default:\n    }\n\n    this.matrix = matrix\n    this.includeOpacity = this.getAttribute('includeOpacity').hasValue()\n  }\n\n  apply(\n    ctx: RenderingContext2D,\n    _x: number,\n    _y: number,\n    width: number,\n    height: number\n  ) {\n    // assuming x==0 && y==0 for now\n    const {\n      includeOpacity,\n      matrix\n    } = this\n    const srcData = ctx.getImageData(0, 0, width, height)\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        const r = imGet(srcData.data, x, y, width, height, 0)\n        const g = imGet(srcData.data, x, y, width, height, 1)\n        const b = imGet(srcData.data, x, y, width, height, 2)\n        const a = imGet(srcData.data, x, y, width, height, 3)\n        let nr = m(matrix, 0, r) + m(matrix, 1, g) + m(matrix, 2, b) + m(matrix, 3, a) + m(matrix, 4, 1)\n        let ng = m(matrix, 5, r) + m(matrix, 6, g) + m(matrix, 7, b) + m(matrix, 8, a) + m(matrix, 9, 1)\n        let nb = m(matrix, 10, r) + m(matrix, 11, g) + m(matrix, 12, b) + m(matrix, 13, a) + m(matrix, 14, 1)\n        let na = m(matrix, 15, r) + m(matrix, 16, g) + m(matrix, 17, b) + m(matrix, 18, a) + m(matrix, 19, 1)\n\n        if (includeOpacity) {\n          nr = 0\n          ng = 0\n          nb = 0\n          na *= a / 255\n        }\n\n        imSet(srcData.data, x, y, width, height, 0, nr)\n        imSet(srcData.data, x, y, width, height, 1, ng)\n        imSet(srcData.data, x, y, width, height, 2, nb)\n        imSet(srcData.data, x, y, width, height, 3, na)\n      }\n    }\n\n    ctx.clearRect(0, 0, width, height)\n    ctx.putImageData(srcData, 0, 0)\n  }\n}\n", "import { RenderingContext2D } from '../types'\nimport { BoundingBox } from '../BoundingBox'\nimport { Element } from './Element'\nimport { PathElement } from './PathElement'\nimport { FeColorMatrixElement } from './FeColorMatrixElement'\n\nexport class MaskElement extends Element {\n  static ignoreStyles = [\n    'mask',\n    'transform',\n    'clip-path'\n  ]\n\n  override type = 'mask'\n\n  apply(ctx: RenderingContext2D, element: Element) {\n    const { document } = this\n    // render as temp svg\n    let x = this.getAttribute('x').getPixels('x')\n    let y = this.getAttribute('y').getPixels('y')\n    let width = this.getStyle('width').getPixels('x')\n    let height = this.getStyle('height').getPixels('y')\n\n    if (!width && !height) {\n      const boundingBox = new BoundingBox()\n\n      this.children.forEach((child: PathElement) => {\n        boundingBox.addBoundingBox(child.getBoundingBox(ctx))\n      })\n\n      x = Math.floor(boundingBox.x1)\n      y = Math.floor(boundingBox.y1)\n      width = Math.floor(boundingBox.width)\n      height = Math.floor(boundingBox.height)\n    }\n\n    const ignoredStyles = this.removeStyles(element, MaskElement.ignoreStyles)\n    const maskCanvas = document.createCanvas(x + width, y + height)\n    const maskCtx = maskCanvas.getContext('2d')\n\n    document.screen.setDefaults(maskCtx)\n    this.renderChildren(maskCtx)\n\n    // convert mask to alpha with a fake node\n    // TODO: refactor out apply from feColorMatrix\n    new FeColorMatrixElement(\n      document,\n      ({\n        nodeType: 1,\n        childNodes: [],\n        attributes: [\n          {\n            nodeName: 'type',\n            value: 'luminanceToAlpha'\n          },\n          {\n            nodeName: 'includeOpacity',\n            value: 'true'\n          }\n        ]\n      }) as unknown as HTMLElement\n    ).apply(maskCtx, 0, 0, x + width, y + height)\n\n    const tmpCanvas = document.createCanvas(x + width, y + height)\n    const tmpCtx = tmpCanvas.getContext('2d')\n\n    document.screen.setDefaults(tmpCtx)\n    element.render(tmpCtx)\n\n    tmpCtx.globalCompositeOperation = 'destination-in'\n    tmpCtx.fillStyle = maskCtx.createPattern(maskCanvas as CanvasImageSource, 'no-repeat')\n    tmpCtx.fillRect(0, 0, x + width, y + height)\n\n    ctx.fillStyle = tmpCtx.createPattern(tmpCanvas as CanvasImageSource, 'no-repeat')\n    ctx.fillRect(0, 0, x + width, y + height)\n\n    // reassign mask\n    this.restoreStyles(element, ignoredStyles)\n  }\n\n  override render(_: RenderingContext2D) {\n    // NO RENDER\n  }\n}\n", "import { RenderingContext2D } from '../types'\nimport { Transform } from '../Transform'\nimport { Element } from './Element'\nimport { UseElement } from './UseElement'\n\nconst noop = () => {\n  // NOOP\n}\n\nexport class ClipPathElement extends Element {\n  override type = 'clipPath'\n\n  apply(ctx: RenderingContext2D) {\n    const { document } = this\n    const contextProto = Reflect.getPrototypeOf(ctx) as RenderingContext2D | null\n    const {\n      beginPath,\n      closePath\n    } = ctx\n\n    if (contextProto) {\n      contextProto.beginPath = noop\n      contextProto.closePath = noop\n    }\n\n    Reflect.apply(beginPath, ctx, [])\n\n    this.children.forEach((child: Element | UseElement) => {\n      if (!('path' in child)) {\n        return\n      }\n\n      let transform = 'elementTransform' in child\n        ? child.elementTransform()\n        : null // handle <use />\n\n      if (!transform) {\n        transform = Transform.fromElement(document, child)\n      }\n\n      if (transform) {\n        transform.apply(ctx)\n      }\n\n      child.path(ctx)\n\n      if (contextProto) {\n        contextProto.closePath = closePath\n      }\n\n      if (transform) {\n        transform.unapply(ctx)\n      }\n    })\n\n    Reflect.apply(closePath, ctx, [])\n    ctx.clip()\n\n    if (contextProto) {\n      contextProto.beginPath = beginPath\n      contextProto.closePath = closePath\n    }\n  }\n\n  override render(_: RenderingContext2D) {\n    // NO RENDER\n  }\n}\n", "import { RenderingContext2D } from '../types'\nimport { Element } from './Element'\nimport { PathElement } from './PathElement'\nimport { FeGaussianBlurElement } from './FeGaussianBlurElement'\n\nexport class FilterElement extends Element {\n  static ignoreStyles = [\n    'filter',\n    'transform',\n    'clip-path'\n  ]\n\n  override type = 'filter'\n\n  apply(ctx: RenderingContext2D, element: Element | PathElement) {\n    // render as temp svg\n    const {\n      document,\n      children\n    } = this\n    const boundingBox = 'getBoundingBox' in element\n      ? element.getBoundingBox(ctx)\n      : null\n\n    if (!boundingBox) {\n      return\n    }\n\n    let px = 0\n    let py = 0\n\n    children.forEach((child: FeGaussianBlurElement) => {\n      const efd = child.extraFilterDistance || 0\n\n      px = Math.max(px, efd)\n      py = Math.max(py, efd)\n    })\n\n    const width = Math.floor(boundingBox.width)\n    const height = Math.floor(boundingBox.height)\n    const tmpCanvasWidth = width + 2 * px\n    const tmpCanvasHeight = height + 2 * py\n\n    if (tmpCanvasWidth < 1 || tmpCanvasHeight < 1) {\n      return\n    }\n\n    const x = Math.floor(boundingBox.x)\n    const y = Math.floor(boundingBox.y)\n    const ignoredStyles = this.removeStyles(element, FilterElement.ignoreStyles)\n    const tmpCanvas = document.createCanvas(tmpCanvasWidth, tmpCanvasHeight)\n    const tmpCtx = tmpCanvas.getContext('2d')\n\n    document.screen.setDefaults(tmpCtx)\n    tmpCtx.translate(-x + px, -y + py)\n    element.render(tmpCtx)\n\n    // apply filters\n    children.forEach((child: FeGaussianBlurElement) => {\n      if (typeof child.apply === 'function') {\n        child.apply(\n          tmpCtx,\n          0,\n          0,\n          tmpCanvasWidth,\n          tmpCanvasHeight\n        )\n      }\n    })\n\n    // render on me\n    ctx.drawImage(\n      tmpCanvas,\n      0,\n      0,\n      tmpCanvasWidth,\n      tmpCanvasHeight,\n      x - px,\n      y - py,\n      tmpCanvasWidth,\n      tmpCanvasHeight\n    )\n\n    this.restoreStyles(element, ignoredStyles)\n  }\n\n  override render(_: RenderingContext2D) {\n    // NO RENDER\n  }\n}\n", "import { RenderingContext2D } from '../types'\nimport { Document } from './Document'\nimport { Element } from './Element'\n\nexport class FeDropShadowElement extends Element {\n  override type = 'feDropShadow'\n\n  constructor(\n    document: Document,\n    node: HTMLElement,\n    captureTextNodes?: boolean\n  ) {\n    super(document, node, captureTextNodes)\n\n    this.addStylesFromStyleDefinition()\n  }\n\n  apply(\n    _: RenderingContext2D,\n    _x: number,\n    _y: number,\n    _width: number,\n    _height: number\n  ) {\n    // TODO: implement\n  }\n}\n", "import { RenderingContext2D } from '../types'\nimport { Element } from './Element'\n\nexport class FeMorphologyElement extends Element {\n  override type = 'feMorphology'\n\n  apply(\n    _: RenderingContext2D,\n    _x: number,\n    _y: number,\n    _width: number,\n    _height: number\n  ) {\n    // TODO: implement\n  }\n}\n", "import { RenderingContext2D } from '../types'\nimport { Element } from './Element'\n\nexport class FeCompositeElement extends Element {\n  override type = 'feComposite'\n\n  apply(\n    _: RenderingContext2D,\n    _x: number,\n    _y: number,\n    _width: number,\n    _height: number\n  ) {\n    // TODO: implement\n  }\n}\n", "import { canvasRGBA } from 'stackblur-canvas'\nimport { RenderingContext2D } from '../types'\nimport { Document } from './Document'\nimport { Element } from './Element'\n\nexport class FeGaussianBlurElement extends Element {\n  override type = 'feGaussianBlur'\n  readonly extraFilterDistance: number\n  protected readonly blurRadius: number\n\n  constructor(\n    document: Document,\n    node: HTMLElement,\n    captureTextNodes?: boolean\n  ) {\n    super(document, node, captureTextNodes)\n\n    this.blurRadius = Math.floor(this.getAttribute('stdDeviation').getNumber())\n    this.extraFilterDistance = this.blurRadius\n  }\n\n  apply(\n    ctx: RenderingContext2D,\n    x: number,\n    y: number,\n    width: number,\n    height: number\n  ) {\n    const {\n      document,\n      blurRadius\n    } = this\n    const body = document.window\n      ? document.window.document.body\n      : null\n    const canvas = ctx.canvas as HTMLCanvasElement\n\n    // StackBlur requires canvas be on document\n    canvas.id = document.getUniqueId()\n\n    if (body) {\n      canvas.style.display = 'none'\n      body.appendChild(canvas)\n    }\n\n    canvasRGBA(canvas, x, y, width, height, blurRadius)\n\n    if (body) {\n      body.removeChild(canvas)\n    }\n  }\n}\n", "import { Element } from './Element'\n\nexport class TitleElement extends Element {\n  override type = 'title'\n}\n", "import { Element } from './Element'\n\nexport class DescElement extends Element {\n  override type = 'desc'\n}\n", "import { Element } from './Element'\nimport { UnknownElement } from './UnknownElement'\nimport { RenderedElement } from './RenderedElement'\nimport { PathElement } from './PathElement'\nimport { SVGElement } from './SVGElement'\nimport { RectElement } from './RectElement'\nimport { CircleElement } from './CircleElement'\nimport { EllipseElement } from './EllipseElement'\nimport { LineElement } from './LineElement'\nimport { PolylineElement } from './PolylineElement'\nimport { PolygonElement } from './PolygonElement'\nimport { PatternElement } from './PatternElement'\nimport { MarkerElement } from './MarkerElement'\nimport { DefsElement } from './DefsElement'\nimport { GradientElement } from './GradientElement'\nimport { LinearGradientElement } from './LinearGradientElement'\nimport { RadialGradientElement } from './RadialGradientElement'\nimport { StopElement } from './StopElement'\nimport { AnimateElement } from './AnimateElement'\nimport { AnimateColorElement } from './AnimateColorElement'\nimport { AnimateTransformElement } from './AnimateTransformElement'\nimport { FontElement } from './FontElement'\nimport { FontFaceElement } from './FontFaceElement'\nimport { MissingGlyphElement } from './MissingGlyphElement'\nimport { GlyphElement } from './GlyphElement'\nimport { TextElement } from './TextElement'\nimport { TSpanElement } from './TSpanElement'\nimport { TRefElement } from './TRefElement'\nimport { AElement } from './AElement'\nimport { TextPathElement } from './TextPathElement'\nimport { ImageElement } from './ImageElement'\nimport { GElement } from './GElement'\nimport { SymbolElement } from './SymbolElement'\nimport { StyleElement } from './StyleElement'\nimport { UseElement } from './UseElement'\nimport { MaskElement } from './MaskElement'\nimport { ClipPathElement } from './ClipPathElement'\nimport { FilterElement } from './FilterElement'\nimport { FeDropShadowElement } from './FeDropShadowElement'\nimport { FeMorphologyElement } from './FeMorphologyElement'\nimport { FeCompositeElement } from './FeCompositeElement'\nimport { FeColorMatrixElement } from './FeColorMatrixElement'\nimport { FeGaussianBlurElement } from './FeGaussianBlurElement'\nimport { TitleElement } from './TitleElement'\nimport { DescElement } from './DescElement'\n\nexport const elements = {\n  'svg': SVGElement,\n  'rect': RectElement,\n  'circle': CircleElement,\n  'ellipse': EllipseElement,\n  'line': LineElement,\n  'polyline': PolylineElement,\n  'polygon': PolygonElement,\n  'path': PathElement,\n  'pattern': PatternElement,\n  'marker': MarkerElement,\n  'defs': DefsElement,\n  'linearGradient': LinearGradientElement,\n  'radialGradient': RadialGradientElement,\n  'stop': StopElement,\n  'animate': AnimateElement,\n  'animateColor': AnimateColorElement,\n  'animateTransform': AnimateTransformElement,\n  'font': FontElement,\n  'font-face': FontFaceElement,\n  'missing-glyph': MissingGlyphElement,\n  'glyph': GlyphElement,\n  'text': TextElement,\n  'tspan': TSpanElement,\n  'tref': TRefElement,\n  'a': AElement,\n  'textPath': TextPathElement,\n  'image': ImageElement,\n  'g': GElement,\n  'symbol': SymbolElement,\n  'style': StyleElement,\n  'use': UseElement,\n  'mask': MaskElement,\n  'clipPath': ClipPathElement,\n  'filter': FilterElement,\n  'feDropShadow': FeDropShadowElement,\n  'feMorphology': FeMorphologyElement,\n  'feComposite': FeCompositeElement,\n  'feColorMatrix': FeColorMatrixElement,\n  'feGaussianBlur': FeGaussianBlurElement,\n  'title': TitleElement,\n  'desc': DescElement\n}\n\ntype Elements = typeof elements\n\nexport type AnyElement = Elements[keyof Elements]\n\nexport {\n  Element,\n  UnknownElement,\n  RenderedElement,\n  PathElement,\n  SVGElement,\n  RectElement,\n  CircleElement,\n  EllipseElement,\n  LineElement,\n  PolylineElement,\n  PolygonElement,\n  PatternElement,\n  MarkerElement,\n  DefsElement,\n  GradientElement,\n  LinearGradientElement,\n  RadialGradientElement,\n  StopElement,\n  AnimateElement,\n  AnimateColorElement,\n  AnimateTransformElement,\n  FontElement,\n  FontFaceElement,\n  MissingGlyphElement,\n  GlyphElement,\n  TextElement,\n  TSpanElement,\n  TRefElement,\n  AElement,\n  TextPathElement,\n  ImageElement,\n  GElement,\n  SymbolElement,\n  StyleElement,\n  UseElement,\n  MaskElement,\n  ClipPathElement,\n  FilterElement,\n  FeDropShadowElement,\n  FeMorphologyElement,\n  FeCompositeElement,\n  FeColorMatrixElement,\n  FeGaussianBlurElement,\n  TitleElement,\n  DescElement\n}\n", "/* eslint-disable @typescript-eslint/no-use-before-define */\nimport { Canvg } from '../Canvg'\nimport { IScreenViewBoxConfig, Screen } from '../Screen'\nimport { Property } from '../Property'\nimport { SVGFontLoader } from '../SVGFontLoader'\nimport { Element } from './Element'\nimport { UnknownElement } from './UnknownElement'\nimport { TextNode } from './TextNode'\nimport { ImageElement } from './ImageElement'\nimport { SVGElement } from './SVGElement'\nimport {\n  AnyElement,\n  elements as elementTypes\n} from './elements'\n\n/**\n * Function to create new canvas.\n */\nexport type CreateCanvas = (width: number, height: number) => HTMLCanvasElement | OffscreenCanvas & {\n  getContext(contextId: '2d'): OffscreenCanvasRenderingContext2D\n}\n\n/**\n * Function to create new image.\n */\nexport type CreateImage = (src: string, anonymousCrossOrigin?: boolean) => Promise<CanvasImageSource>\n\nexport interface IDocumentOptions {\n  /**\n   * Default `rem` size.\n   */\n  rootEmSize?: number\n  /**\n   * Default `em` size.\n   */\n  emSize?: number\n  /**\n   * Function to create new canvas.\n   */\n  createCanvas?: CreateCanvas\n  /**\n   * Function to create new image.\n   */\n  createImage?: CreateImage\n  /**\n   * Load images anonymously.\n   */\n  anonymousCrossOrigin?: boolean\n}\n\nexport type IViewBoxConfig = Omit<IScreenViewBoxConfig, 'document'>\n\ntype DOMDocument = typeof window.document\n\nfunction createCanvas(width: number, height: number) {\n  const canvas = document.createElement('canvas')\n\n  canvas.width = width\n  canvas.height = height\n\n  return canvas\n}\n\nasync function createImage(src: string, anonymousCrossOrigin = false) {\n  const image = document.createElement('img')\n\n  if (anonymousCrossOrigin) {\n    image.crossOrigin = 'Anonymous'\n  }\n\n  return new Promise<HTMLImageElement>((resolve, reject) => {\n    image.onload = () => {\n      resolve(image)\n    }\n\n    image.onerror = (_event, _source, _lineno, _colno, error) => {\n      reject(error)\n    }\n\n    image.src = src\n  })\n}\n\nconst DEFAULT_EM_SIZE = 12\n\nexport class Document {\n  static readonly createCanvas = createCanvas\n  static readonly createImage = createImage\n  static readonly elementTypes: Record<string, AnyElement> = elementTypes\n\n  rootEmSize: number\n  documentElement?: SVGElement\n  readonly screen: Screen\n  readonly createCanvas: CreateCanvas\n  readonly createImage: CreateImage\n  readonly definitions: Map<string, Element> = new Map()\n  readonly styles: Map<string, Map<string, Property>> = new Map()\n  readonly stylesSpecificity: Map<string, string> = new Map()\n  readonly images: ImageElement[] = []\n  readonly fonts: SVGFontLoader[] = []\n  private readonly emSizeStack: number[] = []\n  private uniqueId = 0\n\n  constructor(\n    readonly canvg: Canvg,\n    {\n      rootEmSize = DEFAULT_EM_SIZE,\n      emSize = DEFAULT_EM_SIZE,\n      createCanvas = Document.createCanvas,\n      createImage = Document.createImage,\n      anonymousCrossOrigin\n    }: IDocumentOptions = {}\n  ) {\n    this.screen = canvg.screen\n    this.rootEmSize = rootEmSize\n    this.emSize = emSize\n    this.createCanvas = createCanvas\n    this.createImage = this.bindCreateImage(createImage, anonymousCrossOrigin)\n\n    this.screen.wait(() => this.isImagesLoaded())\n    this.screen.wait(() => this.isFontsLoaded())\n  }\n\n  private bindCreateImage(createImage: CreateImage, anonymousCrossOrigin?: boolean) {\n    if (typeof anonymousCrossOrigin === 'boolean') {\n      return (source: string, forceAnonymousCrossOrigin?: boolean) => createImage(\n        source,\n        typeof forceAnonymousCrossOrigin === 'boolean'\n          ? forceAnonymousCrossOrigin\n          : anonymousCrossOrigin\n      )\n    }\n\n    return createImage\n  }\n\n  get window() {\n    return this.screen.window\n  }\n\n  get fetch() {\n    return this.screen.fetch\n  }\n\n  get ctx() {\n    return this.screen.ctx\n  }\n\n  get emSize() {\n    const { emSizeStack } = this\n\n    return emSizeStack[emSizeStack.length - 1] || DEFAULT_EM_SIZE\n  }\n\n  set emSize(value: number) {\n    const { emSizeStack } = this\n\n    emSizeStack.push(value)\n  }\n\n  popEmSize() {\n    const { emSizeStack } = this\n\n    emSizeStack.pop()\n  }\n\n  getUniqueId() {\n    return `canvg${++this.uniqueId}`\n  }\n\n  isImagesLoaded() {\n    return this.images.every(_ => _.loaded)\n  }\n\n  isFontsLoaded() {\n    return this.fonts.every(_ => _.loaded)\n  }\n\n  createDocumentElement(document: DOMDocument) {\n    const documentElement = this.createElement<SVGElement>(document.documentElement)\n\n    documentElement.root = true\n    documentElement.addStylesFromStyleDefinition()\n\n    this.documentElement = documentElement\n\n    return documentElement\n  }\n\n  createElement<T extends Element>(node: HTMLElement) {\n    const elementType = node.nodeName.replace(/^[^:]+:/, '')\n    const ElementType = Document.elementTypes[elementType]\n\n    if (ElementType) {\n      return new ElementType(this, node) as T\n    }\n\n    return new UnknownElement(this, node) as T\n  }\n\n  createTextNode(node: HTMLElement) {\n    return new TextNode(this, node)\n  }\n\n  setViewBox(config: IViewBoxConfig) {\n    this.screen.setViewBox({\n      document: this,\n      ...config\n    })\n  }\n}\n", "import { RenderingContext2D } from './types'\nimport { IParserOptions, Parser } from './Parser'\nimport {\n  IScreenOptions,\n  IScreenStartOptions,\n  Screen\n} from './Screen'\nimport {\n  IDocumentOptions,\n  Document,\n  SVGElement\n} from './Document'\n\ntype DOMDocument = typeof window.document\n\nexport interface IOptions extends IParserOptions,\n  IScreenOptions,\n  IScreenStartOptions,\n  IDocumentOptions {}\n\n/**\n * SVG renderer on canvas.\n */\nexport class Canvg {\n  /**\n   * Create Canvg instance from SVG source string or URL.\n   * @param ctx - Rendering context.\n   * @param svg - SVG source string or URL.\n   * @param options - Rendering options.\n   * @returns Canvg instance.\n   */\n  static async from(\n    ctx: RenderingContext2D,\n    svg: string,\n    options: IOptions = {}\n  ) {\n    const parser = new Parser(options)\n    const svgDocument = await parser.parse(svg)\n\n    return new Canvg(ctx, svgDocument, options)\n  }\n\n  /**\n   * Create Canvg instance from SVG source string.\n   * @param ctx - Rendering context.\n   * @param svg - SVG source string.\n   * @param options - Rendering options.\n   * @returns Canvg instance.\n   */\n  static fromString(\n    ctx: RenderingContext2D,\n    svg: string,\n    options: IOptions = {}\n  ) {\n    const parser = new Parser(options)\n    const svgDocument = parser.parseFromString(svg)\n\n    return new Canvg(ctx, svgDocument, options)\n  }\n\n  /**\n   * XML/HTML parser instance.\n   */\n  readonly parser: Parser\n  /**\n   * Screen instance.\n   */\n  readonly screen: Screen\n  /**\n   * Canvg Document.\n   */\n  readonly document: Document\n  private readonly documentElement: SVGElement\n  private readonly options: IOptions\n\n  /**\n   * Main constructor.\n   * @param ctx - Rendering context.\n   * @param svg - SVG Document.\n   * @param options - Rendering options.\n   */\n  constructor(\n    ctx: RenderingContext2D,\n    svg: DOMDocument,\n    options: IOptions = {}\n  ) {\n    this.parser = new Parser(options)\n    this.screen = new Screen(ctx, options)\n    this.options = options\n\n    const document = new Document(this, options)\n    const documentElement = document.createDocumentElement(svg)\n\n    this.document = document\n    this.documentElement = documentElement\n  }\n\n  /**\n   * Create new Canvg instance with inherited options.\n   * @param ctx - Rendering context.\n   * @param svg - SVG source string or URL.\n   * @param options - Rendering options.\n   * @returns Canvg instance.\n   */\n  fork(\n    ctx: RenderingContext2D,\n    svg: string,\n    options: IOptions = {}\n  ) {\n    return Canvg.from(ctx, svg, {\n      ...this.options,\n      ...options\n    })\n  }\n\n  /**\n   * Create new Canvg instance with inherited options.\n   * @param ctx - Rendering context.\n   * @param svg - SVG source string.\n   * @param options - Rendering options.\n   * @returns Canvg instance.\n   */\n  forkString(\n    ctx: RenderingContext2D,\n    svg: string,\n    options: IOptions = {}\n  ) {\n    return Canvg.fromString(ctx, svg, {\n      ...this.options,\n      ...options\n    })\n  }\n\n  /**\n   * Document is ready promise.\n   * @returns Ready promise.\n   */\n  ready() {\n    return this.screen.ready()\n  }\n\n  /**\n   * Document is ready value.\n   * @returns Is ready or not.\n   */\n  isReady() {\n    return this.screen.isReady()\n  }\n\n  /**\n   * Render only first frame, ignoring animations and mouse.\n   * @param options - Rendering options.\n   */\n  async render(options: IScreenStartOptions = {}) {\n    this.start({\n      enableRedraw: true,\n      ignoreAnimation: true,\n      ignoreMouse: true,\n      ...options\n    })\n\n    await this.ready()\n\n    this.stop()\n  }\n\n  /**\n   * Start rendering.\n   * @param options - Render options.\n   */\n  start(options: IScreenStartOptions = {}) {\n    const {\n      documentElement,\n      screen,\n      options: baseOptions\n    } = this\n\n    screen.start(documentElement, {\n      enableRedraw: true,\n      ...baseOptions,\n      ...options\n    })\n  }\n\n  /**\n   * Stop rendering.\n   */\n  stop() {\n    this.screen.stop()\n  }\n\n  /**\n   * Resize SVG to fit in given size.\n   * @param width\n   * @param height\n   * @param preserveAspectRatio\n   */\n  resize(\n    width: number,\n    height = width,\n    preserveAspectRatio: boolean | string = false\n  ) {\n    this.documentElement.resize(width, height, preserveAspectRatio)\n  }\n}\n"],
  "mappings": "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",
  "names": ["i", "e", "bits", "i", "r", "e", "extendStatics", "d", "b", "Object", "setPrototypeOf", "__proto__", "Array", "p", "prototype", "hasOwnProperty", "call", "__extends", "TypeError", "String", "__", "this", "constructor", "create", "encodeSVGPath", "commands", "str", "isArray", "i", "length", "command", "type", "SVGPathData", "CLOSE_PATH", "HORIZ_LINE_TO", "relative", "x", "VERT_LINE_TO", "y", "MOVE_TO", "LINE_TO", "CURVE_TO", "x1", "y1", "x2", "y2", "SMOOTH_CURVE_TO", "QUAD_TO", "SMOOTH_QUAD_TO", "ARC", "Error", "rX", "rY", "xRot", "lArcFlag", "sweepFlag", "rotate", "_a", "rad", "Math", "cos", "sin", "assertNumbers", "t", "r", "_i", "numbers", "PI", "annotateArcCommand", "c", "abs", "x1_", "y1_", "testValue", "pow", "sqrt", "c_ScaleTemp", "c_Scale", "max", "cx_", "cy_", "cRot", "cX", "cY", "phi1", "atan2", "phi2", "intersectionUnitCircleLine", "a", "termSqr", "term", "SVGPathDataTransformer", "DEG", "lerp", "arcAt", "phiDeg", "bezierRoot", "x0", "x3", "EPS", "x01", "x12", "q", "PRECISION", "discriminantX4", "root", "bezierAt", "s", "TO_ABS", "INFO", "prevX", "prevY", "NORMALIZE_ST", "prevCurveC2X", "NaN", "prevCurveC2Y", "prevQuadCX", "prevQuadCY", "isNaN", "QT_TO_C", "prevQuadX1", "prevQuadY1", "f", "prevXAbs", "prevYAbs", "pathStartXAbs", "pathStartYAbs", "result", "MATRIX", "e", "pathStartX", "origX1", "origX2", "comRel", "sqr", "det", "sinRot", "cosRot", "xCurve", "yCurve", "A", "B", "C", "A1", "B1", "C1", "newXRot", "newSinRot", "newCosRot", "CLONE", "key", "roundVal", "rf", "val", "round", "normalizeZ", "normalizeH", "normalizeV", "pathStartY", "skip", "x1Rel", "y1Rel", "LINE_COMMANDS", "xRel", "yRel", "x2Rel", "y2Rel", "dX", "dY", "atan", "xOffset", "yOffset", "arc", "y0", "phiMin", "min", "deltaPhi", "partCount", "ceil", "phiStart", "phiEnd", "deltaPhi_1", "tan", "_e", "_f", "_g", "transform", "xTemp", "yTemp", "_b", "_c", "_d", "clone", "toAbs", "qtToC", "normST", "fixX", "absX", "maxX", "minX", "fixY", "absY", "maxY", "minY", "DRAWING_COMMANDS", "T", "xDerivRoots_1", "derivRoot", "yDerivRoots_1", "xRotRad", "x90", "y90", "phiMin_1", "phiMax", "normalizeXiEta", "xi", "eta", "phi", "xDerivRoots_2", "map", "yDerivRoots_2", "Infinity", "TransformableSVG", "ROUND", "TO_REL", "NORMALIZE_HVZ", "A_TO_C", "eps", "SANITIZE", "TRANSLATE", "SCALE", "ROTATE", "SKEW_X", "SKEW_Y", "X_AXIS_SYMMETRY", "Y_AXIS_SYMMETRY", "ANNOTATE_ARCS", "isWhiteSpace", "isDigit", "charCodeAt", "_super", "_this", "SVGPathDataParser", "parse", "curArgs", "canParseCommandOrComma", "SyntaxError", "finishCommand", "push", "isAArcFlag", "curCommandType", "curNumber", "isEndingDigit", "curNumberHasExp", "curNumberHasExpDigits", "curNumberHasDecimal", "Number", "COMMAND_ARG_COUNTS", "curCommandRelative", "value", "chunk", "parsedCommands_1", "getPrototypeOf", "cT", "content", "encode", "boundsTransform", "CALCULATE_BOUNDS", "transformFunction", "newCommands", "transformedCommand", "path", "parser", "finish", "obj", "e", "i", "y", "p", "r", "a", "BlurStack", "offscreen", "DOMParser", "DOMParserFallback", "preset", "window", "ignoreAnimation", "ignoreMouse", "createCanvas", "width", "height", "OffscreenCanvas", "createImage", "url", "response", "fetch", "blob", "img", "createImageBitmap", "globalThis", "Reflect", "deleteProperty", "node", "canvas", "loadImage", "compressSpaces", "str", "replace", "trimLeft", "trimRight", "toNumbers", "matches", "match", "map", "parseFloat", "toMatrixValue", "numbers", "matrix", "allUppercase", "normalizeAttributeName", "name", "test", "toLowerCase", "parseExternalUrl", "urlMatch", "exec", "normalizeColor", "color", "startsWith", "rgbParts", "normalizedColor", "num", "isFloat", "String", "Math", "round", "attributeRegex", "idRegex", "classRegex", "pseudoElementRegex", "pseudoClassWithBracketsRegex", "pseudoClassRegex", "elementRegex", "findSelectorMatch", "selector", "regex", "length", "getSelectorSpecificity", "specificity", "currentSelector", "delta", "join", "PSEUDO_ZERO", "vectorMagnitude", "v", "sqrt", "pow", "vectorsRatio", "u", "vectorsAngle", "acos", "CB1", "t", "CB2", "CB3", "CB4", "QB1", "QB2", "QB3", "Property", "empty", "document", "split", "separator", "getString", "trim", "value", "hasValue", "zeroIsValue", "isString", "regexp", "result", "isUrlDefinition", "isPixels", "asString", "endsWith", "setValue", "getValue", "def", "getNumber", "n", "getColor", "isNormalizedColor", "getDpi", "getRem", "rootEmSize", "getEm", "emSize", "getUnits", "getPixels", "axisOrIsFontSize", "processPercent", "axis", "isFontSize", "undefined", "viewPort", "screen", "min", "computeSize", "max", "getMilliseconds", "getRadians", "PI", "getDefinition", "definitions", "get", "getFillStyleDefinition", "element", "opacity", "createGradient", "ctx", "createPattern", "getHrefAttribute", "patternTransform", "getAttribute", "getTextBaseline", "key", "textBaselineMapping", "addOpacity", "len", "commas", "i", "RGBColor", "ok", "alpha", "toRGBA", "ViewPort", "clear", "viewPorts", "setCurrent", "push", "removeCurrent", "pop", "getRoot", "root", "getDefault", "getCurrent", "current", "d", "DEFAULT_VIEWPORT_WIDTH", "DEFAULT_VIEWPORT_HEIGHT", "Point", "parse", "point", "defaultValue", "x", "y", "parseScale", "scale", "parsePath", "path", "points", "pathPoints", "angleTo", "atan2", "applyTransform", "transform", "xp", "yp", "Mouse", "isWorking", "working", "start", "onClick", "onMouseMove", "onclick", "onmousemove", "stop", "hasEvents", "events", "runEvents", "eventElements", "style", "cursor", "forEach", "run", "parent", "checkPath", "isPointInPath", "checkBoundingBox", "boundingBox", "isPointInBox", "mapXY", "offsetLeft", "offsetTop", "offsetParent", "scrollX", "scrollY", "event", "clientX", "clientY", "type", "eventTarget", "bind", "defaultWindow", "defaultFetch", "Screen", "wait", "checker", "waits", "ready", "readyPromise", "Promise", "resolve", "isReady", "isReadyLock", "every", "_", "resolveReady", "setDefaults", "strokeStyle", "lineCap", "lineJoin", "miterLimit", "setViewBox", "aspectRatio", "desiredWidth", "desiredHeight", "minX", "minY", "refX", "refY", "clip", "clipX", "clipY", "cleanAspectRatio", "aspectRatioAlign", "aspectRatioMeetOrSlice", "align", "meetOrSlice", "scaleX", "scaleY", "scaleMin", "scaleMax", "finalDesiredWidth", "finalDesiredHeight", "refXProp", "refYProp", "hasRefs", "translate", "scaledClipX", "scaledClipY", "beginPath", "moveTo", "lineTo", "closePath", "isMeetMinY", "isSliceMaxY", "isMeetMinX", "isSliceMaxX", "enableRedraw", "ignoreDimensions", "ignoreClear", "forceRedraw", "scaleWidth", "scaleHeight", "offsetX", "offsetY", "mouse", "frameDuration", "FRAMERATE", "render", "now", "Date", "then", "tick", "shouldUpdate", "intervalId", "requestAnimationFrame", "cancel", "animations", "reduce", "animation", "update", "isFirstRender", "widthStyle", "getStyle", "heightStyle", "cWidth", "clientWidth", "cHeight", "clientHeight", "viewBox", "xRatio", "yRatio", "isNaN", "transformStyle", "clearRect", "Error", "MAX_VIRTUAL_PIXELS", "DefaultDOMParser", "Parser", "resource", "parseFromString", "load", "xml", "parser", "checkDocument", "err", "parserError", "getElementsByTagName", "textContent", "text", "Translate", "apply", "unapply", "applyToPoint", "Rotate", "cx", "cy", "originX", "originY", "angle", "tx", "ty", "rotate", "rad", "cos", "sin", "transformOrigin", "Scale", "scaleSize", "Matrix", "a", "b", "c", "e", "f", "g", "h", "det", "Skew", "skew", "SkewX", "tan", "SkewY", "parseTransforms", "parseTransform", "Transform", "fromElement", "transformOriginXProperty", "transformOriginYProperty", "transforms", "data", "TransformType", "transformTypes", "skewX", "skewY", "Element", "createIfNotExists", "attr", "attributes", "set", "href", "skipAncestors", "styles", "parentStyle", "save", "mask", "applyEffects", "filter", "setContext", "renderChildren", "clearContext", "restore", "clipPathStyleProp", "children", "child", "addChild", "childNode", "createElement", "ignoreChildTypes", "includes", "matchesSelector", "styleClasses", "some", "styleClass", "addStylesFromStyleDefinition", "stylesSpecificity", "styleProp", "existingSpecificity", "removeStyles", "ignoreStyles", "toRestore", "restoreStyles", "isFirstChild", "indexOf", "captureTextNodes", "Map", "animationFrozen", "animationFrozenValue", "nodeType", "Array", "from", "attribute", "nodeName", "id", "has", "childNodes", "textNode", "createTextNode", "getText", "UnknownElement", "wrapFontFamily", "fontFamily", "trimmed", "prepareFontFamily", "process", "prepareFontStyle", "fontStyle", "targetFontStyle", "prepareFontWeight", "fontWeight", "targetFontWeight", "Font", "font", "inherit", "fontVariant", "fontSize", "parts", "part", "variants", "weights", "toString", "inheritFont", "BoundingBox", "x1", "y1", "x2", "y2", "addPoint", "addX", "addY", "addBoundingBox", "sumCubic", "p0", "p1", "p2", "p3", "bezierCurveAdd", "forX", "b2ac", "t1", "t2", "addBezierCurve", "p0x", "p0y", "p1x", "p1y", "p2x", "p2y", "p3x", "p3y", "addQuadraticCurve", "cp1x", "cp1y", "cp2x", "cp2y", "Number", "NaN", "RenderedElement", "calculateOpacity", "opacityStyle", "fromMeasure", "fillStyleProp", "fillOpacityStyleProp", "strokeStyleProp", "strokeOpacityProp", "fillStyle", "strokeWidthStyleProp", "newLineWidth", "lineWidth", "strokeLinecapStyleProp", "strokeLinejoinStyleProp", "strokeMiterlimitProp", "strokeDasharrayStyleProp", "strokeDashoffsetProp", "gaps", "setLineDash", "webkitLineDash", "mozDash", "offset", "lineDashOffset", "webkitLineDashOffset", "mozDashOffset", "modifiedEmSizeStack", "fontStyleProp", "fontStyleStyleProp", "fontVariantStyleProp", "fontWeightStyleProp", "fontSizeStyleProp", "fontFamilyStyleProp", "globalAlpha", "popEmSize", "TextElement", "textBaseline", "initializeCoordinates", "leafTexts", "textChunkStart", "POSITIVE_INFINITY", "maxX", "NEGATIVE_INFINITY", "getBoundingBox", "getTElementBoundingBox", "adjustChildCoordinatesRecursive", "childBoundingBox", "getChildBoundingBox", "getFontSize", "inheritFontSize", "measureText", "getGlyph", "char", "glyph", "isArabic", "prevChar", "nextChar", "arabicForm", "arabicGlyphs", "glyphs", "missingGlyph", "getTextFromNode", "parentNode", "index", "lastIndex", "renderTElementChildren", "renderChild", "renderText", "customFont", "unitsPerEm", "fontFace", "ctxFont", "isRTL", "reverse", "dx", "lw", "horizAdvX", "fillText", "strokeText", "applyAnchoring", "firstElement", "textAnchor", "shift", "adjustChildCoordinatesRecursiveCore", "textParent", "adjustChildCoordinates", "xAttr", "yAttr", "dxAttr", "dyAttr", "Boolean", "getInheritedAttribute", "measureCache", "measure", "measureTargetText", "targetText", "parentAttr", "TSpanElement", "TextNode", "PathParser", "SVGPathData", "reset", "command", "previousCommand", "control", "angles", "isEnd", "commands", "next", "getPoint", "xProp", "yProp", "makeAbsolute", "getAsControlPoint", "getAsCurrentPoint", "getReflectedControlPoint", "CURVE_TO", "SMOOTH_CURVE_TO", "QUAD_TO", "SMOOTH_QUAD_TO", "ox", "oy", "relative", "addMarker", "priorTo", "addMarkerAngle", "getMarkerPoints", "getMarkerAngles", "j", "PathElement", "pathParser", "MOVE_TO", "pathM", "LINE_TO", "pathL", "HORIZ_LINE_TO", "pathH", "VERT_LINE_TO", "pathV", "pathC", "pathS", "pathQ", "pathT", "ARC", "pathA", "CLOSE_PATH", "pathZ", "_ctx", "getMarkers", "markers", "fillRuleStyleProp", "fill", "setTransform", "stroke", "markersLastIndex", "markerStartStyleProp", "markerMidStyleProp", "markerEndStyleProp", "marker", "controlPoint", "currentPoint", "bezierCurveTo", "quadraticCurveTo", "rX", "rY", "xRot", "lArcFlag", "sweepFlag", "xAxisRotation", "currp", "l", "s", "cpp", "centp", "a1", "ad", "dir", "ah", "halfWay", "r", "sx", "sy", "arc", "SVGElement", "getComputedStyle", "getPropertyValue", "fontSizeProp", "refXAttr", "refYAttr", "viewBoxAttr", "resize", "preserveAspectRatio", "widthAttr", "heightAttr", "styleAttr", "originWidth", "originHeight", "preserveAspectRatioAttr", "RectElement", "rxAttr", "ryAttr", "rx", "ry", "KAPPA", "CircleElement", "EllipseElement", "LineElement", "getPoints", "x0", "y0", "PolylineElement", "PolygonElement", "PatternElement", "parentOpacityProp", "patternSvg", "patternCanvas", "patternCtx", "getContext", "delete", "pattern", "MarkerElement", "orient", "markerUnits", "markerSvg", "DefsElement", "GElement", "GradientElement", "getGradientUnits", "stopsContainer", "inheritStopContainer", "stops", "gradient", "getGradient", "addParentOpacity", "addColorStop", "rootView", "rect", "group", "attributesToInherit", "attributeToInherit", "colorProp", "LinearGradientElement", "isBoundingBoxUnits", "createLinearGradient", "RadialGradientElement", "fx", "fy", "fr", "createRadialGradient", "StopElement", "stopOpacity", "stopColor", "AnimateElement", "getProperty", "attributeType", "attributeName", "calcValue", "initialUnits", "progress", "to", "getProgress", "newValue", "prop", "initialValue", "duration", "maxDuration", "frozen", "removed", "updated", "begin", "typeAttr", "values", "p", "lb", "floor", "ub", "ceil", "valuesAttr", "AnimateColorElement", "colorFrom", "colorTo", "AnimateTransformElement", "transformFrom", "transformTo", "FontFaceElement", "ascent", "descent", "GlyphElement", "unicode", "MissingGlyphElement", "FontElement", "fontFamilyStyle", "arabicGlyph", "TRefElement", "firstChild", "AElement", "hasText", "open", "TextPathElement", "dataArray", "theta", "dTheta", "psi", "fs", "setTextData", "textDecoration", "glyphInfo", "rotation", "partialText", "getLetterSpacingAt", "idx", "letterSpacingCache", "findSegmentToFitChar", "anchor", "textFullWidth", "fullPathWidth", "spacesNumber", "inputOffset", "dy", "charI", "glyphWidth", "splineStep", "textHeight", "getEquidistantPointOnPath", "segment", "dyX", "dyY", "measuresCache", "chars", "thisSpacing", "parentSpacing", "letterSpacing", "textLen", "dxSum", "acc", "cur", "textWidth", "getPathLength", "startOffset", "nextOffset", "parsePathData", "pathLength", "pathCommands", "startX", "startY", "nextCommandType", "calcLength", "commandType", "getLineLength", "getPointOnCubicBezier", "getPointOnQuadraticBezier", "end", "inc", "abs", "getPointOnEllipticalArc", "getPointOnLine", "dist", "fromX", "fromY", "m", "rise", "pt", "ix", "iy", "pRise", "pRun", "getPointOnPath", "distance", "fullLen", "cumulativePathLength", "currentT", "pct", "p4x", "p4y", "cosPsi", "sinPsi", "buildEquidistantCache", "inputStep", "inputPrecision", "precision", "step", "equidistantCache", "targetDistance", "pathElement", "dataUriRegex", "ImageElement", "image", "console", "error", "loaded", "loadSvg", "atob", "decodeURIComponent", "svg", "subDocument", "canvg", "forkString", "documentElement", "complete", "drawImage", "isSvg", "images", "SymbolElement", "SVGFontLoader", "svgDocument", "fonts", "fontNode", "StyleElement", "css", "cssDefs", "cssParts", "cssClasses", "cssProps", "cssClass", "props", "cssProp", "substr", "srcs", "src", "UseElement", "tempSvg", "oldParent", "elementTransform", "cachedElement", "imGet", "_height", "rgba", "imSet", "val", "mi", "m1", "m2", "m3", "FeColorMatrixElement", "_x", "_y", "includeOpacity", "srcData", "getImageData", "nr", "ng", "nb", "na", "putImageData", "MaskElement", "ignoredStyles", "maskCanvas", "maskCtx", "tmpCanvas", "tmpCtx", "globalCompositeOperation", "fillRect", "noop", "ClipPathElement", "contextProto", "getPrototypeOf", "FilterElement", "px", "py", "efd", "extraFilterDistance", "tmpCanvasWidth", "tmpCanvasHeight", "FeDropShadowElement", "_width", "FeMorphologyElement", "FeCompositeElement", "FeGaussianBlurElement", "blurRadius", "body", "getUniqueId", "display", "appendChild", "canvasRGBA", "removeChild", "TitleElement", "DescElement", "elements", "anonymousCrossOrigin", "crossOrigin", "reject", "onload", "onerror", "_event", "_source", "_lineno", "_colno", "DEFAULT_EM_SIZE", "Document", "bindCreateImage", "source", "forceAnonymousCrossOrigin", "emSizeStack", "uniqueId", "isImagesLoaded", "isFontsLoaded", "createDocumentElement", "elementType", "ElementType", "elementTypes", "config", "Canvg", "options", "fromString", "fork", "baseOptions"]
}
